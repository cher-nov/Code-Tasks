<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN">
<html><head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta name="X-Csrf-Token" content="e5b20a2bf6549539399dc85fa92562fe">
    <meta id="viewport" name="viewport" content="width=device-width, initial-scale=0.01">
    <script type="text/javascript" async="" src="tasks_files/ga.js"></script><script type="text/javascript" src="tasks_files/jquery-1.js"></script>
    <script type="application/javascript">
        function adjustViewport() {
            var screenWidthPx = Math.min($(window).width(), window.screen.width);
            var siteWidthPx = 1100; // min width of site
            var ratio = Math.min(screenWidthPx / siteWidthPx, 1.0);
            var viewport = "width=device-width, initial-scale=" + ratio;
            $('#viewport').attr('content', viewport);
            var style = $('<style>html * { max-height: 1000000px; }</style>');
            $('html > head').append(style);
        }

        if ( /Android|webOS|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent) ) {
            adjustViewport();
        }
    </script>
    <meta http-equiv="pragma" content="no-cache">
    <meta http-equiv="expires" content="-1">
    <meta http-equiv="profileName" content="p1">
    <meta name="google-site-verification" content="OTd2dN5x4nS4OPknPI9JFg36fKxjqY0i1PSfFPv_J90">
    <meta property="fb:admins" content="100001352546622">
    <meta property="og:image" content="http://st.codeforces.com/s/87055/images/codeforces-telegram-square.png">
    <link rel="image_src" href="http://st.codeforces.com/s/87055/images/codeforces-telegram-square.png">
    <meta property="og:title" content="Задачи - Codeforces">
    <meta property="og:description" content="">
    
    <meta property="og:site_name" content="Codeforces">
    
    
    
    
    
    <meta name="utc_offset" content="+03:00">
    <meta name="verify-reformal" content="f56f99fd7e087fb6ccb48ef2">
    <title>Задачи - Codeforces</title>
        <meta name="description" content="Codeforces. Соревнования и олимпиады по информатике и программированию, сообщество программистов">
        <meta name="keywords" content="программирование информатика контест олимпиада алгоритмы c++ java графы vkcup">
    <meta name="robots" content="index, follow">

    <link rel="stylesheet" href="tasks_files/font-awesome.css" type="text/css" charset="utf-8">

        <link href="tasks_files/css.css" rel="stylesheet" type="text/css">
        <link href="tasks_files/css_002.css" rel="stylesheet" type="text/css">


    <link rel="shortcut icon" type="image/png" href="http://st.codeforces.com/s/87055/favicon.png">

    <!--CombineResourcesFilter-->
    <link rel="stylesheet" href="tasks_files/prettify.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/clear.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/style_003.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/ttypography.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/problem-statement.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/second-level-menu.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/roundbox.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/datatable.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/table-form.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/topic.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/jquery_002.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/facebox.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/jquery_004.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/jquery_003.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/codeforces.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/colorbox.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/jquery.css" type="text/css" charset="utf-8">
        <link rel="stylesheet" href="tasks_files/community.css" type="text/css" charset="utf-8">
        <link rel="stylesheet" href="tasks_files/sidebar-menu.css" type="text/css" charset="utf-8">

    <script type="text/javascript" src="tasks_files/prettify.js"></script>
    <script type="text/javascript" src="tasks_files/moment.js"></script>
    <script type="text/javascript" src="tasks_files/pushstream.js"></script>
    <script type="text/javascript" src="tasks_files/jquery_013.js"></script>
    <script type="text/javascript" src="tasks_files/jquery.js"></script>
    <script type="text/javascript" src="tasks_files/jquery_011.js"></script>
    <script type="text/javascript" src="tasks_files/jquery_009.js"></script>
    <script type="text/javascript" src="tasks_files/facebox.js"></script>
    <script type="text/javascript" src="tasks_files/jquery_003.js"></script>
    <script type="text/javascript" src="tasks_files/wysiwyg_002.js"></script>
    <script type="text/javascript" src="tasks_files/wysiwyg.js"></script>
    <script type="text/javascript" src="tasks_files/wysiwyg_004.js"></script>
    <script type="text/javascript" src="tasks_files/wysiwyg_003.js"></script>
    <script type="text/javascript" src="tasks_files/jquery_006.js"></script>
    <script type="text/javascript" src="tasks_files/jquery_005.js"></script>
    <script type="text/javascript" src="tasks_files/jquery_008.js"></script>
    <script type="text/javascript" src="tasks_files/jquery_010.js"></script>
    <script type="text/javascript" src="tasks_files/jquery_012.js"></script>
    <script type="text/javascript" src="tasks_files/jquery_002.js"></script>
    <script type="text/javascript" src="tasks_files/sjcl.js"></script>
    <script type="text/javascript" src="tasks_files/codeforces-options.js"></script>
    <script type="text/javascript" src="tasks_files/codeforces.js"></script>
    <!--/CombineResourcesFilter-->

    <link rel="stylesheet" href="tasks_files/style.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/style_002.css" type="text/css" charset="utf-8">

    <script type="text/javascript" src="tasks_files/share.js" charset="utf-8"></script>

    <script type="text/javascript" src="tasks_files/jquery_007.js"></script>
    <script type="text/javascript" src="tasks_files/set.js"></script>

    <!--[if IE]>
    <style>
        #sidebar {
            padding-left: 1em;
            margin: 1em 1em 1em 0;
        }
    </style>
    <![endif]-->

        <script type="text/javascript" src="tasks_files/jquery_004.js"></script>
        <script src="tasks_files/openapi.js" type="text/javascript"></script>

</head>
<body><span style="display:none;" class="csrf-token" data-csrf="e5b20a2bf6549539399dc85fa92562fe">&nbsp;</span>
<div class="button-up" style="display: none; opacity: 0.7; width: 50px; height:100%; position: fixed; left: 0; top: 0; cursor: pointer; text-align: center; line-height: 35px; color: #d3dbe4; font-weight: bold; font-size: 3.0rem;"><i class="icon-circle-arrow-up"></i></div>

<!-- Codeforces JavaScripts. -->
<script type="text/javascript">
    var queryMobile = Codeforces.queryString.mobile;
    if (queryMobile === "true" || queryMobile === "false") {
        Codeforces.putToStorage("useMobile", queryMobile == "true");
    } else {
        var useMobile = Codeforces.getFromStorage("useMobile");
        if (useMobile === true || useMobile === false) {
            if (useMobile != false) {
                Codeforces.redirect(Codeforces.updateUrlParameter(document.location.href, "mobile", useMobile));
            }
        }
    }
</script>
<script type="text/javascript">
    VK.init({apiId: 1961905});
</script>
<script type="text/javascript">
    if (window.parent.frames.length > 0) {
        window.stop();
    }
</script>

    <script type="text/javascript">
        $(document).ready(function () {
    (function () {
        jQuery.expr[':'].containsCI = function(elem, index, match) {
            return !match || !match.length || match.length < 4 || !match[3] || (
                    elem.textContent || elem.innerText || jQuery(elem).text() || ''
            ).toLowerCase().indexOf(match[3].toLowerCase()) >= 0;
        }
    }(jQuery));

    $.ajaxPrefilter(function(options, originalOptions, xhr) {
        var csrf = Codeforces.getCsrfToken();

        if (csrf) {
            var data = originalOptions.data;
            if (originalOptions.data !== undefined) {
                if (Object.prototype.toString.call(originalOptions.data) === '[object String]') {
                    data = $.deparam(originalOptions.data);
                }
            } else {
                data = {};
            }
            options.data = $.param($.extend(data, { csrf_token: csrf }));
        }
    });

    window.getCodeforcesServerTime = function(callback) {
        $.post("/data/time", {}, callback, "json");
    }

    window.updateTypography = function () {
        $("div.ttypography code").addClass("tt");
        $("div.ttypography pre>code").addClass("prettyprint").removeClass("tt");
        $("div.ttypography table").addClass("bordertable");
        prettyPrint();
    }

    $.ajaxSetup({ scriptCharset: "utf-8" ,contentType: "application/x-www-form-urlencoded; charset=UTF-8", headers: {
        'X-Csrf-Token': Codeforces.getCsrfToken()
    }});

    window.updateTypography();

    Codeforces.signForms();

    setTimeout(function() {
        $(".second-level-menu-list").lavaLamp({
            fx: "backout",
            speed: 1000
        });
    }, 0);


    Codeforces.countdown();
    $("a[rel='photobox']").colorbox();

        var count = 0;

        function getDelay() {
            var delay = 0;
            var last = Codeforces.getFromStorage("LastOnlineTimeUpdaterMillis", 0);
            if (last && last != null) {
                var period = count < 20 ? 180 * 1000 : 360 * 1000;
                delay = period - (new Date().getTime() - last);
                if (delay < 0)
                    delay = 0;
            }
            return delay;
        }

        window.setInterval(function () {
            if (getDelay() <= 0 && count < 120) {
                ++count;
                Codeforces.ping("/data/update-online");
            }
        }, 5000);

        var handle = "cher-nov";
        $("a.rated-user:contains(" + handle + "), span.participant:contains(" + handle + ")").each(function () {
            if ($(this).text() == handle) {
                var td = $(this).parent();
                var tr = $(this).parent().parent();
                if (td.is("td") && tr.is("tr")) {
                    tr.addClass("highlighted-row");
                }
            }
        });

    function showAnnouncements(json) {
        info("j=" + JSON.stringify(json));

        if (json.t != "a") {
            return;
        }
        console.log("Got announcement from channel");
        setTimeout(function() {
            Codeforces.showAnnouncements(json.d, "ru");
        }, Math.random() * 500);
    }
    if (Codeforces.getParticipantChannel()) {
        Codeforces.subscribe(Codeforces.getParticipantChannel(), function(json) {
            showAnnouncements(json);
        });
    }

    if (Codeforces.getContestChannel()) {
        Codeforces.subscribe(Codeforces.getContestChannel(), function(json) {
            showAnnouncements(json);
        });
    }

    if (Codeforces.getGlobalChannel()) {
        Codeforces.subscribe(Codeforces.getGlobalChannel(), function(json) {
            showAnnouncements(json);
        });
    }

    if (Codeforces.getUserChannel()) {
        Codeforces.subscribe(Codeforces.getUserChannel(), function(json) {
            showAnnouncements(json);
        });
    }

    $(".clickable-title").click(function() {
        Codeforces.alert($(this).attr("title"));
    }).css("position", "relative").css("bottom", "3px");


    Codeforces.reformatTimes();
    Codeforces.initializePubSub();

    Codeforces.setupSpoilers();
    Codeforces.setupTutorials("/data/problemTutorial");
        });
    </script>

<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-743380-5']);
  _gaq.push(['_trackPageview']);

  (function () {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = (document.location.protocol == 'https:' ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>


<div id="body">
<div style="width: 950px; margin: 0 auto;">
    <div id="header" style="position: relative;">
        <div style="float:left;">
                 <a href="http://codeforces.com/"><img src="tasks_files/codeforces-logo-with-telegram.png"></a>
        </div>
        <div class="lang">
            <div style="text-align: right;">
                <a href="http://codeforces.com/gym/209402/problems?locale=en"><img src="tasks_files/gb.png" title="In English" alt="In English"></a>
                <a href="http://codeforces.com/gym/209402/problems?locale=ru"><img src="tasks_files/ru.png" title="По-русски" alt="По-русски"></a>
            </div>
        </div>
        <br style="clear: both;">
    </div>

    <div style="text-align: center; font-size: 1.8rem; margin-bottom: 0.5em;" class="caption">ДВФУ. Тренировка. 16.10.2016</div>
    <div style="border-top: 1px solid #ccc; height: 1em;"></div>

        <div style="margin-bottom: 4em;page-break-after: always;">

<div class="problemindexholder" problemindex="A">
<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">A. Церемония закрытия</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Церемония закрытия Squanch Code Cup проводится в большом зале на <span class="tex-span"><i>n</i> × <i>m</i></span> человек. Сам зал состоит из <span class="tex-span"><i>n</i></span> рядов, в каждом из которых находится <span class="tex-span"><i>m</i></span> стульев. Каждый стул имеет две координаты: <span class="tex-span">(<i>x</i>, <i>y</i>)</span> (<span class="tex-span">1 ≤ <i>x</i> ≤ <i>n</i></span>, <span class="tex-span">1 ≤ <i>y</i> ≤ <i>m</i></span>). </p><p>На вход в зал столпилось две очереди: <span class="tex-span"><i>k</i></span> человек находится в точке с координатами <span class="tex-span">(0, 0)</span>, и <span class="tex-span"><i>n</i>·<i>m</i> - <i>k</i></span> человек в точке с координатами <span class="tex-span">(0, <i>m</i> + 1)</span>. У каждого человека должен быть билет на определённое место. Если у человека <span class="tex-span"><i>p</i></span> с начальными координатами <span class="tex-span">(<i>x</i>, <i>y</i>)</span> билет на место <span class="tex-span">(<i>x</i><sub class="lower-index"><i>p</i></sub>, <i>y</i><sub class="lower-index"><i>p</i></sub>)</span>, ему нужно будет пройти <span class="tex-span">|<i>x</i> - <i>x</i><sub class="lower-index"><i>p</i></sub>| + |<i>y</i> - <i>y</i><sub class="lower-index"><i>p</i></sub>|</span>.</p><p>Про
 каждого человека известна его выносливость, а именно какое максимальное
 расстояние он может пройти. Ваша задача узнать, можно ли распределить 
все билеты, чтобы каждый человек смог дойти до своего места.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>Первая строка ввода содержит два натуральных числа <span class="tex-span"><i>n</i></span> и <span class="tex-span"><i>m</i></span> (<span class="tex-span">1 ≤ <i>n</i>·<i>m</i> ≤ 10<sup class="upper-index">4</sup></span>)&nbsp;— размеры зала.</p><p>Вторая строка содержит несколько целых неотрицательных чисел. Первое число <span class="tex-span"><i>k</i></span> (<span class="tex-span">0 ≤ <i>k</i> ≤ <i>n</i>·<i>m</i></span>) обозначает число людей с начальными координатами <span class="tex-span">(0, 0)</span>. За ним следуют <span class="tex-span"><i>k</i></span> чисел, обозначающих выносливость этих людей.</p><p>Третья строка содержит несколько целых неотрицательных чисел. Первое число <span class="tex-span"><i>l</i></span> (<span class="tex-span"><i>l</i> = <i>n</i>·<i>m</i> - <i>k</i></span>) обозначает число людей с начальными координатами <span class="tex-span">(0, <i>m</i> + 1)</span> За ним следуют <span class="tex-span"><i>l</i></span> чисел, обозначающих выносливость этих людей.</p><p>Выносливость задается натуральными числами, не превышающими <span class="tex-span"><i>n</i> + <i>m</i></span>.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Если можно распределить билеты описанным способом, выведите «<span class="tex-font-style-tt">YES</span>». Иначе выведите «<span class="tex-font-style-tt">NO</span>».</p></div><div class="sample-tests"><div class="section-title">Примеры</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>2 2<br>3 3 3 2<br>1 3<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>YES<br></pre></div><div class="input"><div class="title">Входные данные</div><pre>2 2<br>3 2 3 3<br>1 2<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>NO<br></pre></div></div></div></div><p>  </p></div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");



    });
</script>
        </div>
        <div style="margin-bottom: 4em;page-break-after: always;">

<div class="problemindexholder" problemindex="B">
<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">B. Dungeons and Candies</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Во время запуска игры «Dungeons and Candies» требуется получить по сети от сервера описания <span class="tex-span"><i>k</i></span> уровней игры. Каждое описание — карта клетчатого прямоугольного поля <span class="tex-span"><i>n</i> × <i>m</i></span>, в клетках которого расположены конфеты (в каждой клетке находится не более одной конфеты). Пустая клетка обозначается символом «<span class="tex-font-style-tt">.</span>», если же в клетке находится конфета, то она кодируется буквой латинского алфавита. Уровень может содержать одинаковые конфеты, в таком случае буквы в соответствующих клетках карты будут одинаковы.</p><center> <img class="tex-graphics" src="tasks_files/bd9f8ac5dbefb059b291818969b7aa27f210112b.png" style="max-width: 100.0%;max-height: 100.0%;"> </center><p>При передачи по сети требуется минимизировать трафик — суммарный размер переданных данных. Уровни можно передавать в любом порядке. Существует два способа передать очередной уровень <span class="tex-span"><i>A</i></span>:</p><ol> <li> Можно передать уровень <span class="tex-span"><i>A</i></span> целиком. Этот способ требует передачи <span class="tex-span"><i>n</i>·<i>m</i></span> байтов по сети. </li><li> Можно передать разницу между уровнем <span class="tex-span"><i>A</i></span> и каким-то ранее переданным уровнем <span class="tex-span"><i>B</i></span>, если такой существует; эта операция требует передачи <span class="tex-span"><i>d</i><sub class="lower-index"><i>A</i>, <i>B</i></sub>·<i>w</i></span> байтов, где <span class="tex-span"><i>d</i><sub class="lower-index"><i>A</i>, <i>B</i></sub></span> обозначает количество клеток поля, которые отличаются в <span class="tex-span"><i>A</i></span> и <span class="tex-span"><i>B</i></span>, а <span class="tex-span"><i>w</i></span> — константа. Обратите внимание, что при вычислении <span class="tex-span"><i>d</i><sub class="lower-index"><i>A</i>, <i>B</i></sub></span> сравниваются соответствующие друг другу клетки уровней <span class="tex-span"><i>A</i></span> и <span class="tex-span"><i>B</i></span>. При этом карты уровней нельзя преобразовывать, например, поворачивать или смещать относительно друг друга. </li></ol><p>Ваша задача — найти способ передать все <span class="tex-span"><i>k</i></span> уровней, минимизировав трафик.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записаны четыре целых числа <span class="tex-span"><i>n</i>, <i>m</i>, <i>k</i>, <i>w</i></span> <span class="tex-span">(1 ≤ <i>n</i>, <i>m</i> ≤ 10;&nbsp;1 ≤ <i>k</i>, <i>w</i> ≤ 1000)</span>. Далее следует описание <span class="tex-span"><i>k</i></span> уровней. Каждый уровень описывается <span class="tex-span"><i>n</i></span> строками, в каждой из которых записано <span class="tex-span"><i>m</i></span> символов. Каждый символ — это либо буква латинского алфавита, либо точка («<span class="tex-font-style-tt">.</span>»). Обратите внимание, что регистр букв имеет значение.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>В первой строке выведите искомое минимальное количество переданных байтов.</p><p>Далее выведите <span class="tex-span"><i>k</i></span> пар целых чисел <span class="tex-span"><i>x</i><sub class="lower-index">1</sub>, <i>y</i><sub class="lower-index">1</sub>, <i>x</i><sub class="lower-index">2</sub>, <i>y</i><sub class="lower-index">2</sub>, ..., <i>x</i><sub class="lower-index"><i>k</i></sub>, <i>y</i><sub class="lower-index"><i>k</i></sub></span>, описывающих способ передачи уровней. Пара <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub></span>, <span class="tex-span"><i>y</i><sub class="lower-index"><i>i</i></sub></span> обозначает, что уровень <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub></span> нужно передавать способом <span class="tex-span"><i>y</i><sub class="lower-index"><i>i</i></sub></span>. Если <span class="tex-span"><i>y</i><sub class="lower-index"><i>i</i></sub></span> равно 0, значит, уровень нужно передавать первым способом, иначе <span class="tex-span"><i>y</i><sub class="lower-index"><i>i</i></sub></span> должно быть равно номеру ранее переданного уровня, разницу по сравнению с которым нужно передать. Пары выводите в порядке передачи уровней. Уровни пронумерованы от 1 до <span class="tex-span"><i>k</i></span> в порядке их описания во входных данных.</p><p>Если существует несколько оптимальных решений, разрешается вывести любое.</p></div><div class="sample-tests"><div class="section-title">Примеры</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>2 3 3 2<br>A.A<br>...<br>A.a<br>..C<br>X.Y<br>...<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>14<br>1 0<br>2 1<br>3 1<br></pre></div><div class="input"><div class="title">Входные данные</div><pre>1 1 4 1<br>A<br>.<br>B<br>.<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>3<br>1 0<br>2 0<br>4 2<br>3 0<br></pre></div><div class="input"><div class="title">Входные данные</div><pre>1 3 5 2<br>ABA<br>BBB<br>BBA<br>BAB<br>ABB<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>11<br>1 0<br>3 1<br>2 3<br>4 2<br>5 1<br></pre></div></div></div></div></div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");



    });
</script>
        </div>
        <div style="margin-bottom: 4em;page-break-after: always;">

<div class="problemindexholder" problemindex="C">
<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">C. Сложный НОД</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>1 секунда</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Наибольший общий делитель <span class="tex-span"><i>НОД</i>(<i>a</i>, <i>b</i>)</span> двух положительных целых чисел <span class="tex-span"><i>a</i></span> и <span class="tex-span"><i>b</i></span> равняется самому большому целому числу, на которое без остатка делятся оба числа <span class="tex-span"><i>a</i></span> и <span class="tex-span"><i>b</i></span>. Известны эффективные алгоритмы для нахождения <span class="tex-span"><i>НОД</i>(<i>a</i>, <i>b</i>)</span>, например, алгоритм Эвклида. Усложним требования и будем просить решить более сложную задачу&nbsp;— нужно найти <span class="tex-span"><i>НОД</i></span> среди всех чисел от <span class="tex-span"><i>a</i></span> до <span class="tex-span"><i>b</i></span> включительно.</p><p>Формально, найдите максимальное целое число, на которое без остатка делится каждое из чисел <span class="tex-span"><i>a</i>, <i>a</i> + 1, <i>a</i> + 2, ..., <i>b</i></span>. Чтобы было бы ещё сложнее, разрешим <span class="tex-span"><i>a</i></span> и <span class="tex-span"><i>b</i></span> достигать числа гугол, <span class="tex-span">10<sup class="upper-index">100</sup></span>&nbsp;— такие числа не помещаются даже в 64-битный тип целых чисел!</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В единственной строке входных данных дано два числа <span class="tex-span"><i>a</i></span> и <span class="tex-span"><i>b</i></span> (<span class="tex-span">1 ≤ <i>a</i> ≤ <i>b</i> ≤ 10<sup class="upper-index">100</sup></span>).</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите одно число&nbsp;— <span class="tex-span"><i>НОД</i></span> всех чисел от <span class="tex-span"><i>a</i></span> до <span class="tex-span"><i>b</i></span> включительно.</p></div><div class="sample-tests"><div class="section-title">Примеры</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>1 2<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>1<br></pre></div><div class="input"><div class="title">Входные данные</div><pre>61803398874989484820458683436563811772030917980576 61803398874989484820458683436563811772030917980576<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>61803398874989484820458683436563811772030917980576<br></pre></div></div></div></div><p>  </p></div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");



    });
</script>
        </div>
        <div style="margin-bottom: 4em;page-break-after: always;">

<div class="problemindexholder" problemindex="D">
<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">D. Лабиринт</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>1 секунда</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Вам задано прямоугольное клетчатое поле размером <span class="tex-span"><i>n</i> × <i>m</i></span>. Каждая клетка либо является пустой и обозначена символом "<span class="tex-font-style-tt">.</span>", либо является непроходимой (содержит препятствие) и обозначена символом "<span class="tex-font-style-tt">*</span>". Пустые клетки будем называть соседними, если они имеют общую сторону.</p><p>Компонентой связности будем называть наибольшее по включению множество свободных клеток причём между любой парой клеток в компоненте существует путь из свободных клеток такой, что любые две подряд идущие клетки в пути являются соседними. Это стандартное определение компоненты связности.</p><p>Вам нужно для каждой непроходимой клетки определить размер компоненты связности (количество клеток в компоненте), включающей эту клетку, если бы клетка была свободной. Заметим, что при определении этой величины свободной считается только та непроходимая клетка, для которой считается величина, остальные непроходимые клетки остаются таковыми.</p><p>Ответ нужно вывести в виде матрицы из <span class="tex-span"><i>n</i></span> строк и <span class="tex-span"><i>m</i></span> столбцов. В <span class="tex-span"><i>i</i></span>-й строке <span class="tex-span"><i>j</i></span>-м столбце должен находиться символ "<span class="tex-font-style-tt">.</span>", если клетка изначально была свободной и ответ в противном случае. Для удобства ответы нужно посчитать по модулю <span class="tex-span">10</span> (то есть найти остаток при делении на число <span class="tex-span">10</span>). Матрицу нужно вывести без пробелов. Для ускорения вывода рекомендуется записать каждую строку ответа в одну строку и вывести её.</p><p>Рекомендуется для ввода и вывода данных использовать функции <span class="tex-font-style-tt">scanf, printf</span> в языке <span class="tex-font-style-tt">C++</span>, поскольку они работают значительно быстрее потоков <span class="tex-font-style-tt">cin, cout</span>. Аналогично, рекомендуется использовать классы <span class="tex-font-style-tt">BufferedReader, PrintWriter</span> вместо <span class="tex-font-style-tt">Scanner, System.out</span> в языке <span class="tex-font-style-tt">Java</span>.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке находится пара целых чисел <span class="tex-span"><i>n</i>, <i>m</i></span> (<span class="tex-span">1 ≤ <i>n</i>, <i>m</i> ≤ 1000</span>) — количество строк и столбцов.</p><p>В каждой из следующих <span class="tex-span"><i>n</i></span> строк находится по <span class="tex-span"><i>m</i></span> символов: "<span class="tex-font-style-tt">.</span>" обозначает пустую клетку, "<span class="tex-font-style-tt">*</span>" обозначает непроходимую клетку.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите ответ в виде матрицы как описано в условии задачи. Для уточнения формата вывода смотрите примеры.</p></div><div class="sample-tests"><div class="section-title">Примеры</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>3 3<br>*.*<br>.*.<br>*.*<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>3.3<br>.5.<br>3.3<br></pre></div><div class="input"><div class="title">Входные данные</div><pre>4 5<br>**..*<br>..***<br>.*.*.<br>*.*.*<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>46..3<br>..732<br>.6.4.<br>5.4.3<br></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом примере, если бы центральная клетка была свободной, то она вошла бы в компоненту связности из пяти клеток (крестик). Угловые клетки, если бы были свободными образовывали бы компоненты из трёх клеток (уголки).</p></div></div></div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");



    });
</script>
        </div>
        <div style="margin-bottom: 4em;page-break-after: always;">

<div class="problemindexholder" problemindex="E">
<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">E. Электрические заряды</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Программист Саня учится в Московском физико-техническом институте (МФТИ), и для получения зачета ему нужно сдать лабораторную работу.</p><p>Лабораторная установка представляет из себя плоскость с отмеченными на ней стандартными осями координат. Физики из МФТИ зарядили оси большими электрическими зарядами: ось <span class="tex-span"><i>X</i></span> положительно, а ось <span class="tex-span"><i>Y</i></span> отрицательно.</p><p>Опытный лаборант отметил на этой плоскости <span class="tex-span"><i>n</i></span> точек с целыми координатами <span class="tex-span">(<i>x</i><sub class="lower-index"><i>i</i></sub>, <i>y</i><sub class="lower-index"><i>i</i></sub>)</span> и остановил время. Саня, используя «атомный пинцет», должен поместить в эти точки элементарные частицы. В его распоряжении есть неограниченное число электронов (отрицательно заряженных элементарных частиц) и протонов (положительно заряженных элементарных частиц). В каждую отмеченную точку он может поставить либо электрон, либо протон. После того как все отмеченные точки будут заняты, время снова пойдет, и частицы придут в движение, а через некоторое время стабилизируются в состоянии равновесия. Задача лабораторной работы&nbsp;— расставить частицы так, чтобы получить как можно более компактное состояние равновесия, а именно состояние c минимальным диаметром (максимальным расстоянием между парами точек множества).</p><p>Поскольку Саня программист, то он наивно полагает, что в результате все частицы просто «упадут» в свои проекции на соответствующие оси: электроны на ось <span class="tex-span"><i>X</i></span>, а протоны на ось <span class="tex-span"><i>Y</i></span>. Поскольку мы тоже программисты, будем придерживаться Саниной модели, то есть после включения времени <span class="tex-font-style-bf">частица из точки <span class="tex-span">(<i>x</i>, <i>y</i>)</span> попадёт в точку <span class="tex-span">(<i>x</i>, 0)</span>, если это электрон, и в точку <span class="tex-span">(0, <i>y</i>)</span>, если это протон.</span></p><p>Поскольку в лаборатории высокий радиационный фон, а Саня заботится о своем ноутбуке, он не взял его с собой и теперь не может написать программу, вычисляющую минимальный возможный диаметр итогового распределения частиц. Поэтому вам придётся сделать это за него.</p><p>В качестве ответа выведите <span class="tex-font-style-bf">квадрат</span> минимального возможного диаметра множества.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке входных данных записано единственное целое число <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 100 000</span>)&nbsp;— количество точек.</p><p>Каждая из последующих <span class="tex-span"><i>n</i></span> строк содержит два целых числа <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub></span> и <span class="tex-span"><i>y</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span"> - 10<sup class="upper-index">8</sup> ≤ <i>x</i><sub class="lower-index"><i>i</i></sub>, <i>y</i><sub class="lower-index"><i>i</i></sub> ≤ 10<sup class="upper-index">8</sup></span>)&nbsp;— координаты <span class="tex-span"><i>i</i></span>-й точки. Гарантируется, что никакие две точки не совпадают.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите одно целое число&nbsp;— квадрат минимального возможного диаметра множества, после того как Вася расставит в заданные точки электроны и протоны и лаборант включит время.</p></div><div class="sample-tests"><div class="section-title">Примеры</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>3<br>1 10<br>1 20<br>1 30<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>0<br></pre></div><div class="input"><div class="title">Входные данные</div><pre>2<br>1 10<br>10 1<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2<br></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом примере Саня помещает во все точки электроны, и все частицы в итоге попадают в одну точку <span class="tex-span">(1, 0)</span>.</p><p>Во втором примере Саня помещает в точку <span class="tex-span">(1, 10)</span> электрон, а в точку <span class="tex-span">(10, 1)</span>&nbsp;— протон. В результате получается множество из двух точек <span class="tex-span">(1, 0)</span> и <span class="tex-span">(0, 1)</span>, которое имеет диаметр <img class="tex-formula" src="tasks_files/2ab51c90d460da0abc5c722c35772dc30203dd91.png" style="max-width: 100.0%;max-height: 100.0%;" align="middle">.</p></div></div></div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");



    });
</script>
        </div>
        <div style="margin-bottom: 4em;page-break-after: always;">

<div class="problemindexholder" problemindex="F">
<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">F. НОД массива</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>3 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Вам дан массив <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> длины <span class="tex-span"><i>n</i></span>. К массиву можно последовательно применить две операции:</p><ul> <li> удалить некоторый подотрезок длины <span class="tex-span"><i>m</i> &lt; <i>n</i></span>, заплатив за это <span class="tex-span"><i>m</i>·<i>a</i></span> монет; </li><li> изменить некоторые элементы массива не более чем на <span class="tex-span">1</span>, заплатив за каждое изменение <span class="tex-span"><i>b</i></span> монет. </li></ul><p>Обратите внимание, что каждую операцию можно выполнить только по одному разу (а можно и не выполнять вовсе), то есть удалить можно только один отрезок и каждое число можно изменить (увеличить или уменьшить) не более чем на <span class="tex-span">1</span>. Дополнительно обратите внимание, что, выполняя первую операцию, мы не можем удалить весь массив.</p><p>Какое минимальное количество монет потребуется потратить, чтобы получить массив, наибольший общий делитель элементов которого больше <span class="tex-span">1</span>?</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке даны целые числа <span class="tex-span"><i>n</i></span>, <span class="tex-span"><i>a</i></span> и <span class="tex-span"><i>b</i></span> <span class="tex-span">(1 ≤ <i>n</i> ≤ 1 000 000, 0 ≤ <i>a</i>, <i>b</i> ≤ 10<sup class="upper-index">9</sup>)</span>&nbsp;— длина массива, стоимость удаления одного элемента подотрезка в первой операции и стоимость изменения одного элемента соответственно.</p><p>Во второй строке записаны n целых чисел <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">2 ≤ <i>a</i><sub class="lower-index"><i>i</i></sub> ≤ 10<sup class="upper-index">9</sup></span>)&nbsp;— элементы массива.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите единственное целое число&nbsp;— минимальную стоимость изменений, необходимых для получения массива, наибольший общий делитель элементов которого больше <span class="tex-span">1</span>.</p></div><div class="sample-tests"><div class="section-title">Примеры</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>3 1 4<br>4 2 3<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>1<br></pre></div><div class="input"><div class="title">Входные данные</div><pre>5 3 2<br>5 17 13 5 6<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>8<br></pre></div><div class="input"><div class="title">Входные данные</div><pre>8 3 4<br>3 7 5 4 3 12 9 4<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>13<br></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом тесте оптимально удалить число <span class="tex-span">3</span> и заплатить за это <span class="tex-span">1</span> монету.</p><p>Во втором тесте нужно удалить отрезок из чисел <span class="tex-span">[17, 13]</span>, а затем уменьшить число <span class="tex-span">6</span>. Стоимость изменений равна <span class="tex-span">2·3 + 2 = 8</span> монетам.</p></div></div></div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");



    });
</script>
        </div>
        <div style="margin-bottom: 4em;page-break-after: always;">

<div class="problemindexholder" problemindex="G">
<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">G. Граф и строка</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Однажды, сидя на лекции, студент Вася увидел, что на его парте написана строка <span class="tex-span"><i>s</i><sub class="lower-index">1</sub><i>s</i><sub class="lower-index">2</sub>... <i>s</i><sub class="lower-index"><i>n</i></sub></span>, состоящая только из букв «<span class="tex-font-style-tt">a</span>», «<span class="tex-font-style-tt">b</span>» и «<span class="tex-font-style-tt">c</span>». Поскольку лекция была скучной, Вася решил дополнить рисунок, построив граф <span class="tex-span"><i>G</i></span>, обладающий следующими свойствами: </p><ul> <li> <span class="tex-span"><i>G</i></span> имеет ровно <span class="tex-span"><i>n</i></span> вершин, пронумерованных от <span class="tex-span">1</span> до <span class="tex-span"><i>n</i></span>; </li><li> Любая пара вершин <span class="tex-span"><i>i</i></span> и <span class="tex-span"><i>j</i></span>, где <span class="tex-span"><i>i</i> ≠ <i>j</i></span>, соединена ребром <span class="tex-font-style-bf">тогда и только тогда</span>, когда символы <span class="tex-span"><i>s</i><sub class="lower-index"><i>i</i></sub></span> и <span class="tex-span"><i>s</i><sub class="lower-index"><i>j</i></sub></span> либо совпадают, либо являются соседними в алфавите. Так, пары букв «<span class="tex-font-style-tt">a</span>»-«<span class="tex-font-style-tt">b</span>» и «<span class="tex-font-style-tt">b</span>»-«<span class="tex-font-style-tt">c</span>» являются соседними, а пара «<span class="tex-font-style-tt">a</span>»-«<span class="tex-font-style-tt">с</span>»&nbsp;— нет. </li></ul><p>Вася нарисовал получившийся граф рядом со строкой, а саму строку стёр. На следующий день друг Васи Петя, придя на свою лекцию, обнаружил на своей парте некоторый граф. Он слышал о приключениях Васи и теперь хочет узнать, мог ли это быть тот самый граф <span class="tex-span"><i>G</i></span>, нарисованный Васей. Для этого Пете требуется знать, существует ли строка <span class="tex-span"><i>s</i></span>, по которой Вася мог построить такой граф, и если она существует, то хотелось бы получить один из возможных вариантов.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке входных данных записаны два числа <span class="tex-span"><i>n</i></span> и <span class="tex-span"><i>m</i></span> <img class="tex-formula" src="tasks_files/4a8fa7f2b69671ae2035b64774c0b305c1d26ad3.png" style="max-width: 100.0%;max-height: 100.0%;" align="middle">&nbsp;— количество вершин и рёбер в графе, обнаруженном Петей.</p><p>В следующих <span class="tex-span"><i>m</i></span> строках заданы по два целых числа <span class="tex-span"><i>u</i><sub class="lower-index"><i>i</i></sub></span> и <span class="tex-span"><i>v</i><sub class="lower-index"><i>i</i></sub></span> <span class="tex-span">(1 ≤ <i>u</i><sub class="lower-index"><i>i</i></sub>, <i>v</i><sub class="lower-index"><i>i</i></sub> ≤ <i>n</i>, <i>u</i><sub class="lower-index"><i>i</i></sub> ≠ <i>v</i><sub class="lower-index"><i>i</i></sub>)</span>, задающие рёбра графа. Гарантируется, что граф не содержит кратных рёбер, то есть любая пара вершин встречается в списке рёбер не более одного раза.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>В первой строке выведите «<span class="tex-font-style-tt">Yes</span>» (без кавычек), если искомая строка существует, и «<span class="tex-font-style-tt">No</span>» (без кавычек) в противном случае.</p><p>Если искомая строка <span class="tex-span"><i>s</i></span> существует, то выведите её во второй строке. Длина <span class="tex-span"><i>s</i></span> должна в точности равняться <span class="tex-span"><i>n</i></span>, все буквы должны быть «<span class="tex-font-style-tt">a</span>», «<span class="tex-font-style-tt">b</span>» или «<span class="tex-font-style-tt">c</span>», а построенный по этой строке граф должен совпадать с заданным во входных данных. Если существует несколько возможных ответов, то разрешается вывести любой.</p></div><div class="sample-tests"><div class="section-title">Примеры</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>2 1<br>1 2<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>Yes<br>aa<br></pre></div><div class="input"><div class="title">Входные данные</div><pre>4 3<br>1 2<br>1 3<br>1 4<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>No<br></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом примере дан граф из двух вершин, между которыми проведено ребро. Значит, эти вершины могут соответствовать как одинаковым буквам, так и соседним. Этому графу удовлетворяет любая из строк «<span class="tex-font-style-tt">aa</span>», «<span class="tex-font-style-tt">ab</span>», «<span class="tex-font-style-tt">ba</span>», «<span class="tex-font-style-tt">bb</span>», «<span class="tex-font-style-tt">bc</span>», «<span class="tex-font-style-tt">cb</span>» и «<span class="tex-font-style-tt">cc</span>».</p><p>Во втором примере первая вершина соединена со всеми остальными тремя вершинами, но эти три вершины не соединены между собой. Это значит, что они должны соответствовать различным буквам, не являющимся соседними, а это невозможно.</p></div></div></div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");



    });
</script>
        </div>
        <div style="margin-bottom: 4em;page-break-after: always;">

<div class="problemindexholder" problemindex="H">
<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">H. Codeforces World Finals</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Царю Цопе много раз докладывали о стремительно набирающем популярность сайте Codeforces, на котором собираются светлейшие умы нашего человечества, — ради тренировки и дальнейшего просветления своих умов. И Цопа недавно осознал: если он хочет поработить весь мир, то для этого ему необходимо отдать приказ организовать всемирный турнир Codeforces. Цопа уверен, — после этого его поступка все светлейшие умы добровольно перейдут в его подчинение, и самая сложная часть плана порабощения мира будет осуществлена.</p><p>Финальный раунд Codeforces World Finals 20YY назначен на дату <span class="tex-span"><i>DD</i></span>.<span class="tex-span"><i>MM</i></span>.<span class="tex-span"><i>YY</i></span>, где <span class="tex-span"><i>DD</i></span> — день проведения раунда, <span class="tex-span"><i>MM</i></span> — месяц, а <span class="tex-span"><i>YY</i></span> — последние 2 цифры года. Васе посчастливилось стать первым в истории Берляндии участником, вышедшим в финал. Но есть одна проблема: по правилам соревнования, все участники на момент финального раунда должны быть не младше 18 лет, а Вася родился в день <span class="tex-span"><i>BD</i></span>.<span class="tex-span"><i>BM</i></span>.<span class="tex-span"><i>BY</i></span>. Эта дата написана в Васином паспорте, копию которого он уже отправил организаторам соревнования. Но Вася узнал, что в разных странах форматы записи дат отличаются, например, в США обычно сначала записывается номер месяца, затем день, а потом год. Вася хочет узнать, а можно ли так переставить числа в его дате рождения, чтобы на момент <span class="tex-span"><i>DD</i></span>.<span class="tex-span"><i>MM</i></span>.<span class="tex-span"><i>YY</i></span> ему было хотя бы 18 лет. Ведь тогда он сможет сказать, что в его родной Берляндии даты записываются по-другому. Помогите ему справиться с этой задачей.</p><p>По еще одному странному правилу, участник должен родиться в том же столетии, в котором проводится финал. Допускается, если участнику исполняется 18 ровно в день финала.</p><p>Так как мы рассматриваем годы проведения финала исключительно с <span class="tex-span">2001</span> до <span class="tex-span">2099</span>, то високосным годом будем считать среди них такие, которые делятся на <span class="tex-span">4</span>.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке задана дата <span class="tex-span"><i>DD</i></span>.<span class="tex-span"><i>MM</i></span>.<span class="tex-span"><i>YY</i></span>, во второй строке задана дата <span class="tex-span"><i>BD</i></span>.<span class="tex-span"><i>BM</i></span>.<span class="tex-span"><i>BY</i></span>. Гарантируется, что обе даты корректны, и номера годов <span class="tex-span"><i>YY</i></span> и <span class="tex-span"><i>BY</i></span> всегда лежат в отрезке <span class="tex-span">[01;99]</span>.</p><p>Могло оказаться, что по паспорту Вася родился уже после финала. В этом случае он все равно может менять местами числа в дате.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Если можно переставить числа в дате рождения так, чтобы на момент <span class="tex-span"><i>DD</i></span>.<span class="tex-span"><i>MM</i></span>.<span class="tex-span"><i>YY</i></span> Васе было хотя бы 18 лет, выведите <span class="tex-font-style-tt">YES</span>. Иначе выведите <span class="tex-font-style-tt">NO</span>. </p><p>Каждое число содержит ровно две цифры, и обозначает день, месяц или год в дате. Учтите, что разрешается переставлять любые числа, но не цифры.</p></div><div class="sample-tests"><div class="section-title">Примеры</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>01.01.98<br>01.01.80<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>YES<br></pre></div><div class="input"><div class="title">Входные данные</div><pre>20.10.20<br>10.02.30<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>NO<br></pre></div><div class="input"><div class="title">Входные данные</div><pre>28.02.74<br>28.02.64<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>NO<br></pre></div></div></div></div></div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");



    });
</script>
        </div>
        <div style="margin-bottom: 4em;page-break-after: always;">

<div class="problemindexholder" problemindex="I">
<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">I. Реструктуризация компании</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>В жизни даже самой успешной компании может наступить кризисный период, когда приходится принимать тяжёлое решение о реструктуризации, распускать и объединять отделы, увольнять работников и заниматься прочими неприятными делами. Рассмотрим следующую модель компании.</p><p>В Большой Софтверной Компании работают <span class="tex-span"><i>n</i></span> человек. Каждый человек принадлежит какому-то <span class="tex-font-style-it">отделу</span>. Исходно каждый человек работает над своим проектом в своём собственном отделе (таким образом, в начале компания состоит из <span class="tex-span"><i>n</i></span> отделов по одному человеку).</p><p>Однако, в жизни компании наступили тяжёлые времена, и руководство было вынуждено нанять кризисного менеджера, который начал переустраивать рабочий процесс для повышения эффективности производства. Обозначим за <span class="tex-span"><i>team</i>(<i>person</i>)</span> команду, в которой работает человек <span class="tex-span"><i>person</i></span>. Кризисный менеджер может принимать решения двух типов:</p><ol> <li> Объединить отделы <span class="tex-span"><i>team</i>(<i>x</i>)</span> и <span class="tex-span"><i>team</i>(<i>y</i>)</span>, сформировав из них один большой отдел, содержащий всех сотрудников <span class="tex-span"><i>team</i>(<i>x</i>)</span> и <span class="tex-span"><i>team</i>(<i>y</i>)</span>, где <span class="tex-span"><i>x</i></span> и <span class="tex-span"><i>y</i></span> (<span class="tex-span">1 ≤ <i>x</i>, <i>y</i> ≤ <i>n</i></span>) — номера каких-то двух сотрудников компании. Если <span class="tex-span"><i>team</i>(<i>x</i>)</span> совпадает с <span class="tex-span"><i>team</i>(<i>y</i>)</span>, ничего делать не требуется. </li><li> Объединить отделы <span class="tex-span"><i>team</i>(<i>x</i>), <i>team</i>(<i>x</i> + 1), ..., <i>team</i>(<i>y</i>)</span>, где <span class="tex-span"><i>x</i></span> и <span class="tex-span"><i>y</i></span> (<span class="tex-span">1 ≤ <i>x</i> ≤ <i>y</i> ≤ <i>n</i></span>) — номера каких-то двух сотрудников компании. </li></ol><p>При этом кризисный менеджер иногда может интересоваться, работают ли в одном отделе сотрудники <span class="tex-span"><i>x</i></span> и <span class="tex-span"><i>y</i></span> (<span class="tex-span">1 ≤ <i>x</i>, <i>y</i> ≤ <i>n</i></span>).</p><p>Помогите кризисному менеджеру, ответив на все его запросы.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>Первая строка входных данных содержит два целых числа <span class="tex-span"><i>n</i></span> и <span class="tex-span"><i>q</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 200 000</span>, <span class="tex-span">1 ≤ <i>q</i> ≤ 500 000</span>) — количество сотрудников компании и количество запросов кризисного менеджера.</p><p>В последующих <span class="tex-span"><i>q</i></span> строках находятся запросы кризисного менеджера. Каждый запрос имеет вид <span class="tex-span"><i>type</i>&nbsp;<i>x</i>&nbsp;<i>y</i></span>, где <img class="tex-formula" src="tasks_files/ba6efc09efd6adafc4c422ac7109f3e7a4faceaf.png" style="max-width: 100.0%;max-height: 100.0%;" align="middle">. Если <span class="tex-span"><i>type</i> = 1</span> или <span class="tex-span"><i>type</i> = 2</span>, то запрос представляет собой решение кризисного менеджера об объединении отделов соответственно первого или второго вида. Если <span class="tex-span"><i>type</i> = 3</span>, то требуется определить, работают ли в одном отделе сотрудники <span class="tex-span"><i>x</i></span> и <span class="tex-span"><i>y</i></span>. Обратите внимаие, что <span class="tex-span"><i>x</i></span> может равняться <span class="tex-span"><i>y</i></span> в запросе любого типа.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>На каждый запрос типа <span class="tex-span">3</span> выведите «<span class="tex-font-style-tt">YES</span>» или «<span class="tex-font-style-tt">NO</span>» (без кавычек), в зависимости от того, работают ли в одном отделе соответствующие люди.</p></div><div class="sample-tests"><div class="section-title">Примеры</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>8 6<br>3 2 5<br>1 2 5<br>3 2 5<br>2 4 7<br>2 1 2<br>3 1 7<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>NO<br>YES<br>YES<br></pre></div></div></div></div></div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");



    });
</script>
        </div>
        <div style="margin-bottom: 2em;">

<div class="problemindexholder" problemindex="J">
<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">J. Взламывать или не взламывать</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>1 секунда</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Рассмотрим раунд Codeforces, состоящий из трёх задач и использующий динамическую разбалловку.</p><p>Дана почти финальная таблица. Для каждого участника (включая вас) известно время, когда он сдал каждую из задач (или не сдал вовсе). Также про каждое из решений известно, можете вы его взломать или нет. Считаем, что единственные изменения до конца раунда&nbsp;— это ваши взломы.</p><p>Какое наивысшее место вы можете занимать в конце раунда?</p><p>Более формально: в раунде участвуют <span class="tex-span"><i>n</i></span> человек, включая вас. Если некоторую задачу в конце раунда (после ваших взломов) решило <span class="tex-span"><i>k</i></span> человек, то максимальный балл за эту задачу определяется следующим образом: </p><ol> <li> Если <span class="tex-span"><i>n</i> &lt; 2<i>k</i> ≤ 2<i>n</i></span>, то максимальный балл&nbsp;— <span class="tex-span">500</span>; </li><li> Если <span class="tex-span"><i>n</i> &lt; 4<i>k</i> ≤ 2<i>n</i></span>, то максимальный балл&nbsp;— <span class="tex-span">1000</span>; </li><li> Если <span class="tex-span"><i>n</i> &lt; 8<i>k</i> ≤ 2<i>n</i></span>, то максимальный балл&nbsp;— <span class="tex-span">1500</span>; </li><li> Если <span class="tex-span"><i>n</i> &lt; 16<i>k</i> ≤ 2<i>n</i></span>, то максимальный балл&nbsp;— <span class="tex-span">2000</span>; </li><li> Если <span class="tex-span"><i>n</i> &lt; 32<i>k</i> ≤ 2<i>n</i></span>, то максимальный балл&nbsp;— <span class="tex-span">2500</span>; </li><li> Если <span class="tex-span">32<i>k</i> ≤ <i>n</i></span>, то максимальный балл&nbsp;— <span class="tex-span">3000</span>. </li></ol><p>Пусть максимальный балл за некоторую задачу равен <span class="tex-span"><i>s</i></span>, тогда если человек не решил эту задачу (или вы взломали его решение), то он получает <span class="tex-span">0</span> баллов за эту задачу. Если человек решил данную задачу через <span class="tex-span"><i>t</i></span> минут после начала раунда (и его решение не было взломано), то его балл за эту задачу равен <img class="tex-formula" src="tasks_files/e0367ef07df7b73d3a2d198c60af96ba897dbf7f.png" style="max-width: 100.0%;max-height: 100.0%;" align="middle">.</p><p>Суммарный балл участника равен сумме его баллов по всем трём задачам плюс по <span class="tex-span">100</span> баллов за каждый успешный взлом (взломы делаете только вы).</p><p>Ваше место в конце раунда будет определяться как один плюс количество участников, суммарный балл которых строго больше вашего суммарного балла.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке входных данных задано число <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 5000</span>)&nbsp;— количество участников. Вы являетесь участником под номером <span class="tex-span">1</span>.</p><p>Следующие <span class="tex-span"><i>n</i></span> строк содержат по три целых числа <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span>, <span class="tex-span"><i>b</i><sub class="lower-index"><i>i</i></sub></span> и <span class="tex-span"><i>c</i><sub class="lower-index"><i>i</i></sub></span>. Здесь <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub> = 0</span> означает, что участник под номером <span class="tex-span"><i>i</i></span> не решил первую задачу. <span class="tex-span">1 ≤ <i>a</i><sub class="lower-index"><i>i</i></sub> ≤ 120</span> означает, что участник под номером <span class="tex-span"><i>i</i></span> решил первую задачу через <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> минут после начала контеста, и вы не можете взломать его решение. <span class="tex-span"> - 120 ≤ <i>a</i><sub class="lower-index"><i>i</i></sub> ≤  - 1</span> означает, что участник под номером <span class="tex-span"><i>i</i></span> решил первую задачу через <span class="tex-span"> - <i>a</i><sub class="lower-index"><i>i</i></sub></span> минут после начала контеста и вы можете взломать его решение. <span class="tex-span"><i>b</i><sub class="lower-index"><i>i</i></sub></span> и <span class="tex-span"><i>c</i><sub class="lower-index"><i>i</i></sub></span> описывают вторую и третью задачи в аналогичном формате.</p><p>Гарантируется, что все три числа <span class="tex-span"><i>a</i><sub class="lower-index">1</sub></span>, <span class="tex-span"><i>b</i><sub class="lower-index">1</sub></span> и <span class="tex-span"><i>c</i><sub class="lower-index">1</sub></span> неотрицательны.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите одно число&nbsp;— самое высокое место, которые Вы можете занять, взломав некоторые решения.</p></div><div class="sample-tests"><div class="section-title">Примеры</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>4<br>120 120 1<br>61 61 120<br>-61 61 120<br>0 0 0<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>1<br></pre></div><div class="input"><div class="title">Входные данные</div><pre>4<br>0 0 119<br>-3 -17 -42<br>0 7 0<br>51 0 0<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2<br></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>Рассмотрим первый пример. Если не взламывать ни одно решение, то вы займете первое место (таблица слева). Если же взломать решение третьего участника по первой задаче (единственное, которое вы можете взломать), то максимальный балл за первую задачу изменится, и вы займете второе место (таблица справа). </p><center> <img class="tex-graphics" src="tasks_files/7e51f24806a01a48d3932ee9cd6e4f2da27f8362.png" style="max-width: 100.0%;max-height: 100.0%;"> </center></div></div></div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");



    });
</script>
        </div>

    <br style="clear: both;">

    <div id="footer">
        <div><a href="http://codeforces.com/">Codeforces</a> (c) Copyright 2010-2016 Михаил Мирзаянов</div>
        <div>Соревнования по программированию 2.0</div>

    </div>
</div>


</div><div id="datepick-div" style="display: none;"></div><div id="cboxOverlay" style="display: none;"></div><div id="colorbox" class="" style="display: none; padding-bottom: 42px; padding-right: 42px;"><div id="cboxWrapper"><div><div id="cboxTopLeft" style="float: left;"></div><div id="cboxTopCenter" style="float: left;"></div><div id="cboxTopRight" style="float: left;"></div></div><div style="clear: left;"><div id="cboxMiddleLeft" style="float: left;"></div><div id="cboxContent" style="float: left;"><div id="cboxLoadedContent" style="width: 0px; height: 0px; overflow: hidden; float: left;"></div><div id="cboxLoadingOverlay" style="float: left;"></div><div id="cboxLoadingGraphic" style="float: left;"></div><div id="cboxTitle" style="float: left;"></div><div id="cboxCurrent" style="float: left;"></div><div id="cboxNext" style="float: left;"></div><div id="cboxPrevious" style="float: left;"></div><div id="cboxSlideshow" style="float: left;"></div><div id="cboxClose" style="float: left;"></div></div><div id="cboxMiddleRight" style="float: left;"></div></div><div style="clear: left;"><div id="cboxBottomLeft" style="float: left;"></div><div id="cboxBottomCenter" style="float: left;"></div><div id="cboxBottomRight" style="float: left;"></div></div></div><div style="position: absolute; width: 9999px; visibility: hidden; display: none;"></div></div></body></html>
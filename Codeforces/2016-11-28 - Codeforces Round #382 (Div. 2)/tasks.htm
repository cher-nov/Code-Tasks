<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN">
<html><head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta name="X-Csrf-Token" content="c17a62dd9016558ae4152134197c1fb1">
    <meta id="viewport" name="viewport" content="width=device-width, initial-scale=0.01">
    <script type="text/javascript" async="" src="tasks_files/ga.js"></script><script type="text/javascript" src="tasks_files/jquery-1.js"></script>
    <script type="application/javascript">
        function adjustViewport() {
            var screenWidthPx = Math.min($(window).width(), window.screen.width);
            var siteWidthPx = 1100; // min width of site
            var ratio = Math.min(screenWidthPx / siteWidthPx, 1.0);
            var viewport = "width=device-width, initial-scale=" + ratio;
            $('#viewport').attr('content', viewport);
            var style = $('<style>html * { max-height: 1000000px; }</style>');
            $('html > head').append(style);
        }

        if ( /Android|webOS|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent) ) {
            adjustViewport();
        }
    </script>
    <meta http-equiv="pragma" content="no-cache">
    <meta http-equiv="expires" content="-1">
    <meta http-equiv="profileName" content="c3">
    <meta name="google-site-verification" content="OTd2dN5x4nS4OPknPI9JFg36fKxjqY0i1PSfFPv_J90">
    <meta property="fb:admins" content="100001352546622">
    <meta property="og:image" content="http://st.codeforces.com/s/12142/images/codeforces-telegram-square.png">
    <link rel="image_src" href="http://st.codeforces.com/s/12142/images/codeforces-telegram-square.png">
    <meta property="og:title" content="Задачи - Codeforces">
    <meta property="og:description" content="">
    
    <meta property="og:site_name" content="Codeforces">
    
    
    
    
    
    <meta name="utc_offset" content="+03:00">
    <meta name="verify-reformal" content="f56f99fd7e087fb6ccb48ef2">
    <title>Задачи - Codeforces</title>
        <meta name="description" content="Codeforces. Соревнования и олимпиады по информатике и программированию, сообщество программистов">
        <meta name="keywords" content="программирование информатика контест олимпиада алгоритмы c++ java графы vkcup">
    <meta name="robots" content="index, follow">

    <link rel="stylesheet" href="tasks_files/font-awesome.css" type="text/css" charset="utf-8">

        <link href="tasks_files/css_002.css" rel="stylesheet" type="text/css">
        <link href="tasks_files/css.css" rel="stylesheet" type="text/css">


    <link rel="shortcut icon" type="image/png" href="http://st.codeforces.com/s/12142/favicon.png">

    <!--CombineResourcesFilter-->
    <link rel="stylesheet" href="tasks_files/prettify.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/clear.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/style_003.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/ttypography.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/problem-statement.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/second-level-menu.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/roundbox.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/datatable.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/table-form.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/topic.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/jquery_004.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/facebox.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/jquery.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/jquery_002.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/codeforces.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/colorbox.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/jquery_003.css" type="text/css" charset="utf-8">
        <link rel="stylesheet" href="tasks_files/community.css" type="text/css" charset="utf-8">
        <link rel="stylesheet" href="tasks_files/sidebar-menu.css" type="text/css" charset="utf-8">

    <script type="text/javascript" src="tasks_files/prettify.js"></script>
    <script type="text/javascript" src="tasks_files/moment.js"></script>
    <script type="text/javascript" src="tasks_files/pushstream.js"></script>
    <script type="text/javascript" src="tasks_files/jquery.js"></script>
    <script type="text/javascript" src="tasks_files/jquery_004.js"></script>
    <script type="text/javascript" src="tasks_files/jquery_010.js"></script>
    <script type="text/javascript" src="tasks_files/jquery_013.js"></script>
    <script type="text/javascript" src="tasks_files/facebox.js"></script>
    <script type="text/javascript" src="tasks_files/jquery_006.js"></script>
    <script type="text/javascript" src="tasks_files/wysiwyg_003.js"></script>
    <script type="text/javascript" src="tasks_files/wysiwyg.js"></script>
    <script type="text/javascript" src="tasks_files/wysiwyg_004.js"></script>
    <script type="text/javascript" src="tasks_files/wysiwyg_002.js"></script>
    <script type="text/javascript" src="tasks_files/jquery_012.js"></script>
    <script type="text/javascript" src="tasks_files/jquery_009.js"></script>
    <script type="text/javascript" src="tasks_files/jquery_002.js"></script>
    <script type="text/javascript" src="tasks_files/jquery_007.js"></script>
    <script type="text/javascript" src="tasks_files/jquery_003.js"></script>
    <script type="text/javascript" src="tasks_files/jquery_008.js"></script>
    <script type="text/javascript" src="tasks_files/sjcl.js"></script>
    <script type="text/javascript" src="tasks_files/codeforces-options.js"></script>
    <script type="text/javascript" src="tasks_files/codeforces.js"></script>
    <!--/CombineResourcesFilter-->

    <link rel="stylesheet" href="tasks_files/style_002.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/style.css" type="text/css" charset="utf-8">

    <script type="text/javascript" src="tasks_files/share.js" charset="utf-8"></script>

    <script type="text/javascript" src="tasks_files/jquery_011.js"></script>
    <script type="text/javascript" src="tasks_files/set.js"></script>

    <!--[if IE]>
    <style>
        #sidebar {
            padding-left: 1em;
            margin: 1em 1em 1em 0;
        }
    </style>
    <![endif]-->

        <script type="text/javascript" src="tasks_files/jquery_005.js"></script>
        <script src="tasks_files/openapi.js" type="text/javascript"></script>

</head>
<body><span style="display:none;" class="csrf-token" data-csrf="c17a62dd9016558ae4152134197c1fb1">&nbsp;</span>
<div class="button-up" style="display: none; opacity: 0.7; width: 50px; height:100%; position: fixed; left: 0; top: 0; cursor: pointer; text-align: center; line-height: 35px; color: #d3dbe4; font-weight: bold; font-size: 3.0rem;"><i class="icon-circle-arrow-up"></i></div>

<!-- Codeforces JavaScripts. -->
<script type="text/javascript">
    var queryMobile = Codeforces.queryString.mobile;
    if (queryMobile === "true" || queryMobile === "false") {
        Codeforces.putToStorage("useMobile", queryMobile == "true");
    } else {
        var useMobile = Codeforces.getFromStorage("useMobile");
        if (useMobile === true || useMobile === false) {
            if (useMobile != false) {
                Codeforces.redirect(Codeforces.updateUrlParameter(document.location.href, "mobile", useMobile));
            }
        }
    }
</script>
<script type="text/javascript">
    VK.init({apiId: 1961905});
</script>
<script type="text/javascript">
    if (window.parent.frames.length > 0) {
        window.stop();
    }
</script>

    <script type="text/javascript">
        $(document).ready(function () {
    (function () {
        jQuery.expr[':'].containsCI = function(elem, index, match) {
            return !match || !match.length || match.length < 4 || !match[3] || (
                    elem.textContent || elem.innerText || jQuery(elem).text() || ''
            ).toLowerCase().indexOf(match[3].toLowerCase()) >= 0;
        }
    }(jQuery));

    $.ajaxPrefilter(function(options, originalOptions, xhr) {
        var csrf = Codeforces.getCsrfToken();

        if (csrf) {
            var data = originalOptions.data;
            if (originalOptions.data !== undefined) {
                if (Object.prototype.toString.call(originalOptions.data) === '[object String]') {
                    data = $.deparam(originalOptions.data);
                }
            } else {
                data = {};
            }
            options.data = $.param($.extend(data, { csrf_token: csrf }));
        }
    });

    window.getCodeforcesServerTime = function(callback) {
        $.post("/data/time", {}, callback, "json");
    }

    window.updateTypography = function () {
        $("div.ttypography code").addClass("tt");
        $("div.ttypography pre>code").addClass("prettyprint").removeClass("tt");
        $("div.ttypography table").addClass("bordertable");
        prettyPrint();
    }

    $.ajaxSetup({ scriptCharset: "utf-8" ,contentType: "application/x-www-form-urlencoded; charset=UTF-8", headers: {
        'X-Csrf-Token': Codeforces.getCsrfToken()
    }});

    window.updateTypography();

    Codeforces.signForms();

    setTimeout(function() {
        $(".second-level-menu-list").lavaLamp({
            fx: "backout",
            speed: 1000
        });
    }, 0);


    Codeforces.countdown();
    $("a[rel='photobox']").colorbox();

        var count = 0;

        function getDelay() {
            var delay = 0;
            var last = Codeforces.getFromStorage("LastOnlineTimeUpdaterMillis", 0);
            if (last && last != null) {
                var period = count < 20 ? 180 * 1000 : 360 * 1000;
                delay = period - (new Date().getTime() - last);
                if (delay < 0)
                    delay = 0;
            }
            return delay;
        }

        window.setInterval(function () {
            if (getDelay() <= 0 && count < 120) {
                ++count;
                Codeforces.ping("/data/update-online");
            }
        }, 5000);

        var handle = "cher-nov";
        $("a.rated-user:contains(" + handle + "), span.participant:contains(" + handle + ")").each(function () {
            if ($(this).text() == handle) {
                var td = $(this).parent();
                var tr = $(this).parent().parent();
                if (td.is("td") && tr.is("tr")) {
                    tr.addClass("highlighted-row");
                }
            }
        });

    function showAnnouncements(json) {
        info("j=" + JSON.stringify(json));

        if (json.t != "a") {
            return;
        }
        console.log("Got announcement from channel");
        setTimeout(function() {
            Codeforces.showAnnouncements(json.d, "ru");
        }, Math.random() * 500);
    }
    if (Codeforces.getParticipantChannel()) {
        Codeforces.subscribe(Codeforces.getParticipantChannel(), function(json) {
            showAnnouncements(json);
        });
    }

    if (Codeforces.getContestChannel()) {
        Codeforces.subscribe(Codeforces.getContestChannel(), function(json) {
            showAnnouncements(json);
        });
    }

    if (Codeforces.getGlobalChannel()) {
        Codeforces.subscribe(Codeforces.getGlobalChannel(), function(json) {
            showAnnouncements(json);
        });
    }

    if (Codeforces.getUserChannel()) {
        Codeforces.subscribe(Codeforces.getUserChannel(), function(json) {
            showAnnouncements(json);
        });
    }

    $(".clickable-title").click(function() {
        Codeforces.alert($(this).attr("title"));
    }).css("position", "relative").css("bottom", "3px");


    Codeforces.reformatTimes();
    Codeforces.initializePubSub();

    Codeforces.setupSpoilers();
    Codeforces.setupTutorials("/data/problemTutorial");
        });
    </script>

<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-743380-5']);
  _gaq.push(['_trackPageview']);

  (function () {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = (document.location.protocol == 'https:' ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>


<div id="body">
<div style="width: 950px; margin: 0 auto;">
    <div id="header" style="position: relative;">
        <div style="float:left;">
                 <a href="http://codeforces.com/"><img src="tasks_files/codeforces-logo-with-telegram.png"></a>
        </div>
        <div class="lang">
            <div style="text-align: right;">
                <a href="http://codeforces.com/contest/735/problems?locale=en"><img src="tasks_files/gb.png" title="In English" alt="In English"></a>
                <a href="http://codeforces.com/contest/735/problems?locale=ru"><img src="tasks_files/ru.png" title="По-русски" alt="По-русски"></a>
            </div>
        </div>
        <br style="clear: both;">
    </div>

    <div style="text-align: center; font-size: 1.8rem; margin-bottom: 0.5em;" class="caption">Codeforces Round #382 (Div. 2)</div>
    <div style="border-top: 1px solid #ccc; height: 1em;"></div>

        <div style="margin-bottom: 4em;page-break-after: always;">

<div class="problemindexholder" problemindex="A">
<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">A. Остап и Кузнечик</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>В
 пути до Рио-де-Жaнeйро Остап развлекается, играя с кузнечиком, которого
 он взял с собой в специальной коробочке. Остап строит для кузнечика 
полосу препятствий длиной <span class="tex-span"><i>n</i></span>, 
некоторые клетки полосы свободные, а другие полностью заняты. В одну из 
свободных клеток Остап помещает кузнечика, а в другую&nbsp;— маленькое 
насекомое, которое кузнечик хочет съесть.</p><p>Известно, что за один прыжок кузнечик может переместиться в любую свободную клетку на расстоянии <span class="tex-font-style-bf">в точности</span> <span class="tex-span"><i>k</i></span> от текущей, при этом для прыжка кузнечика не имеет значения, свободны или пусты промежуточные клетки. Например, если <span class="tex-span"><i>k</i> = 1</span>, то кузнечик может прыгать только в соседнюю клетку, а если <span class="tex-span"><i>k</i> = 2</span>, то через клетку.</p><p>Определите, существует ли последовательность корректных прыжков, которая приводит кузнечика в клетку с насекомым.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке входных данных записаны два целых числа <span class="tex-span"><i>n</i></span> и <span class="tex-span"><i>k</i></span> (<span class="tex-span">2 ≤ <i>n</i> ≤ 100</span>, <span class="tex-span">1 ≤ <i>k</i> ≤ <i>n</i> - 1</span>)&nbsp;— количество клеток в полосе препятствий и длина прыжка кузнечика.</p><p>Во второй строке записана строка длины <span class="tex-span"><i>n</i></span>, состоящая только из символов «<span class="tex-font-style-tt">.</span>», «<span class="tex-font-style-tt">#</span>», «<span class="tex-font-style-tt">G</span>» и «<span class="tex-font-style-tt">T</span>». Символ «<span class="tex-font-style-tt">.</span>» означает, что данная клетка пуста, символ «<span class="tex-font-style-tt">#</span>» означает, что в данной клетке находится препятствие, и кузнечик не может в неё прыгать, символ «<span class="tex-font-style-tt">G</span>» означает, что кузнечик изначально находится в данной клетке, и, наконец, символ «<span class="tex-font-style-tt">T</span>» означает, что в этой клетке находится маленькое насекомое, до которого хочет допрыгать кузнечик. Гарантируется, что символы «<span class="tex-font-style-tt">G</span>» и «<span class="tex-font-style-tt">T</span>» встречаются в данной строке <span class="tex-font-style-bf">ровно один раз</span>.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Если существует последовательность прыжков (каждый длины <span class="tex-span"><i>k</i></span>), приводящая кузнечика из его начальной клетки в клетку с насекомым, то выведите «<span class="tex-font-style-tt">YES</span>» (без кавычек) в единственной строке выходных данных. В противном случае выведите «<span class="tex-font-style-tt">NO</span>» (без кавычек).</p></div><div class="sample-tests"><div class="section-title">Примеры</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>5 2<br>#G#T#<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>YES<br></pre></div><div class="input"><div class="title">Входные данные</div><pre>6 1<br>T....G<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>YES<br></pre></div><div class="input"><div class="title">Входные данные</div><pre>7 3<br>T..#..G<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>NO<br></pre></div><div class="input"><div class="title">Входные данные</div><pre>6 2<br>..GT..<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>NO<br></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом примере кузнечику достаточно совершить один прыжок вправо, тогда он сразу попадёт из позиции <span class="tex-span">2</span> в позицию <span class="tex-span">4</span>.</p><p>Во втором примере кузнечик совершает прыжки только в соседние клетки, но путь до насекомого свободен&nbsp;— кузнечик может добраться до него за <span class="tex-span">5</span> прыжков влево.</p><p>В третьем примере кузнечик не может совершить ни одного прыжка.</p><p>В четвёртом примере кузнечик может прыгать только по клеткам с нечётными координатами, поэтому он никогда не доберётся до насекомого.</p></div></div><p>  </p></div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");



    });
</script>
        </div>
        <div style="margin-bottom: 4em;page-break-after: always;">

<div class="problemindexholder" problemindex="B">
<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">B. Урбанизация</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Местные власти узнали о комбинаторных способностях Остапа Бендера и обратились к нему за помощью в вопросе урбанизации. Имеется <span class="tex-span"><i>n</i></span> человек, которые хотят переехать жить в города. Состояние <span class="tex-span"><i>i</i></span>-го из них равняется <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span>. Планируется построить два города и поселить в первый из них <span class="tex-span"><i>n</i><sub class="lower-index">1</sub></span> человек, а во второй&nbsp;— <span class="tex-span"><i>n</i><sub class="lower-index">2</sub></span> человек. Разумеется, каждый из <span class="tex-span"><i>n</i></span> кандидатов может быть поселён не более, чем в один город. Таким образом, некоторое подмножество кандидатов размером <span class="tex-span"><i>n</i><sub class="lower-index">1</sub></span> будут поселены в первый город, из оставшихся некоторое подмножество кандидатов размера <span class="tex-span"><i>n</i><sub class="lower-index">2</sub></span> будут поселены во второй город, а остальным будет отказано в поселении.</p><p>Для улучшения показателей региона в глазах вышестоящего начальства местные власти решили выбрать соответствующие подмножества кандидатов таким образом, чтобы <span class="tex-font-style-bf">сумма средних арифметических</span> состояний жителей этих двух городов была максимальна. Средним арифметическим состояний жителей города называется сумма всех состояний <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> жителей города, поделённая на количество жителей (<span class="tex-span"><i>n</i><sub class="lower-index">1</sub></span> или <span class="tex-span"><i>n</i><sub class="lower-index">2</sub></span> соответственно). Деление следует осуществлять в вещественных числах без каких-либо округлений.</p><p>Помогите местным властям найти оптимальный способ заселить два города.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке входных данных записаны три числа <span class="tex-span"><i>n</i></span>, <span class="tex-span"><i>n</i><sub class="lower-index">1</sub></span> и <span class="tex-span"><i>n</i><sub class="lower-index">2</sub></span> (<span class="tex-span">1 ≤ <i>n</i>, <i>n</i><sub class="lower-index">1</sub>, <i>n</i><sub class="lower-index">2</sub> ≤ 100 000</span>, <span class="tex-span"><i>n</i><sub class="lower-index">1</sub> + <i>n</i><sub class="lower-index">2</sub> ≤ <i>n</i></span>)&nbsp;— количество кандидатов на поселение в города, планируемое количество жителей первого города и планируемое количество жителей второго города соответственно. </p><p>Во второй строке записаны <span class="tex-span"><i>n</i></span> целых чисел <span class="tex-span"><i>a</i><sub class="lower-index">1</sub>, <i>a</i><sub class="lower-index">2</sub>, ..., <i>a</i><sub class="lower-index"><i>n</i></sub></span> (<span class="tex-span">1 ≤ <i>a</i><sub class="lower-index"><i>i</i></sub> ≤ 100 000</span>), <span class="tex-span"><i>i</i></span>-е из которых соответствует уровню достатка <span class="tex-span"><i>i</i></span>-го кандидата.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите одно вещественное число&nbsp;— максимально возможную сумму средних арифметических состояний жителей двух городов. Ваш ответ будет считаться правильным, если его абсолютная или относительная ошибка не будет превосходить <span class="tex-span">10<sup class="upper-index"> - 6</sup></span>. </p><p>А именно: пусть ваш ответ равен <span class="tex-span"><i>a</i></span>, а ответ жюри&nbsp;— <span class="tex-span"><i>b</i></span>. Проверяющая программа будет считать ваш ответ правильным, если <img class="tex-formula" src="tasks_files/c62ea64d4651240724c5ac4779b671c741edec24.png" style="max-width: 100.0%;max-height: 100.0%;" align="middle">.</p></div><div class="sample-tests"><div class="section-title">Примеры</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>2 1 1<br>1 5<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>6.00000000<br></pre></div><div class="input"><div class="title">Входные данные</div><pre>4 2 1<br>1 4 2 3<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>6.50000000<br></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первой примере одним из оптимальных решений будет поселить кандидата <span class="tex-span">1</span> в первый город, а кандидата <span class="tex-span">2</span>&nbsp;— во второй.</p><p>Во втором примере оптимальным расселением будет назначить кандидатов <span class="tex-span">3</span> и <span class="tex-span">4</span> в первый город, а кандидата <span class="tex-span">2</span>&nbsp;— во второй. Получаем <span class="tex-span">(<i>a</i><sub class="lower-index">3</sub> + <i>a</i><sub class="lower-index">4</sub>) / 2 + <i>a</i><sub class="lower-index">2</sub> = (3 + 2) / 2 + 4 = 6.5</span></p></div></div><p>  </p></div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");



    });
</script>
        </div>
        <div style="margin-bottom: 4em;page-break-after: always;">

<div class="problemindexholder" problemindex="C">
<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">C. Теннисный Чемпионат</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Бразильский город Рио-де-Жанейро принимает крупный теннисный турнир, и Остап Бендер не намерен пропускать это событие. В турнире примут участие <span class="tex-span"><i>n</i></span> теннисистов, причём с первого же матча будет идти игра на выбывание&nbsp;— проигравший сразу покидает турнир.</p><p>Организаторы ещё не составили сетку чемпионата, но известно, что два игрока могут играть друг с другом, если и только если количество игр, уже проведённых одним из них, отличается от количества игр, проведённых другим, не более чем на одну игру (в любую сторону). Разумеется, оба игрока должны были выиграть все свои встречи, чтобы всё ещё участвовать в турнире.</p><p>Пока турнир не начался и зрители ищут, чем занять себя в ожидании, Остап решил вычислить, в каком максимальном количестве партий может принять участие победитель турнира. Скорее всего, без вашей помощи ему не справиться.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В единственной строке входных данных записано целое число <span class="tex-span"><i>n</i></span> (<span class="tex-span">2 ≤ <i>n</i> ≤ 10<sup class="upper-index">18</sup></span>)&nbsp;— количество участников турнира.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите одно целое число&nbsp;— максимальное количество партий, в которых может принять участие победитель турнира.</p></div><div class="sample-tests"><div class="section-title">Примеры</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>2<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>1<br></pre></div><div class="input"><div class="title">Входные данные</div><pre>3<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2<br></pre></div><div class="input"><div class="title">Входные данные</div><pre>4<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2<br></pre></div><div class="input"><div class="title">Входные данные</div><pre>10<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>4<br></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>Во всех примерах будем считать, что турнир выигрывает участник с номером <span class="tex-span">1</span>.</p><p>В первом примере будет всего одна игра, поэтому ответ очевидно <span class="tex-span">1</span>.</p><p>Во втором примере первый игрок может последовательно обыграть игрока <span class="tex-span">2</span>, а затем игрока <span class="tex-span">3</span>.</p><p>В третьем примере первый игрок не может последовательно обыграть всех остальных, так как если он сыграет с игроками <span class="tex-span">2</span> и <span class="tex-span">3</span>, то у него будет уже две партии, а игрока номер <span class="tex-span">4</span>&nbsp;— ноль партий. Тогда они не смогут сыграть и турнир не завершится. Таким образом, ответ <span class="tex-span">2</span> и он достигается на сетке турнира, в которой сначала играют пары <span class="tex-span">(1, 2)</span> и <span class="tex-span">(3, 4)</span>, а затем победители этих пар играют друг с другом.</p></div></div><p>  </p></div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");



    });
</script>
        </div>
        <div style="margin-bottom: 4em;page-break-after: always;">

<div class="problemindexholder" problemindex="D">
<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">D. Налоги</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>В стране, где старик Фунт сейчас проживает и занимается различными махинациями, крайне необычные правила вычисления подоходного налога. Так, Фунт, который за год заработал <span class="tex-span"><i>n</i></span> (<span class="tex-span"><i>n</i> ≥ 2</span>) бурлей, должен уплатить налог, равный по величине максимальному делителю числа <span class="tex-span"><i>n</i></span> (отличного от самого <span class="tex-span"><i>n</i></span>, разумеется). Например, если <span class="tex-span"><i>n</i> = 6</span>, то Фунт должен уплатить <span class="tex-span">3</span> бурля, если <span class="tex-span"><i>n</i> = 25</span>, то <span class="tex-span">5</span> бурлей, а если <span class="tex-span"><i>n</i> = 2</span>, то <span class="tex-span">1</span> бурль.</p><p>Поскольку Фунт ещё не сидел при капитализме, то он решился на мошенничество. А именно, он собирается разбить исходное <span class="tex-span"><i>n</i></span> на несколько частей <span class="tex-span"><i>n</i><sub class="lower-index">1</sub> + <i>n</i><sub class="lower-index">2</sub> + ... + <i>n</i><sub class="lower-index"><i>k</i></sub> = <i>n</i></span> (значение <span class="tex-span"><i>k</i></span> произвольно, в том числе допустимо <span class="tex-span"><i>k</i> = 1</span>) и уплатить налог за каждую часть отдельно. Чтобы мошенничество Фунта не было совсем уж очевидным, следует избегать частей, равных <span class="tex-span">1</span>, то есть <span class="tex-span"><i>n</i><sub class="lower-index"><i>i</i></sub> ≥ 2</span> для всех <span class="tex-span"><i>i</i></span> от <span class="tex-span">1</span> до <span class="tex-span"><i>k</i></span>. </p><p>Остап Бендер хочет знать, сколько денег минимально придется заплатить Фунту, если для уплаты налога он разобьёт изначальную сумму <span class="tex-span"><i>n</i></span> на части оптимальным образом.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке входных данных записано единственное целое число <span class="tex-span"><i>n</i></span> (<span class="tex-span">2 ≤ <i>n</i> ≤ 2·10<sup class="upper-index">9</sup></span>)&nbsp;— годовой доход Фунта, с которого следует уплатить налог.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите одно целое число&nbsp;— минимальное количество денег, которое придется платить старику Фунту, если он разбил исходную сумму на части оптимальным образом.</p></div><div class="sample-tests"><div class="section-title">Примеры</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>4<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2<br></pre></div><div class="input"><div class="title">Входные данные</div><pre>27<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>3<br></pre></div></div></div></div></div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");



    });
</script>
        </div>
        <div style="margin-bottom: 2em;">

<div class="problemindexholder" problemindex="E">
<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">E. Остап и дерево</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Остап поселился в предместье Рио-де-Жанейро и сразу же начала выращивать у себя в саду дерево. Напомним, деревом называется связный неориентированный граф без циклов.</p><p>Сейчас в дереве Остапа <span class="tex-span"><i>n</i></span> вершин. Он хочет покрасить некоторые вершины дерева в чёрный цвет таким образом, чтобы для любой вершины дерева <span class="tex-span"><i>u</i></span> существовала хотя бы одна чёрная вершина <span class="tex-span"><i>v</i></span>, удалённая от неё не более, чем на <span class="tex-span"><i>k</i></span>. <span class="tex-font-style-it">Расстоянием</span> между двумя вершинами в дереве называется минимальное количество рёбер на пути между ними.</p><p>Поскольку количество способов покрасить дерево соответствующим образом может быть достаточно велико, Остап попросил вас вычислить его по модулю <span class="tex-span">10<sup class="upper-index">9</sup> + 7</span>. Два способа покрасить дерево считаются различными, если существует вершина, которая покрашена в чёрный цвет в одном способе и не покрашена в другом.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке входных данных записаны два целых числа <span class="tex-span"><i>n</i></span> и <span class="tex-span"><i>k</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 100</span>, <span class="tex-span">0 ≤ <i>k</i> ≤ <i>min</i>(20, <i>n</i> - 1)</span>)&nbsp;— количество вершин в дереве Остапа и максимально возможное расстояние до ближайшей чёрной вершины. <span class="tex-font-style-bf">Не пропустите</span> случайно ограничение на значение <span class="tex-span"><i>k</i></span>.</p><p>Каждая из следующих <span class="tex-span"><i>n</i> - 1</span> строк содержит два числа <span class="tex-span"><i>u</i><sub class="lower-index"><i>i</i></sub></span> и <span class="tex-span"><i>v</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">1 ≤ <i>u</i><sub class="lower-index"><i>i</i></sub>, <i>v</i><sub class="lower-index"><i>i</i></sub> ≤ <i>n</i></span>)&nbsp;— индексы вершин, соединённых <span class="tex-span"><i>i</i></span>-м ребром. Гарантируется, что заданный граф является деревом.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите одно целое число&nbsp;— остаток от деления количества способов корректно покрасить вершины дерева в чёрный цвет на <span class="tex-span">1 000 000 007</span> (<span class="tex-span">10<sup class="upper-index">9</sup> + 7</span>).</p></div><div class="sample-tests"><div class="section-title">Примеры</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>2 0<br>1 2<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>1<br></pre></div><div class="input"><div class="title">Входные данные</div><pre>2 1<br>1 2<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>3<br></pre></div><div class="input"><div class="title">Входные данные</div><pre>4 1<br>1 2<br>2 3<br>3 4<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>9<br></pre></div><div class="input"><div class="title">Входные данные</div><pre>7 2<br>1 2<br>2 3<br>1 4<br>4 5<br>1 6<br>6 7<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>91<br></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом примере необходимо покрасить в чёрный цвет обе вершины дерева.</p><p>Во втором примере достаточно покрасить только одну из двух, поэтому ответ <span class="tex-span">3</span>: покрасить только вершину <span class="tex-span">1</span>, покрасить только вершину <span class="tex-span">2</span>, покрасить и вершину <span class="tex-span">1</span>, и вершину <span class="tex-span">2</span>.</p><p>В третьем примере подходящими будут покраски следующих множеств вершин: <span class="tex-span">{1, 3}</span>, <span class="tex-span">{1, 4}</span>, <span class="tex-span">{2, 3}</span>, <span class="tex-span">{2, 4}</span>, <span class="tex-span">{1, 2, 3}</span>, <span class="tex-span">{1, 2, 4}</span>, <span class="tex-span">{1, 3, 4}</span>, <span class="tex-span">{2, 3, 4}</span>, <span class="tex-span">{1, 2, 3, 4}</span>.</p></div></div><p>  </p></div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");



    });
</script>
        </div>

    <br style="clear: both;">

    <div id="footer">
        <div><a href="http://codeforces.com/">Codeforces</a> (c) Copyright 2010-2016 Михаил Мирзаянов</div>
        <div>Соревнования по программированию 2.0</div>

    </div>
</div>


</div><div id="datepick-div" style="display: none;"></div><div id="cboxOverlay" style="display: none;"></div><div id="colorbox" class="" style="display: none; padding-bottom: 42px; padding-right: 42px;"><div id="cboxWrapper"><div><div id="cboxTopLeft" style="float: left;"></div><div id="cboxTopCenter" style="float: left;"></div><div id="cboxTopRight" style="float: left;"></div></div><div style="clear: left;"><div id="cboxMiddleLeft" style="float: left;"></div><div id="cboxContent" style="float: left;"><div id="cboxLoadedContent" style="width: 0px; height: 0px; overflow: hidden; float: left;"></div><div id="cboxLoadingOverlay" style="float: left;"></div><div id="cboxLoadingGraphic" style="float: left;"></div><div id="cboxTitle" style="float: left;"></div><div id="cboxCurrent" style="float: left;"></div><div id="cboxNext" style="float: left;"></div><div id="cboxPrevious" style="float: left;"></div><div id="cboxSlideshow" style="float: left;"></div><div id="cboxClose" style="float: left;"></div></div><div id="cboxMiddleRight" style="float: left;"></div></div><div style="clear: left;"><div id="cboxBottomLeft" style="float: left;"></div><div id="cboxBottomCenter" style="float: left;"></div><div id="cboxBottomRight" style="float: left;"></div></div></div><div style="position: absolute; width: 9999px; visibility: hidden; display: none;"></div></div></body></html>
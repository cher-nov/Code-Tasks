<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN">
<html><head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta name="X-Csrf-Token" content="6c5b0a437112f123e239341f862fb943">
    <meta id="viewport" name="viewport" content="width=device-width, initial-scale=0.01">
    <script type="text/javascript" async="" src="tasks_files/ga.js"></script><script type="text/javascript" src="tasks_files/jquery-1.js"></script>
    <script type="application/javascript">
        function adjustViewport() {
            var screenWidthPx = Math.min($(window).width(), window.screen.width);
            var siteWidthPx = 1100; // min width of site
            var ratio = Math.min(screenWidthPx / siteWidthPx, 1.0);
            var viewport = "width=device-width, initial-scale=" + ratio;
            $('#viewport').attr('content', viewport);
            var style = $('<style>html * { max-height: 1000000px; }</style>');
            $('html > head').append(style);
        }

        if ( /Android|webOS|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent) ) {
            adjustViewport();
        }
    </script>
    <meta http-equiv="pragma" content="no-cache">
    <meta http-equiv="expires" content="-1">
    <meta http-equiv="profileName" content="p1">
    <meta name="google-site-verification" content="OTd2dN5x4nS4OPknPI9JFg36fKxjqY0i1PSfFPv_J90">
    <meta property="fb:admins" content="100001352546622">
    <meta property="og:image" content="http://st.codeforces.com/s/45341/images/codeforces-telegram-square.png">
    <link rel="image_src" href="http://st.codeforces.com/s/45341/images/codeforces-telegram-square.png">
    <meta property="og:title" content="Задачи - Codeforces">
    <meta property="og:description" content="">
    
    <meta property="og:site_name" content="Codeforces">
    
    
    
    
    
    <meta name="utc_offset" content="+03:00">
    <meta name="verify-reformal" content="f56f99fd7e087fb6ccb48ef2">
    <title>Задачи - Codeforces</title>
        <meta name="description" content="Codeforces. Соревнования и олимпиады по информатике и программированию, сообщество программистов">
        <meta name="keywords" content="программирование информатика контест олимпиада алгоритмы c++ java графы vkcup">
    <meta name="robots" content="index, follow">

    <link rel="stylesheet" href="tasks_files/font-awesome.css" type="text/css" charset="utf-8">

        <link href="tasks_files/css.css" rel="stylesheet" type="text/css">
        <link href="tasks_files/css_002.css" rel="stylesheet" type="text/css">


    <link rel="shortcut icon" type="image/png" href="http://st.codeforces.com/s/45341/favicon.png">

    <!--CombineResourcesFilter-->
    <link rel="stylesheet" href="tasks_files/prettify.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/clear.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/style_002.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/ttypography.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/problem-statement.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/second-level-menu.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/roundbox.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/datatable.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/table-form.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/topic.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/jquery_003.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/facebox.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/jquery.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/jquery_004.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/codeforces.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/colorbox.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/jquery_002.css" type="text/css" charset="utf-8">
        <link rel="stylesheet" href="tasks_files/community.css" type="text/css" charset="utf-8">
        <link rel="stylesheet" href="tasks_files/sidebar-menu.css" type="text/css" charset="utf-8">

    <script type="text/javascript" src="tasks_files/prettify.js"></script>
    <script type="text/javascript" src="tasks_files/moment.js"></script>
    <script type="text/javascript" src="tasks_files/pushstream.js"></script>
    <script type="text/javascript" src="tasks_files/jquery_011.js"></script>
    <script type="text/javascript" src="tasks_files/jquery_012.js"></script>
    <script type="text/javascript" src="tasks_files/jquery_013.js"></script>
    <script type="text/javascript" src="tasks_files/jquery_009.js"></script>
    <script type="text/javascript" src="tasks_files/facebox.js"></script>
    <script type="text/javascript" src="tasks_files/jquery_010.js"></script>
    <script type="text/javascript" src="tasks_files/wysiwyg.js"></script>
    <script type="text/javascript" src="tasks_files/wysiwyg_004.js"></script>
    <script type="text/javascript" src="tasks_files/wysiwyg_002.js"></script>
    <script type="text/javascript" src="tasks_files/wysiwyg_003.js"></script>
    <script type="text/javascript" src="tasks_files/jquery_006.js"></script>
    <script type="text/javascript" src="tasks_files/jquery_004.js"></script>
    <script type="text/javascript" src="tasks_files/jquery.js"></script>
    <script type="text/javascript" src="tasks_files/jquery_008.js"></script>
    <script type="text/javascript" src="tasks_files/jquery_002.js"></script>
    <script type="text/javascript" src="tasks_files/jquery_005.js"></script>
    <script type="text/javascript" src="tasks_files/sjcl.js"></script>
    <script type="text/javascript" src="tasks_files/codeforces-options.js"></script>
    <script type="text/javascript" src="tasks_files/codeforces.js"></script>
    <!--/CombineResourcesFilter-->

    <link rel="stylesheet" href="tasks_files/style_003.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/style.css" type="text/css" charset="utf-8">

    <script type="text/javascript" src="tasks_files/share.js" charset="utf-8"></script>

    <script type="text/javascript" src="tasks_files/jquery_007.js"></script>
    <script type="text/javascript" src="tasks_files/set.js"></script>

    <!--[if IE]>
    <style>
        #sidebar {
            padding-left: 1em;
            margin: 1em 1em 1em 0;
        }
    </style>
    <![endif]-->

        <script type="text/javascript" src="tasks_files/jquery_003.js"></script>
        <script src="tasks_files/openapi.js" type="text/javascript"></script>

</head>
<body><span style="display:none;" class="csrf-token" data-csrf="6c5b0a437112f123e239341f862fb943">&nbsp;</span>
<div class="button-up" style="display: none; opacity: 0.7; width: 50px; height:100%; position: fixed; left: 0; top: 0; cursor: pointer; text-align: center; line-height: 35px; color: #d3dbe4; font-weight: bold; font-size: 3.0rem;"><i class="icon-circle-arrow-up"></i></div>

<!-- Codeforces JavaScripts. -->
<script type="text/javascript">
    var queryMobile = Codeforces.queryString.mobile;
    if (queryMobile === "true" || queryMobile === "false") {
        Codeforces.putToStorage("useMobile", queryMobile == "true");
    } else {
        var useMobile = Codeforces.getFromStorage("useMobile");
        if (useMobile === true || useMobile === false) {
            if (useMobile != false) {
                Codeforces.redirect(Codeforces.updateUrlParameter(document.location.href, "mobile", useMobile));
            }
        }
    }
</script>
<script type="text/javascript">
    VK.init({apiId: 1961905});
</script>
<script type="text/javascript">
    if (window.parent.frames.length > 0) {
        window.stop();
    }
</script>

    <script type="text/javascript">
        $(document).ready(function () {
    (function () {
        jQuery.expr[':'].containsCI = function(elem, index, match) {
            return !match || !match.length || match.length < 4 || !match[3] || (
                    elem.textContent || elem.innerText || jQuery(elem).text() || ''
            ).toLowerCase().indexOf(match[3].toLowerCase()) >= 0;
        }
    }(jQuery));

    $.ajaxPrefilter(function(options, originalOptions, xhr) {
        var csrf = Codeforces.getCsrfToken();

        if (csrf) {
            var data = originalOptions.data;
            if (originalOptions.data !== undefined) {
                if (Object.prototype.toString.call(originalOptions.data) === '[object String]') {
                    data = $.deparam(originalOptions.data);
                }
            } else {
                data = {};
            }
            options.data = $.param($.extend(data, { csrf_token: csrf }));
        }
    });

    window.getCodeforcesServerTime = function(callback) {
        $.post("/data/time", {}, callback, "json");
    }

    window.updateTypography = function () {
        $("div.ttypography code").addClass("tt");
        $("div.ttypography pre>code").addClass("prettyprint").removeClass("tt");
        $("div.ttypography table").addClass("bordertable");
        prettyPrint();
    }

    $.ajaxSetup({ scriptCharset: "utf-8" ,contentType: "application/x-www-form-urlencoded; charset=UTF-8", headers: {
        'X-Csrf-Token': Codeforces.getCsrfToken()
    }});

    window.updateTypography();

    Codeforces.signForms();

    setTimeout(function() {
        $(".second-level-menu-list").lavaLamp({
            fx: "backout",
            speed: 1000
        });
    }, 0);


    Codeforces.countdown();
    $("a[rel='photobox']").colorbox();

        var count = 0;

        function getDelay() {
            var delay = 0;
            var last = Codeforces.getFromStorage("LastOnlineTimeUpdaterMillis", 0);
            if (last && last != null) {
                var period = count < 20 ? 180 * 1000 : 360 * 1000;
                delay = period - (new Date().getTime() - last);
                if (delay < 0)
                    delay = 0;
            }
            return delay;
        }

        window.setInterval(function () {
            if (getDelay() <= 0 && count < 120) {
                ++count;
                Codeforces.ping("/data/update-online");
            }
        }, 5000);

        var handle = "cher-nov";
        $("a.rated-user:contains(" + handle + "), span.participant:contains(" + handle + ")").each(function () {
            if ($(this).text() == handle) {
                var td = $(this).parent();
                var tr = $(this).parent().parent();
                if (td.is("td") && tr.is("tr")) {
                    tr.addClass("highlighted-row");
                }
            }
        });

    function showAnnouncements(json) {
        info("j=" + JSON.stringify(json));

        if (json.t != "a") {
            return;
        }
        console.log("Got announcement from channel");
        setTimeout(function() {
            Codeforces.showAnnouncements(json.d, "ru");
        }, Math.random() * 500);
    }
    if (Codeforces.getParticipantChannel()) {
        Codeforces.subscribe(Codeforces.getParticipantChannel(), function(json) {
            showAnnouncements(json);
        });
    }

    if (Codeforces.getContestChannel()) {
        Codeforces.subscribe(Codeforces.getContestChannel(), function(json) {
            showAnnouncements(json);
        });
    }

    if (Codeforces.getGlobalChannel()) {
        Codeforces.subscribe(Codeforces.getGlobalChannel(), function(json) {
            showAnnouncements(json);
        });
    }

    if (Codeforces.getUserChannel()) {
        Codeforces.subscribe(Codeforces.getUserChannel(), function(json) {
            showAnnouncements(json);
        });
    }

    $(".clickable-title").click(function() {
        Codeforces.alert($(this).attr("title"));
    }).css("position", "relative").css("bottom", "3px");


    Codeforces.reformatTimes();
    Codeforces.initializePubSub();

    Codeforces.setupSpoilers();
    Codeforces.setupTutorials("/data/problemTutorial");
        });
    </script>

<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-743380-5']);
  _gaq.push(['_trackPageview']);

  (function () {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = (document.location.protocol == 'https:' ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>


<div id="body">
<div style="width: 950px; margin: 0 auto;">
    <div id="header" style="position: relative;">
        <div style="float:left;">
                 <a href="http://codeforces.com/"><img src="tasks_files/codeforces-logo-with-telegram.png"></a>
        </div>
        <div class="lang">
            <div style="text-align: right;">
                <a href="http://codeforces.com/contest/746/problems?locale=en"><img src="tasks_files/gb.png" title="In English" alt="In English"></a>
                <a href="http://codeforces.com/contest/746/problems?locale=ru"><img src="tasks_files/ru.png" title="По-русски" alt="По-русски"></a>
            </div>
        </div>
        <br style="clear: both;">
    </div>

    <div style="text-align: center; font-size: 1.8rem; margin-bottom: 0.5em;" class="caption">Codeforces Round #386 (Div. 2)</div>
    <div style="border-top: 1px solid #ccc; height: 1em;"></div>

        <div style="margin-bottom: 4em;page-break-after: always;">

<div class="problemindexholder" problemindex="A">
<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">A. Компот</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>1 секунда</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>У Николая есть <span class="tex-span"><i>a</i></span> лимонов, <span class="tex-span"><i>b</i></span> яблок и <span class="tex-span"><i>c</i></span> груш. Он решил приготовить из них компот. По рецепту фрукты должны быть в соотношении <span class="tex-span">1: 2: 4</span>, то есть на каждый лимон в компоте должно быть ровно <span class="tex-span">2</span> яблока и ровно <span class="tex-span">4</span>
 груши. При этом фрукты нельзя измельчать, ломать или разрезать, поэтому
 в компот обязательно должны попасть целиком фрукты&nbsp;— лимоны, 
яблоки и груши.</p><p>Перед вами стоит задача определить максимальное 
суммарное количество лимонов, яблок и груш, из которых можно сварить 
компот по рецепту. Возможна ситуация, когда Николай не сможет для 
приготовления компота использовать ни одного фрукта, в таком случае 
выведите <span class="tex-span">0</span>.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке следует целое положительное число <span class="tex-span"><i>a</i></span> (<span class="tex-span">1 ≤ <i>a</i> ≤ 1000</span>)&nbsp;— количество лимонов, которые есть у Николая</p><p>Во второй строке следует целое положительное число <span class="tex-span"><i>b</i></span> (<span class="tex-span">1 ≤ <i>b</i> ≤ 1000</span>)&nbsp;— количество яблок, которые есть у Николая.</p><p>В третьей строке следует целое положительное число <span class="tex-span"><i>c</i></span> (<span class="tex-span">1 ≤ <i>c</i> ≤ 1000</span>)&nbsp;— количество груш, которые есть у Николая.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите максимальное суммарное количество лимонов, яблок и груш, из которых можно сварить компот по рецепту.</p></div><div class="sample-tests"><div class="section-title">Примеры</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>2<br>5<br>7<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>7<br></pre></div><div class="input"><div class="title">Входные данные</div><pre>4<br>7<br>13<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>21<br></pre></div><div class="input"><div class="title">Входные данные</div><pre>2<br>3<br>2<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>0<br></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом примере Николай может использовать для приготовления компота <span class="tex-span">1</span> лимон, <span class="tex-span">2</span> яблока и <span class="tex-span">4</span> груши, поэтому ответ <span class="tex-span">1 + 2 + 4 = 7</span>.</p><p>Во втором примере Николай может использовать для приготовления компота <span class="tex-span">3</span> лимона, <span class="tex-span">6</span> яблок и <span class="tex-span">12</span> груш, поэтому ответ <span class="tex-span">3 + 6 + 12 = 21</span>.</p><p>В третьей примере Николаю не хватит груш, чтобы приготовить сколько-нибудь компота, поэтому ответ <span class="tex-span">0</span>.</p></div></div><p>  </p></div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");



    });
</script>
        </div>
        <div style="margin-bottom: 4em;page-break-after: always;">

<div class="problemindexholder" problemindex="B">
<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">B. Расшифровка</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>1 секунда</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Поликарп без ума от шифрования, поэтому он пишет Свете сообщения в зашифрованном виде. <span class="tex-font-style-it">Медианной буквой</span> в слове он называет ту, которая находится в середине слова. Если слово четной длины, то медианная буква та, которая стоит левее из двух средних букв. Медианная буква выделена подчеркиванием в следующих примерах: <span class="tex-font-style-tt">con<span class="tex-font-style-bf"><span class="tex-font-style-underline">t</span></span>est</span>, <span class="tex-font-style-tt">i<span class="tex-font-style-bf"><span class="tex-font-style-underline">n</span></span>fo</span>. Если слово состоит из одной буквы, то, по определению выше, она и будет его медианной буквой.</p><p>Поликарп шифрует каждое слово следующим образом: он выписывает медианную букву слова, затем удаляет эту букву из слова и повторяет процесс до тех пор, пока в слове есть хоть одна буква. Например, слово <span class="tex-font-style-tt">volga</span> он зашифрует в слово <span class="tex-font-style-tt">logva</span>.</p><p>Вам задано слово <span class="tex-span"><i>s</i></span>, зашифрованное Поликарпом, а ваша задача — расшифровать его.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке следует целое положительное число <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 2000</span>) — длина зашифрованного слова.</p><p>Во второй строке следует строка <span class="tex-span"><i>s</i></span> длины <span class="tex-span"><i>n</i></span>, состоящая из строчных букв латинского алфавита — зашифрованное слово.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите слово, которое зашифровал Поликарп.</p></div><div class="sample-tests"><div class="section-title">Примеры</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>5<br>logva<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>volga<br></pre></div><div class="input"><div class="title">Входные данные</div><pre>2<br>no<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>no<br></pre></div><div class="input"><div class="title">Входные данные</div><pre>4<br>abba<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>baba<br></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом примере Поликарп зашифровал слово <span class="tex-font-style-tt">volga</span>. Сначала он выписал букву <span class="tex-font-style-tt">l</span>, стоящую в позиции <span class="tex-span">3</span>, после чего его слово приняло вид <span class="tex-font-style-tt">voga</span>. После этого, Поликарп выписал букву <span class="tex-font-style-tt">o</span>, стоящую в позиции <span class="tex-span">2</span>, а его слово стало равным <span class="tex-font-style-tt">vga</span>. Затем, Поликарп выписал букву <span class="tex-font-style-tt">g</span>, стоящую во второй позиции, после этого слово изменилось на <span class="tex-font-style-tt">va</span>. Потом он выписал букву <span class="tex-font-style-tt">v</span>, а затем букву <span class="tex-font-style-tt">a</span>. Таким образом, зашифрованное слово выглядит как <span class="tex-font-style-tt">logva</span>.</p><p>Во втором примере Поликарп зашифровал слово <span class="tex-font-style-tt">no</span>. Сначала он выписал букву <span class="tex-font-style-tt">n</span>, слово стало равным <span class="tex-font-style-tt">o</span>, и он выписал букву <span class="tex-font-style-tt">o</span>. Таким образом, в этом примере, слово и его зашифровка выглядят одинаково.</p><p>В третьем примере Поликарп зашифровал слово <span class="tex-font-style-tt">baba</span>. Сначала он выписал букву <span class="tex-font-style-tt">a</span>, стоящую в позиции <span class="tex-span">2</span>, после чего слово стало равным <span class="tex-font-style-tt">bba</span>. Затем он выписал букву <span class="tex-font-style-tt">b</span>, стоящую в позиции <span class="tex-span">2</span>, а его слово приняло вид <span class="tex-font-style-tt">ba</span>. После этого он выписал сначала букву <span class="tex-font-style-tt">b</span>, стоящую в позиции <span class="tex-span">1</span>, слово приняло вид <span class="tex-font-style-tt">a</span>, и он выписал эту букву <span class="tex-font-style-tt">a</span>. Таким образом, зашифрованное слово выглядит как <span class="tex-font-style-tt">abba</span>.</p></div></div><p>  </p></div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");



    });
</script>
        </div>
        <div style="margin-bottom: 4em;page-break-after: always;">

<div class="problemindexholder" problemindex="C">
<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">C. Трамвай</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>1 секунда</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Трамвай в Берляндии ходит по прямой от точки <span class="tex-span">0</span> до точки <span class="tex-span"><i>s</i></span> и обратно, преодолевая <span class="tex-span">1</span> метр за <span class="tex-span"><i>t</i><sub class="lower-index">1</sub></span> секунд в обоих направлениях. То есть трамвай ходит равномерно прямолинейно, мгновенно разворачиваясь в точках <span class="tex-span"><i>x</i> = 0</span> и <span class="tex-span"><i>x</i> = <i>s</i></span>.</p><p>В точке <span class="tex-span"><i>x</i><sub class="lower-index">1</sub></span> находится Игорь. Ему нужно попасть в точку <span class="tex-span"><i>x</i><sub class="lower-index">2</sub></span>. Игорь преодолевает <span class="tex-span">1</span> метр за <span class="tex-span"><i>t</i><sub class="lower-index">2</sub></span> секунд. </p><p>Перед вами стоит задача определить минимальное время, за которое Игорь может добраться из точки <span class="tex-span"><i>x</i><sub class="lower-index">1</sub></span> в точку <span class="tex-span"><i>x</i><sub class="lower-index">2</sub></span>, если известно, где находится трамвай и в каком направлении он едет в момент, когда Игорь пришел в точку <span class="tex-span"><i>x</i><sub class="lower-index">1</sub></span>.</p><p>Игорь может неограниченное количество раз заходить в трамвай в любой момент времени, когда позиции его и трамвая совпадают. Точки, в которых Игорь может заходить и выходить из трамвая, <span class="tex-font-style-bf">не обязательно</span> целочисленные. Считайте, что любая высадка/посадка происходит мгновенно. Игорь может произвольным образом перемещаться по прямой (но не быстрее, чем <span class="tex-span">1</span> метр за <span class="tex-span"><i>t</i><sub class="lower-index">2</sub></span> секунд) или даже стоять на месте.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке следуют три целых числа <span class="tex-span"><i>s</i></span>, <span class="tex-span"><i>x</i><sub class="lower-index">1</sub></span> и <span class="tex-span"><i>x</i><sub class="lower-index">2</sub></span> (<span class="tex-span">2 ≤ <i>s</i> ≤ 1000</span>, <span class="tex-span">0 ≤ <i>x</i><sub class="lower-index">1</sub>, <i>x</i><sub class="lower-index">2</sub> ≤ <i>s</i></span>, <span class="tex-span"><i>x</i><sub class="lower-index">1</sub> ≠ <i>x</i><sub class="lower-index">2</sub></span>) — максимальная координата точки, до которой доезжает трамвай, точка, в которой находится Игорь и точка, в которую ему нужно попасть.</p><p>Во второй строке следуют два целых числа <span class="tex-span"><i>t</i><sub class="lower-index">1</sub></span> и <span class="tex-span"><i>t</i><sub class="lower-index">2</sub></span> (<span class="tex-span">1 ≤ <i>t</i><sub class="lower-index">1</sub>, <i>t</i><sub class="lower-index">2</sub> ≤ 1000</span>) — время в секундах, за которое трамвай преодолевает <span class="tex-span">1</span> метр, и время в секундах, за которое Игорь преодолевает <span class="tex-span">1</span> метр.</p><p>В третьей строке следуют два целых числа <span class="tex-span"><i>p</i></span> и <span class="tex-span"><i>d</i></span> (<span class="tex-span">1 ≤ <i>p</i> ≤ <i>s</i> - 1</span>, <span class="tex-span"><i>d</i></span> равняется <span class="tex-span">1</span> или <img class="tex-formula" src="tasks_files/939395a0e8a8d88a30b0277e77b1c43251e0ebd4.png" style="max-width: 100.0%;max-height: 100.0%;" align="middle">) — позиция трамвая в момент, когда Игорь пришел в точку <span class="tex-span"><i>x</i><sub class="lower-index">1</sub></span>, а также направление движения трамвая в этот же момент. Если <img class="tex-formula" src="tasks_files/93c21540ae62b27c25248affa63bcb8bdc16a341.png" style="max-width: 100.0%;max-height: 100.0%;" align="middle">, то трамвай движется в направлении от точки <span class="tex-span"><i>s</i></span> в точку <span class="tex-span">0</span>. Если <span class="tex-span"><i>d</i> = 1</span>, то трамвай движется в направлении от точки <span class="tex-span">0</span> в точку <span class="tex-span"><i>s</i></span>.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите минимальное время в секундах, за которое Игорь может добраться из точки <span class="tex-span"><i>x</i><sub class="lower-index">1</sub></span> в точку <span class="tex-span"><i>x</i><sub class="lower-index">2</sub></span>.</p></div><div class="sample-tests"><div class="section-title">Примеры</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>4 2 4<br>3 4<br>1 1<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>8<br></pre></div><div class="input"><div class="title">Входные данные</div><pre>5 4 0<br>1 2<br>3 1<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>7<br></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом примере Игорю выгоднее пойти пешком и не ждать трамвай. Таким образом, ему нужно пройти <span class="tex-span">2</span> метра и он сможет это сделать суммарно за <span class="tex-span">8</span> секунд, так как он преодолевает <span class="tex-span">1</span> метр за <span class="tex-span">4</span> секунды.</p><p>Во втором примере Игорь может, например, пойти в сторону точки <span class="tex-span"><i>x</i><sub class="lower-index">2</sub></span> и дойти до точки <span class="tex-span">1</span> за <span class="tex-span">6</span> секунд (так как ему нужно пройти для этого <span class="tex-span">3</span> метра, а он преодолевает <span class="tex-span">1</span> метр за <span class="tex-span">2</span> секунды). В этот момент времени, трамвай также будет находится в точке <span class="tex-span">1</span>, поэтому Игорь может зайти в него, и доехать оставшийся <span class="tex-span">1</span> метр за <span class="tex-span">1</span> секунду. Таким образом, Игорь доберётся до точки <span class="tex-span"><i>x</i><sub class="lower-index">2</sub></span> суммарно за <span class="tex-span">7</span> секунд.</p></div></div><p>  </p></div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");



    });
</script>
        </div>
        <div style="margin-bottom: 4em;page-break-after: always;">

<div class="problemindexholder" problemindex="D">
<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">D. Зеленый и черный чай</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>1 секунда</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Иннокентий очень любит чай и сегодня хочет выпить ровно <span class="tex-span"><i>n</i></span> чашек чая. Он бы выпил и больше, но у него осталось ровно <span class="tex-span"><i>n</i></span> пакетиков чая, <span class="tex-span"><i>a</i></span> из которых — зеленый чай и <span class="tex-span"><i>b</i></span> — черный.</p><p>Иннокентий не любит пить более, чем <span class="tex-span"><i>k</i></span> раз подряд один и тот же чай (зеленый или черный). Перед вами стоит задача определить порядок заваривания пакетиков, при котором Иннокентий сможет выпить <span class="tex-span"><i>n</i></span> чашек чая, при этом он не будет пить один и тот же чай более <span class="tex-span"><i>k</i></span> раз подряд, либо сообщить, что это невозможно. Каждый пакетик должен быть заварен ровно один раз.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке следуют четыре целых числа <span class="tex-span"><i>n</i></span>, <span class="tex-span"><i>k</i></span>, <span class="tex-span"><i>a</i></span> и <span class="tex-span"><i>b</i></span> (<span class="tex-span">1 ≤ <i>k</i> ≤ <i>n</i> ≤ 10<sup class="upper-index">5</sup></span>, <span class="tex-span">0 ≤ <i>a</i>, <i>b</i> ≤ <i>n</i></span>) — количество чашек чая, которые хочет выпить Иннокентий, максимальное количество чашек одного и того же чая, которые Иннокентий может выпить подряд, количество пакетиков с зеленым чаем и количество пакетиков с черным чаем. Гарантируется, что <span class="tex-span"><i>a</i> + <i>b</i> = <i>n</i></span>.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Если выпить <span class="tex-span"><i>n</i></span> чашек чая не удастся, выведите «<span class="tex-font-style-tt">NO</span>» (без кавычек).</p><p>В противном случае, выведите строку длины <span class="tex-span"><i>n</i></span>, состоящую из символов '<span class="tex-font-style-tt">G</span>' и '<span class="tex-font-style-tt">B</span>'. Если очередной символ равен '<span class="tex-font-style-tt">G</span>', то очередная кружка должна быть с зеленым чаем. Если очередной символ равен '<span class="tex-font-style-tt">B</span>', то очередная кружка должна быть с черным чаем. Если ответов несколько, разрешается вывести любой из них.</p></div><div class="sample-tests"><div class="section-title">Примеры</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>5 1 3 2<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>GBGBG<br></pre></div><div class="input"><div class="title">Входные данные</div><pre>7 2 2 5<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>BBGBGBB</pre></div><div class="input"><div class="title">Входные данные</div><pre>4 3 4 0<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>NO<br></pre></div></div></div></div><p>  </p></div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");



    });
</script>
        </div>
        <div style="margin-bottom: 4em;page-break-after: always;">

<div class="problemindexholder" problemindex="E">
<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">E. Замена чисел</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>1 секунда</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>У Евгения есть <span class="tex-span"><i>n</i></span> карточек, на каждой из которых написано ровно одно целое число. Евгений хочет поменяться с Николаем некоторыми карточками так, чтобы количество четных чисел на его карточках стало равно количеству нечетных чисел на его карточках, при этом все числа стали <span class="tex-font-style-bf">различными</span>. </p><p>У Николая есть <span class="tex-span"><i>m</i></span> карточек, на которых написаны различные числа от <span class="tex-span">1</span> до <span class="tex-span"><i>m</i></span>, то есть у Николая есть ровно одна карточка, на которой написано число <span class="tex-span">1</span>, ровно одна карточка, на которой написано число <span class="tex-span">2</span> и так далее.</p><p>Назовем обменом процесс, в котором Евгений отдает одну из своих карт Николаю, и берет у него одну другую карту. Перед вами стоит задача найти минимальное количество обменов карт, а также определить какие на какие карточки нужно обменивать Евгению. </p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке следуют два целых числа <span class="tex-span"><i>n</i></span> и <span class="tex-span"><i>m</i></span> (<span class="tex-span">2 ≤ <i>n</i> ≤ 2·10<sup class="upper-index">5</sup></span>, <span class="tex-span">1 ≤ <i>m</i> ≤ 10<sup class="upper-index">9</sup></span>)&nbsp;— количество карточек у Евгения и количество карточек у Николая. Гарантируется, что <span class="tex-span"><i>n</i></span> четно.</p><p>Во второй строке следует последовательность из <span class="tex-span"><i>n</i></span> целых положительных чисел <span class="tex-span"><i>a</i><sub class="lower-index">1</sub>, <i>a</i><sub class="lower-index">2</sub>, ..., <i>a</i><sub class="lower-index"><i>n</i></sub></span> (<span class="tex-span">1 ≤ <i>a</i><sub class="lower-index"><i>i</i></sub> ≤ 10<sup class="upper-index">9</sup></span>)&nbsp;— числа на карточках Евгения.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Если ответа не существует, выведите <span class="tex-font-style-tt">-1</span>.</p><p>В противном случае, в первую строку выведите минимальное количество обменов. Во вторую строку выведите <span class="tex-span"><i>n</i></span> чисел&nbsp;— карточки Евгения после обмена с Николаем. Порядок карточек должен совпадать с порядком карт из входных данных. Если <span class="tex-span"><i>i</i></span>-я карточка не обменивалась, то <span class="tex-span"><i>i</i></span>-е число должно совпадать с числом из входных данных. В противном случае, будет считаться, что эта карточка была поменяна, и <span class="tex-span"><i>i</i></span>-е число должно равняться числу на карточке, на которую она была поменяна.</p><p>Если ответов несколько, разрешается вывести любой из них.</p></div><div class="sample-tests"><div class="section-title">Примеры</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>6 2<br>5 6 7 9 4 5<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>1<br>5 6 7 9 4 2 <br></pre></div><div class="input"><div class="title">Входные данные</div><pre>8 6<br>7 7 7 7 8 8 8 8<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>6<br>7 2 4 6 8 1 3 5 <br></pre></div><div class="input"><div class="title">Входные данные</div><pre>4 1<br>4 2 1 10<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>-1<br></pre></div></div></div></div><p>  </p></div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");



    });
</script>
        </div>
        <div style="margin-bottom: 4em;page-break-after: always;">

<div class="problemindexholder" problemindex="F">
<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">F. Музыка в машине</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>1 секунда</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Саша ездит на работу на машине, и дорога занимает ровно <span class="tex-span"><i>k</i></span> минут. По дороге он слушает музыку. Все песни в его плейлисте расположены друг за другом и от прослушивания <span class="tex-span"><i>i</i></span>-й из них Саша получает удовольствие равное <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span>. При этом <span class="tex-span"><i>i</i></span>-я песня длится <span class="tex-span"><i>t</i><sub class="lower-index"><i>i</i></sub></span> минут. </p><p>Перед началом пути Саша включит произвольную песню под номером <span class="tex-span"><i>x</i></span>, и будет слушать песни по очереди: сначала песню под номером <span class="tex-span"><i>x</i></span>, затем песню под номером <span class="tex-span">(<i>x</i> + 1)</span>, затем песню под номером <span class="tex-span">(<i>x</i> + 2)</span>, и так далее. Он будет слушать песни пока не приедет на работу, либо пока не послушает последнюю песню из своего плейлиста.</p><p>Каждую песню Саша может либо прослушать полностью, либо прослушать ее <span class="tex-font-style-it">частично</span>. Во втором случае он слушает песню целое число минут хотя бы половину её длительности. Формально, если длина песни равна <span class="tex-span"><i>d</i></span> минут, то Саша послушает ее в течение не менее <img class="tex-formula" src="tasks_files/bb7194bfd9db12836b9819da2e695ec5620c08a0.png" style="max-width: 100.0%;max-height: 100.0%;" align="middle"> минут, а затем сразу переключит на следующую песню (если она есть). Например, если длина песни, которую Саша будет слушать <span class="tex-font-style-it">частично</span>, равна <span class="tex-span">5</span> минутам, то он должен послушать её хотя бы <span class="tex-span">3</span> минуты, а если длина песни равна <span class="tex-span">8</span> минутам — хотя бы <span class="tex-span">4</span> минуты.</p><p>Переключение песен происходит мгновенно.</p><p>При этом Саша согласен прослушать <span class="tex-font-style-it">частично</span> не более <span class="tex-span"><i>w</i></span> песен. Если последняя прослушанная песня играла менее, чем половину своей длительности, то она не приносит Саше удовольствия и не учитывается в песнях, прослушанных <span class="tex-font-style-it">частично</span>. Пропускать песни нельзя. Удовольствие от песни не зависит от режима ее прослушивания, для <span class="tex-span"><i>i</i></span>-й песни эта величина равна <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span>.</p><p>Помогите Саше выбрать такое <span class="tex-span"><i>x</i></span> и выбрать не более <span class="tex-span"><i>w</i></span> песен для <span class="tex-font-style-it">частичного</span> прослушивания, чтобы он получил максимальное удовольствие. Напишите программу находящую максимальное удовольствие, которое может получить Саша, от прослушивания песен по дороге на работу.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке следуют три целых числа <span class="tex-span"><i>n</i></span>, <span class="tex-span"><i>w</i></span> и <span class="tex-span"><i>k</i></span> (<span class="tex-span">1 ≤ <i>w</i> ≤ <i>n</i> ≤ 2·10<sup class="upper-index">5</sup></span>, <span class="tex-span">1 ≤ <i>k</i> ≤ 2·10<sup class="upper-index">9</sup></span>)&nbsp;— количество песен в плейлисте, количество песен, которые Саша согласен послушать <span class="tex-font-style-it">частично</span> и время в минутах, за которое Саша доезжает до работы.</p><p>Во второй строке следуют <span class="tex-span"><i>n</i></span> целых положительных чисел <span class="tex-span"><i>a</i><sub class="lower-index">1</sub>, <i>a</i><sub class="lower-index">2</sub>, ..., <i>a</i><sub class="lower-index"><i>n</i></sub></span> (<span class="tex-span">1 ≤ <i>a</i><sub class="lower-index"><i>i</i></sub> ≤ 10<sup class="upper-index">4</sup></span>), где <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> равно удовольствию, которое Саша получит от прослушивания <span class="tex-span"><i>i</i></span>-й песни.</p><p>В третьей строке следуют <span class="tex-span"><i>n</i></span> целых положительных чисел <span class="tex-span"><i>t</i><sub class="lower-index">1</sub>, <i>t</i><sub class="lower-index">2</sub>, ..., <i>t</i><sub class="lower-index"><i>n</i></sub></span> (<span class="tex-span">2 ≤ <i>t</i><sub class="lower-index"><i>i</i></sub> ≤ 10<sup class="upper-index">4</sup></span>), где <span class="tex-span"><i>t</i><sub class="lower-index"><i>i</i></sub></span> равно длительности <span class="tex-span"><i>i</i></span>-й песни в минутах.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите максимальное удовольствие, которое может получить Саша, от прослушивания песен по дороге на работу.</p></div><div class="sample-tests"><div class="section-title">Примеры</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>7 2 11<br>3 4 3 5 1 4 6<br>7 7 3 6 5 3 9<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>12<br></pre></div><div class="input"><div class="title">Входные данные</div><pre>8 4 20<br>5 6 4 3 7 5 4 1<br>10 12 5 12 14 8 5 8<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>19<br></pre></div><div class="input"><div class="title">Входные данные</div><pre>1 1 5<br>6<br>9<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>6<br></pre></div><div class="input"><div class="title">Входные данные</div><pre>1 1 3<br>4<br>7<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>0<br></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом примере Саше нужно начать прослушивание с песни номер <span class="tex-span">2</span>. Ее он должен прослушать <span class="tex-font-style-it">частично</span> (за <span class="tex-span">4</span> минуты), затем полностью прослушать песню номер <span class="tex-span">3</span> (за <span class="tex-span">3</span> минуты) и потом <span class="tex-font-style-it">частично</span> прослушать песню номер <span class="tex-span">4</span> (за <span class="tex-span">3</span> минуты). После прослушивания этих песен Саша получит удовольствие равное <span class="tex-span">4 + 3 + 5 = 12</span>. Песню номер <span class="tex-span">5</span> Саша прослушать не успеет, так как потратит на прослушивание песен <span class="tex-span">2</span>, <span class="tex-span">3</span> и <span class="tex-span">4</span> время равное <span class="tex-span">4 + 3 + 3 = 10</span> минутам и до работы останется ехать всего <span class="tex-span">1</span> минуту.</p></div></div><p>  </p></div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");



    });
</script>
        </div>
        <div style="margin-bottom: 2em;">

<div class="problemindexholder" problemindex="G">
<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">G. Новые дороги</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>В Берляндии есть <span class="tex-span"><i>n</i></span> городов, каждый из которых имеет свой уникальный номер — целое число от <span class="tex-span">1</span> до <span class="tex-span"><i>n</i></span>, причём столица имеет номер <span class="tex-span">1</span>. В Берляндии в настоящий момент совсем плохо с дорогами — их нет.</p><p>По этой причине было решено построить <span class="tex-span"><i>n</i> - 1</span> дорогу так, чтобы между каждой парой городов существовал ровно один путь по дорогам.</p><p>В плане на постройку дорог было указано <span class="tex-span"><i>t</i></span> чисел <span class="tex-span"><i>a</i><sub class="lower-index">1</sub>, <i>a</i><sub class="lower-index">2</sub>, ..., <i>a</i><sub class="lower-index"><i>t</i></sub></span>, где <span class="tex-span"><i>t</i></span> равно расстоянию от столицы до самого удаленного города, если добираться до него только по новым дорогам, а <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> равно количеству городов, которые должны находиться на расстоянии <span class="tex-span"><i>i</i></span> от столицы. Под расстоянием понимается количество дорог, которые нужно преодолеть на пути от одного города до другого.</p><p>Также было решено, что среди всех городов, исключая столицу, должно быть ровно <span class="tex-span"><i>k</i></span> городов, к которым примыкает ровно одна дорога. Такие города являются тупиковыми и не могут быть экономически привлекательными. При подсчете таких городов столица не учитывается независимо от количества примыкающих дорог к ней.</p><p>Перед вами стоит задача предложить план постройки дорог, удовлетворяющий всем описанным условиям, либо сообщить, что это невозможно.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке следуют три целых положительных числа <span class="tex-span"><i>n</i></span>, <span class="tex-span"><i>t</i></span> и <span class="tex-span"><i>k</i></span> (<span class="tex-span">2 ≤ <i>n</i> ≤ 2·10<sup class="upper-index">5</sup></span>, <span class="tex-span">1 ≤ <i>t</i>, <i>k</i> &lt; <i>n</i></span>) — расстояние до максимально удалённого города от столицы и количество городов, которые должны быть тупиковыми (столица в этом количестве не учитывается).</p><p>Во второй строке следует последовательность из <span class="tex-span"><i>t</i></span> целых чисел <span class="tex-span"><i>a</i><sub class="lower-index">1</sub>, <i>a</i><sub class="lower-index">2</sub>, ..., <i>a</i><sub class="lower-index"><i>t</i></sub></span> (<span class="tex-span">1 ≤ <i>a</i><sub class="lower-index"><i>i</i></sub> &lt; <i>n</i></span>), где <span class="tex-span"><i>i</i></span>-е число равно количеству городов, которые должны находиться на расстоянии <span class="tex-span"><i>i</i></span> от столицы. Гарантируется, что сумма всех значений <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> равна <span class="tex-span"><i>n</i> - 1</span>.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Если построить дороги, удовлетворяющие всем условиям, невозможно, выведите <span class="tex-font-style-tt">-1</span>.</p><p>В противном случае, выведите в первую строку одно целое число <span class="tex-span"><i>n</i></span> — количество городов в Берляндии. В следующей <span class="tex-span"><i>n</i> - 1</span> строке выведите по два целых числа — номера городов, которые соединяет очередная дорога. Каждая дорога должна быть выведена ровно один раз. Порядок вывода дорог и соединяемых дорогой городов неважен.</p><p>Если решений несколько, выведите любое. Помните, что столица имеет номер <span class="tex-span">1</span>.</p></div><div class="sample-tests"><div class="section-title">Примеры</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>7 3 3<br>2 3 1<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>7<br>1 3<br>2 1<br>2 6<br>2 4<br>7 4<br>3 5<br></pre></div><div class="input"><div class="title">Входные данные</div><pre>14 5 6<br>4 4 2 2 1<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>14<br>3 1<br>1 4<br>11 6<br>1 2<br>10 13<br>6 10<br>10 12<br>14 12<br>8 4<br>5 1<br>3 7<br>2 6<br>5 9<br></pre></div><div class="input"><div class="title">Входные данные</div><pre>3 1 1<br>2<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>-1<br></pre></div></div></div></div><p>  </p></div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");



    });
</script>
        </div>

    <br style="clear: both;">

    <div id="footer">
        <div><a href="http://codeforces.com/">Codeforces</a> (c) Copyright 2010-2016 Михаил Мирзаянов</div>
        <div>Соревнования по программированию 2.0</div>

    </div>
</div>


</div><div id="datepick-div" style="display: none;"></div><div id="cboxOverlay" style="display: none;"></div><div id="colorbox" class="" style="display: none; padding-bottom: 42px; padding-right: 42px;"><div id="cboxWrapper"><div><div id="cboxTopLeft" style="float: left;"></div><div id="cboxTopCenter" style="float: left;"></div><div id="cboxTopRight" style="float: left;"></div></div><div style="clear: left;"><div id="cboxMiddleLeft" style="float: left;"></div><div id="cboxContent" style="float: left;"><div id="cboxLoadedContent" style="width: 0px; height: 0px; overflow: hidden; float: left;"></div><div id="cboxLoadingOverlay" style="float: left;"></div><div id="cboxLoadingGraphic" style="float: left;"></div><div id="cboxTitle" style="float: left;"></div><div id="cboxCurrent" style="float: left;"></div><div id="cboxNext" style="float: left;"></div><div id="cboxPrevious" style="float: left;"></div><div id="cboxSlideshow" style="float: left;"></div><div id="cboxClose" style="float: left;"></div></div><div id="cboxMiddleRight" style="float: left;"></div></div><div style="clear: left;"><div id="cboxBottomLeft" style="float: left;"></div><div id="cboxBottomCenter" style="float: left;"></div><div id="cboxBottomRight" style="float: left;"></div></div></div><div style="position: absolute; width: 9999px; visibility: hidden; display: none;"></div></div></body></html>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN">
<html><head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta name="X-Csrf-Token" content="e5b20a2bf6549539399dc85fa92562fe">
    <meta id="viewport" name="viewport" content="width=device-width, initial-scale=0.01">
    <script type="text/javascript" async="" src="tasks_files/ga.js"></script><script type="text/javascript" src="tasks_files/jquery-1.js"></script>
    <script type="application/javascript">
        function adjustViewport() {
            var screenWidthPx = Math.min($(window).width(), window.screen.width);
            var siteWidthPx = 1100; // min width of site
            var ratio = Math.min(screenWidthPx / siteWidthPx, 1.0);
            var viewport = "width=device-width, initial-scale=" + ratio;
            $('#viewport').attr('content', viewport);
            var style = $('<style>html * { max-height: 1000000px; }</style>');
            $('html > head').append(style);
        }

        if ( /Android|webOS|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent) ) {
            adjustViewport();
        }
    </script>
    <meta http-equiv="pragma" content="no-cache">
    <meta http-equiv="expires" content="-1">
    <meta http-equiv="profileName" content="p1">
    <meta name="google-site-verification" content="OTd2dN5x4nS4OPknPI9JFg36fKxjqY0i1PSfFPv_J90">
    <meta property="fb:admins" content="100001352546622">
    <meta property="og:image" content="http://st.codeforces.com/s/87055/images/codeforces-telegram-square.png">
    <link rel="image_src" href="http://st.codeforces.com/s/87055/images/codeforces-telegram-square.png">
    <meta property="og:title" content="Задачи - Codeforces">
    <meta property="og:description" content="">
    
    <meta property="og:site_name" content="Codeforces">
    
    
    
    
    
    <meta name="utc_offset" content="+03:00">
    <meta name="verify-reformal" content="f56f99fd7e087fb6ccb48ef2">
    <title>Задачи - Codeforces</title>
        <meta name="description" content="Codeforces. Соревнования и олимпиады по информатике и программированию, сообщество программистов">
        <meta name="keywords" content="программирование информатика контест олимпиада алгоритмы c++ java графы vkcup">
    <meta name="robots" content="index, follow">

    <link rel="stylesheet" href="tasks_files/font-awesome.css" type="text/css" charset="utf-8">

        <link href="tasks_files/css.css" rel="stylesheet" type="text/css">
        <link href="tasks_files/css_002.css" rel="stylesheet" type="text/css">


    <link rel="shortcut icon" type="image/png" href="http://st.codeforces.com/s/87055/favicon.png">

    <!--CombineResourcesFilter-->
    <link rel="stylesheet" href="tasks_files/prettify.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/clear.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/style_003.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/ttypography.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/problem-statement.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/second-level-menu.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/roundbox.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/datatable.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/table-form.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/topic.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/jquery_002.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/facebox.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/jquery_004.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/jquery_003.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/codeforces.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/colorbox.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/jquery.css" type="text/css" charset="utf-8">
        <link rel="stylesheet" href="tasks_files/community.css" type="text/css" charset="utf-8">
        <link rel="stylesheet" href="tasks_files/sidebar-menu.css" type="text/css" charset="utf-8">

    <script type="text/javascript" src="tasks_files/prettify.js"></script>
    <script type="text/javascript" src="tasks_files/moment.js"></script>
    <script type="text/javascript" src="tasks_files/pushstream.js"></script>
    <script type="text/javascript" src="tasks_files/jquery_013.js"></script>
    <script type="text/javascript" src="tasks_files/jquery.js"></script>
    <script type="text/javascript" src="tasks_files/jquery_011.js"></script>
    <script type="text/javascript" src="tasks_files/jquery_009.js"></script>
    <script type="text/javascript" src="tasks_files/facebox.js"></script>
    <script type="text/javascript" src="tasks_files/jquery_003.js"></script>
    <script type="text/javascript" src="tasks_files/wysiwyg_002.js"></script>
    <script type="text/javascript" src="tasks_files/wysiwyg.js"></script>
    <script type="text/javascript" src="tasks_files/wysiwyg_004.js"></script>
    <script type="text/javascript" src="tasks_files/wysiwyg_003.js"></script>
    <script type="text/javascript" src="tasks_files/jquery_006.js"></script>
    <script type="text/javascript" src="tasks_files/jquery_005.js"></script>
    <script type="text/javascript" src="tasks_files/jquery_008.js"></script>
    <script type="text/javascript" src="tasks_files/jquery_010.js"></script>
    <script type="text/javascript" src="tasks_files/jquery_012.js"></script>
    <script type="text/javascript" src="tasks_files/jquery_002.js"></script>
    <script type="text/javascript" src="tasks_files/sjcl.js"></script>
    <script type="text/javascript" src="tasks_files/codeforces-options.js"></script>
    <script type="text/javascript" src="tasks_files/codeforces.js"></script>
    <!--/CombineResourcesFilter-->

    <link rel="stylesheet" href="tasks_files/style.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/style_002.css" type="text/css" charset="utf-8">

    <script type="text/javascript" src="tasks_files/share.js" charset="utf-8"></script>

    <script type="text/javascript" src="tasks_files/jquery_007.js"></script>
    <script type="text/javascript" src="tasks_files/set.js"></script>

    <!--[if IE]>
    <style>
        #sidebar {
            padding-left: 1em;
            margin: 1em 1em 1em 0;
        }
    </style>
    <![endif]-->

        <script type="text/javascript" src="tasks_files/jquery_004.js"></script>
        <script src="tasks_files/openapi.js" type="text/javascript"></script>

</head>
<body><span style="display:none;" class="csrf-token" data-csrf="e5b20a2bf6549539399dc85fa92562fe">&nbsp;</span>
<div class="button-up" style="display: none; opacity: 0.7; width: 50px; height:100%; position: fixed; left: 0; top: 0; cursor: pointer; text-align: center; line-height: 35px; color: #d3dbe4; font-weight: bold; font-size: 3.0rem;"><i class="icon-circle-arrow-up"></i></div>

<!-- Codeforces JavaScripts. -->
<script type="text/javascript">
    var queryMobile = Codeforces.queryString.mobile;
    if (queryMobile === "true" || queryMobile === "false") {
        Codeforces.putToStorage("useMobile", queryMobile == "true");
    } else {
        var useMobile = Codeforces.getFromStorage("useMobile");
        if (useMobile === true || useMobile === false) {
            if (useMobile != false) {
                Codeforces.redirect(Codeforces.updateUrlParameter(document.location.href, "mobile", useMobile));
            }
        }
    }
</script>
<script type="text/javascript">
    VK.init({apiId: 1961905});
</script>
<script type="text/javascript">
    if (window.parent.frames.length > 0) {
        window.stop();
    }
</script>

    <script type="text/javascript">
        $(document).ready(function () {
    (function () {
        jQuery.expr[':'].containsCI = function(elem, index, match) {
            return !match || !match.length || match.length < 4 || !match[3] || (
                    elem.textContent || elem.innerText || jQuery(elem).text() || ''
            ).toLowerCase().indexOf(match[3].toLowerCase()) >= 0;
        }
    }(jQuery));

    $.ajaxPrefilter(function(options, originalOptions, xhr) {
        var csrf = Codeforces.getCsrfToken();

        if (csrf) {
            var data = originalOptions.data;
            if (originalOptions.data !== undefined) {
                if (Object.prototype.toString.call(originalOptions.data) === '[object String]') {
                    data = $.deparam(originalOptions.data);
                }
            } else {
                data = {};
            }
            options.data = $.param($.extend(data, { csrf_token: csrf }));
        }
    });

    window.getCodeforcesServerTime = function(callback) {
        $.post("/data/time", {}, callback, "json");
    }

    window.updateTypography = function () {
        $("div.ttypography code").addClass("tt");
        $("div.ttypography pre>code").addClass("prettyprint").removeClass("tt");
        $("div.ttypography table").addClass("bordertable");
        prettyPrint();
    }

    $.ajaxSetup({ scriptCharset: "utf-8" ,contentType: "application/x-www-form-urlencoded; charset=UTF-8", headers: {
        'X-Csrf-Token': Codeforces.getCsrfToken()
    }});

    window.updateTypography();

    Codeforces.signForms();

    setTimeout(function() {
        $(".second-level-menu-list").lavaLamp({
            fx: "backout",
            speed: 1000
        });
    }, 0);


    Codeforces.countdown();
    $("a[rel='photobox']").colorbox();

        var count = 0;

        function getDelay() {
            var delay = 0;
            var last = Codeforces.getFromStorage("LastOnlineTimeUpdaterMillis", 0);
            if (last && last != null) {
                var period = count < 20 ? 180 * 1000 : 360 * 1000;
                delay = period - (new Date().getTime() - last);
                if (delay < 0)
                    delay = 0;
            }
            return delay;
        }

        window.setInterval(function () {
            if (getDelay() <= 0 && count < 120) {
                ++count;
                Codeforces.ping("/data/update-online");
            }
        }, 5000);

        var handle = "cher-nov";
        $("a.rated-user:contains(" + handle + "), span.participant:contains(" + handle + ")").each(function () {
            if ($(this).text() == handle) {
                var td = $(this).parent();
                var tr = $(this).parent().parent();
                if (td.is("td") && tr.is("tr")) {
                    tr.addClass("highlighted-row");
                }
            }
        });

    function showAnnouncements(json) {
        info("j=" + JSON.stringify(json));

        if (json.t != "a") {
            return;
        }
        console.log("Got announcement from channel");
        setTimeout(function() {
            Codeforces.showAnnouncements(json.d, "ru");
        }, Math.random() * 500);
    }
    if (Codeforces.getParticipantChannel()) {
        Codeforces.subscribe(Codeforces.getParticipantChannel(), function(json) {
            showAnnouncements(json);
        });
    }

    if (Codeforces.getContestChannel()) {
        Codeforces.subscribe(Codeforces.getContestChannel(), function(json) {
            showAnnouncements(json);
        });
    }

    if (Codeforces.getGlobalChannel()) {
        Codeforces.subscribe(Codeforces.getGlobalChannel(), function(json) {
            showAnnouncements(json);
        });
    }

    if (Codeforces.getUserChannel()) {
        Codeforces.subscribe(Codeforces.getUserChannel(), function(json) {
            showAnnouncements(json);
        });
    }

    $(".clickable-title").click(function() {
        Codeforces.alert($(this).attr("title"));
    }).css("position", "relative").css("bottom", "3px");


    Codeforces.reformatTimes();
    Codeforces.initializePubSub();

    Codeforces.setupSpoilers();
    Codeforces.setupTutorials("/data/problemTutorial");
        });
    </script>

<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-743380-5']);
  _gaq.push(['_trackPageview']);

  (function () {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = (document.location.protocol == 'https:' ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>


<div id="body">
<div style="width: 950px; margin: 0 auto;">
    <div id="header" style="position: relative;">
        <div style="float:left;">
                 <a href="http://codeforces.com/"><img src="tasks_files/codeforces-logo-with-telegram.png"></a>
        </div>
        <div class="lang">
            <div style="text-align: right;">
                <a href="http://codeforces.com/contest/722/problems?locale=en"><img src="tasks_files/gb.png" title="In English" alt="In English"></a>
                <a href="http://codeforces.com/contest/722/problems?locale=ru"><img src="tasks_files/ru.png" title="По-русски" alt="По-русски"></a>
            </div>
        </div>
        <br style="clear: both;">
    </div>

    <div style="text-align: center; font-size: 1.8rem; margin-bottom: 0.5em;" class="caption">Intel Code Challenge Elimination Round (Div.1 + Div.2, combined)</div>
    <div style="border-top: 1px solid #ccc; height: 1em;"></div>

        <div style="margin-bottom: 4em;page-break-after: always;">

<div class="problemindexholder" problemindex="A">
<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">A. Сломанные часы</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>1 секунда</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>У вас есть сломанные часы, про которые известно, в 12- или 24-часовом формате <span class="tex-font-style-tt">HH:MM</span> они должны показывать время. В 12-часовом формате часы изменяются в пределах от <span class="tex-span">1</span> до <span class="tex-span">12</span>, а в 24-часовом&nbsp;— от <span class="tex-span">0</span> до <span class="tex-span">23</span>. И в том, и в другом формате минуты изменяются от <span class="tex-span">0</span> до <span class="tex-span">59</span>.</p><p>Вам задано время в формате <span class="tex-font-style-tt">HH:MM</span>,
 которое показывают сломанные часы. Исправьте в нём минимальное 
количество цифр так, чтобы часы стали показывать верное время в заданном
 формате.</p><p>Например, если часы показывают <span class="tex-font-style-tt">00:99</span>, то, чтобы сделать время корректным в 24-часовом формате, достаточно заменить первую цифру <span class="tex-font-style-tt">9</span> на цифру <span class="tex-font-style-tt">3</span> и получить <span class="tex-font-style-tt">00:39</span>.
 Однако, чтобы получить корректную запись времени в 12-часовом формате, 
придётся дополнительно исправить как минимум две цифры, например 
дополнительно заменить второй <span class="tex-font-style-tt">0</span> на <span class="tex-font-style-tt">1</span> и получить <span class="tex-font-style-tt">01:39</span>.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке входных данных находится одно из чисел <span class="tex-span">12</span> или <span class="tex-span">24</span>, обозначающее соответственно 12- или 24-часовой формат, в котором должны работать часы.</p><p>Во второй строке входного файла дано время, которое показывают часы, в формате <span class="tex-font-style-tt">HH:MM</span>, то есть первые два символа описывают количество часов, а вторые два&nbsp;— количество минут.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>В единственной строке выходного файла выведите время в формате <span class="tex-font-style-tt">HH:MM</span>,
 которое удовлетворяет условиям задачи и отличается от исходного в 
минимальном количестве позиций. Если подходящих решений несколько, 
можете вывести любое.</p></div><div class="sample-tests"><div class="section-title">Примеры</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>24<br>17:30<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>17:30<br></pre></div><div class="input"><div class="title">Входные данные</div><pre>12<br>17:30<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>07:30<br></pre></div><div class="input"><div class="title">Входные данные</div><pre>24<br>99:99<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>09:09<br></pre></div></div></div></div><p>  </p></div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");



    });
</script>
        </div>
        <div style="margin-bottom: 4em;page-break-after: always;">

<div class="problemindexholder" problemindex="B">
<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">B. Стихотворный шаблон</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>1 секунда</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Вам задан текст, состоящий из <span class="tex-span"><i>n</i></span> строк. Каждая строка содержит несколько слов, состоящих из строчных английских букв, разделённых пробелами.</p><p>Назовём слогом строчку, содержащую ровно одну гласную букву и некоторое (возможно, нулевое) количество согласных. Гласными буквами принято считать «<span class="tex-font-style-tt">a</span>», «<span class="tex-font-style-tt">e</span>», «<span class="tex-font-style-tt">i</span>», «<span class="tex-font-style-tt">o</span>», «<span class="tex-font-style-tt">u</span>», «<span class="tex-font-style-tt">y</span>».</p><p>Каждое слово в тексте, в котором есть хотя бы одна гласная буква, можно разбить на слоги. При этом каждая буква слова должна попасть ровно в один слог. Например, слово «<span class="tex-font-style-tt">mamma</span>» можно разбить на слоги как «<span class="tex-font-style-tt">ma</span>» и «<span class="tex-font-style-tt">mma</span>», «<span class="tex-font-style-tt">mam</span>» и «<span class="tex-font-style-tt">ma</span>», и «<span class="tex-font-style-tt">mamm</span>» и «<span class="tex-font-style-tt">a</span>». Слова, целиком состоящие из согласных букв, будем игнорировать.</p><p>Стихотворным шаблоном для данного текста называется последовательность <span class="tex-span"><i>p</i><sub class="lower-index">1</sub>, <i>p</i><sub class="lower-index">2</sub>, ..., <i>p</i><sub class="lower-index"><i>n</i></sub></span> из <span class="tex-span"><i>n</i></span> неотрицательных целых чисел. Текст подходит под стихотворный шаблон, если для каждого <span class="tex-span"><i>i</i></span> от <span class="tex-span">1</span> до <span class="tex-span"><i>n</i></span> можно разбить все слова в <span class="tex-span"><i>i</i></span>-й строке на слоги так, чтобы суммарное количество слогов равнялось бы <span class="tex-span"><i>p</i><sub class="lower-index"><i>i</i></sub></span>.</p><p>Определите, подходит ли заданный текст под заданный стихотворный шаблон.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке входных данных записано число <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 100</span>)&nbsp;— количество строк в тексте.</p><p>Во второй строке даны числа <span class="tex-span"><i>p</i><sub class="lower-index">1</sub>, ..., <i>p</i><sub class="lower-index"><i>n</i></sub></span> (<span class="tex-span">0 ≤ <i>p</i><sub class="lower-index"><i>i</i></sub> ≤ 100</span>)&nbsp;— стихотворный шаблон для данного текста.</p><p>В следующих <span class="tex-span"><i>n</i></span> строках дан сам текст. Текст состоит из строчных букв английского алфавита и пробелов. Гарантируется, что все строки непусты, каждая строка начинается и заканчивается буквой, слова разделены ровно одним пробелом. Длина каждой строки не превышает <span class="tex-span">100</span> символов.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>В единственной строке выведите «<span class="tex-font-style-tt">YES</span>» (без кавычек), если текст подходит под заданный шаблон, и «<span class="tex-font-style-tt">NO</span>» в противном случае.</p></div><div class="sample-tests"><div class="section-title">Примеры</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>3<br>2 2 3<br>intel<br>code<br>ch allenge<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>YES<br></pre></div><div class="input"><div class="title">Входные данные</div><pre>4<br>1 2 3 1<br>a<br>bcdefghi<br>jklmnopqrstu<br>vwxyz<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>NO<br></pre></div><div class="input"><div class="title">Входные данные</div><pre>4<br>13 11 15 15<br>to be or not to be that is the question<br>whether tis nobler in the mind to suffer<br>the slings and arrows of outrageous fortune<br>or to take arms against a sea of troubles<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>YES<br></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом примере слова можно разбить на слоги следующим образом: </p><pre>in-tel<br>co-de<br>ch al-len-ge<br></pre><p>Поскольку в слове «<span class="tex-font-style-tt">ch</span>» в третьей строке нет ни одной гласной буквы, оно игнорируется при подсчете количества слогов. В итоге мы получаем по <span class="tex-span">2</span> слога в первых двух строках и <span class="tex-span">3</span> слога в третьей.</p></div></div><p>  </p></div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");



    });
</script>
        </div>
        <div style="margin-bottom: 4em;page-break-after: always;">

<div class="problemindexholder" problemindex="C">
<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">C. Уничтожение массива</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>1 секунда</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Вам дан массив, состоящий из <span class="tex-span"><i>n</i></span> неотрицательных целых чисел <span class="tex-span"><i>a</i><sub class="lower-index">1</sub>, <i>a</i><sub class="lower-index">2</sub>, ..., <i>a</i><sub class="lower-index"><i>n</i></sub></span>.</p><p>В этом массиве один за другим зачёркиваются числа. Вам задана перестановка чисел от <span class="tex-span">1</span> до <span class="tex-span"><i>n</i></span>&nbsp;— порядок, в котором это происходит.</p><p>После зачёркивания очередного числа вам необходимо найти в этом массиве подотрезок с максимальной суммой, не содержащий ни одного зачёркнутого числа. Сумму чисел в пустом подотрезке считайте равной <span class="tex-span">0</span>.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке входных данных записано число <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 100 000</span>)&nbsp;— длина массива.</p><p>В второй строке записаны <span class="tex-span"><i>n</i></span> целых чисел <span class="tex-span"><i>a</i><sub class="lower-index">1</sub>, <i>a</i><sub class="lower-index">2</sub>, ..., <i>a</i><sub class="lower-index"><i>n</i></sub></span> (<span class="tex-span">0 ≤ <i>a</i><sub class="lower-index"><i>i</i></sub> ≤ 10<sup class="upper-index">9</sup></span>). </p><p>В третьей строке входных данных записана перестановка чисел от <span class="tex-span">1</span> до <span class="tex-span"><i>n</i></span>&nbsp;— порядок, в котором зачеркиваются числа.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>В выходной файл выведите <span class="tex-span"><i>n</i></span> строк, каждая из которых должна содержать одно число&nbsp;— максимальную сумму на подотрезке заданного массива, не содержащем зачёркнутых чисел, после выполнения очередного действия. </p></div><div class="sample-tests"><div class="section-title">Примеры</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>4<br>1 3 2 5<br>3 4 1 2<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>5<br>4<br>3<br>0<br></pre></div><div class="input"><div class="title">Входные данные</div><pre>5<br>1 2 3 4 5<br>4 2 3 5 1<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>6<br>5<br>5<br>1<br>0<br></pre></div><div class="input"><div class="title">Входные данные</div><pre>8<br>5 5 4 4 6 6 5 5<br>5 2 8 7 1 3 4 6<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>18<br>16<br>11<br>8<br>8<br>6<br>6<br>0<br></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом тестовом примере происходит следующее: </p><ol> <li> Зачеркивается третий элемент, массив принимает вид <span class="tex-span">1&nbsp;3&nbsp; * &nbsp;5</span>. Отрезок с максимально суммой <span class="tex-span">5</span> состоит из одного числа <span class="tex-span">5</span>. </li><li> Зачеркивается четвертый элемент, массив принимает вид <span class="tex-span">1&nbsp;3&nbsp; * &nbsp; * </span>. Отрезок с максимально суммой <span class="tex-span">4</span> состоит из двух чисел <span class="tex-span">1&nbsp;3</span>. </li><li> Зачеркивается первый элемент, массив принимает вид <span class="tex-span"> * &nbsp;3&nbsp; * &nbsp; * </span>. Отрезок с максимально суммой <span class="tex-span">3</span> состоит из одного числа <span class="tex-span">3</span>. </li><li> Зачеркивается оставшийся второй элемент, в этот момент непустых допустимых подотрезков не остается, поэтому здесь ответ равен нулю. </li></ol></div></div><p>  </p></div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");



    });
</script>
        </div>
        <div style="margin-bottom: 4em;page-break-after: always;">

<div class="problemindexholder" problemindex="D">
<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">D. Генерация наборов</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Вам задан набор <span class="tex-span"><i>Y</i></span> из <span class="tex-span"><i>n</i></span> <span class="tex-font-style-bf">различных</span> целых положительных чисел <span class="tex-span"><i>y</i><sub class="lower-index">1</sub>, <i>y</i><sub class="lower-index">2</sub>, ..., <i>y</i><sub class="lower-index"><i>n</i></sub></span>.</p><p>Назовём набор <span class="tex-span"><i>X</i></span> из <span class="tex-span"><i>n</i></span> <span class="tex-font-style-bf">различных</span> целых положительных чисел <span class="tex-span"><i>x</i><sub class="lower-index">1</sub>, <i>x</i><sub class="lower-index">2</sub>, ..., <i>x</i><sub class="lower-index"><i>n</i></sub></span> <span class="tex-font-style-it">генератором</span> для <span class="tex-span"><i>Y</i></span>, если из набора <span class="tex-span"><i>X</i></span> можно получить набор <span class="tex-span"><i>Y</i></span>, применяя к элементам набора <span class="tex-span"><i>X</i></span> следующие две операции:</p><ol> <li> Умножить произвольное число <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub></span> на два, то есть заменить <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub></span> на <span class="tex-span">2·<i>x</i><sub class="lower-index"><i>i</i></sub></span>. </li><li> Умножить произвольное число <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub></span> на два и прибавить единицу, то есть заменить <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub></span> на <span class="tex-span">2·<i>x</i><sub class="lower-index"><i>i</i></sub> + 1</span>. </li></ol><p>Обратите внимание, не требуется, чтобы все числа в наборе <span class="tex-span"><i>X</i></span> были различны после выполнения каждой операции.</p><p>Наборы в данной задаче сравниваются как множества чисел. Другими словами, два набора различных чисел <span class="tex-span"><i>X</i></span> и <span class="tex-span"><i>Y</i></span> совпадают, если, выписав оба набора в отсортированном порядке, мы получим одинаковые массивы.</p><p>Заметьте, что любой набор чисел (или его перестановка) сам является одним из своих генераторов.</p><p>По заданному набору <span class="tex-span"><i>Y</i></span> найдите его генератор, в котором <span class="tex-font-style-bf">максимальное число минимально</span>.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке входных данных записано число <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 50 000</span>)&nbsp;— количество чисел в наборе <span class="tex-span"><i>Y</i></span>.</p><p>Во второй строке записаны <span class="tex-span"><i>n</i></span> чисел <span class="tex-span"><i>y</i><sub class="lower-index">1</sub>, ..., <i>y</i><sub class="lower-index"><i>n</i></sub></span> (<span class="tex-span">1 ≤ <i>y</i><sub class="lower-index"><i>i</i></sub> ≤ 10<sup class="upper-index">9</sup></span>). Гарантируется, что все числа в наборе различны.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите <span class="tex-span"><i>n</i></span> чисел&nbsp;— генератор для заданного набора <span class="tex-span"><i>Y</i></span>, в котором максимальное число как можно меньше. Если подходящих наборов несколько, разрешается вывести любой из них.</p></div><div class="sample-tests"><div class="section-title">Примеры</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>5<br>1 2 3 4 5<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>4 5 2 3 1 <br></pre></div><div class="input"><div class="title">Входные данные</div><pre>6<br>15 14 3 13 1 12<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>12 13 14 7 3 1 <br></pre></div><div class="input"><div class="title">Входные данные</div><pre>6<br>9 7 13 17 5 11<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>4 5 2 6 3 1 <br></pre></div></div></div></div><p>  </p></div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");



    });
</script>
        </div>
        <div style="margin-bottom: 4em;page-break-after: always;">

<div class="problemindexholder" problemindex="E">
<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">E. Исследовательский зонд</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2.5 секунд</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p><span class="tex-font-style-it">К сожалению, в этой задаче не удалось написать достаточно короткую формальную постановку, поэтому пришлось придумать легенду.</span></p><p>Исследовательский зонд, наконец, достиг поверхности Марса и готов выполнить свою миссию. К сожалению, из-за сбоя навигационной системы, зонд приземлился не в той точке, в которой планировалось.</p><p>Участок, на котором высадился зонд, можно представить в виде клетчатого поля, состоящего из <span class="tex-span"><i>n</i></span> строк и <span class="tex-span"><i>m</i></span> столбцов. Будем обозначать через <span class="tex-span">(<i>r</i>, <i>c</i>)</span> клетку, расположенную в строке <span class="tex-span"><i>r</i></span> и столбце <span class="tex-span"><i>c</i></span>. Из каждой клетки зонд может продолжить движение только в клетки по соседству с текущей по стороне.</p><p>Зонд высадился в клетке с координатами <span class="tex-span">(1, 1)</span> и должен отправиться в клетку с координатами <span class="tex-span">(<i>n</i>, <i>m</i>)</span>. Для этого зонд выберет произвольный <span class="tex-font-style-bf">кратчайший маршрут</span>, соединяющий начальную и конечную клетки. Каждый возможный маршрут зонд выберет с равной вероятностью.</p><p>В грузовом отсеке зонда находится батарея, которая понадобится зонду для проведения исследований в конечной точке его маршрута. Изначально заряд батареи равен <span class="tex-span"><i>s</i></span> единицам энергии.</p><p>В некоторых клетках данного поля находятся аномалии. Каждый раз, когда зонд оказывается в клетке с аномалией, батарея теряет половину своего заряда, округлённую вниз, то есть если до попадания в аномалию заряд был равен <span class="tex-span"><i>x</i></span>, то после попадания он будет равен <img class="tex-formula" src="tasks_files/98ea5b1147f0cd47f76c0c7a19aed60be7155d6f.png" style="max-width: 100.0%;max-height: 100.0%;" align="middle">.</p><p>Пока зонд перебирает все возможные маршруты своего путешествия, посчитайте математическое ожидание заряда батареи в момент, когда робот достигнет клетки <span class="tex-span">(<i>n</i>, <i>m</i>)</span>. Если в клетках <span class="tex-span">(1, 1)</span> и <span class="tex-span">(<i>n</i>, <i>m</i>)</span> также есть аномалии, то они тоже изменяют заряд батареи.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>Первая строка входных данных содержит четыре целых числа <span class="tex-span"><i>n</i></span>, <span class="tex-span"><i>m</i></span>, <span class="tex-span"><i>k</i></span> и&nbsp;<span class="tex-span"><i>s</i></span> (<span class="tex-span">1 ≤ <i>n</i>, <i>m</i> ≤ 100 000</span>, <span class="tex-span">0 ≤ <i>k</i> ≤ 2000</span>, <span class="tex-span">1 ≤ <i>s</i> ≤ 1 000 000</span>)&nbsp;— количество строк и столбцов поля, количество клеток с аномалиями и начальный заряд батареи.</p><p>Следующие <span class="tex-span"><i>k</i></span> строк содержат по два числа <span class="tex-span"><i>r</i><sub class="lower-index"><i>i</i></sub></span> и&nbsp;<span class="tex-span"><i>c</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">1 ≤ <i>r</i><sub class="lower-index"><i>i</i></sub> ≤ <i>n</i></span>, <span class="tex-span">1 ≤ <i>c</i><sub class="lower-index"><i>i</i></sub> ≤ <i>m</i></span>)&nbsp;— координаты клетки, содержащей аномалию. Гарантируется, что никакая клетка не встречается во входном файле более одного раза.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Ответ всегда можно представить в виде несократимой дроби <img class="tex-formula" src="tasks_files/1d99bb55692869d248f3e0a82cd378cfc79e13ec.png" style="max-width: 100.0%;max-height: 100.0%;" align="middle">. Выведите единственное число, равное <span class="tex-span"><i>P</i>·<i>Q</i><sup class="upper-index"> - 1</sup></span> по модулю <span class="tex-span">10<sup class="upper-index">9</sup> + 7</span>.</p></div><div class="sample-tests"><div class="section-title">Примеры</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>3 3 2 11<br>2 1<br>2 3<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>333333342<br></pre></div><div class="input"><div class="title">Входные данные</div><pre>4 5 3 17<br>1 2<br>3 3<br>4 1<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>514285727<br></pre></div><div class="input"><div class="title">Входные данные</div><pre>1 6 2 15<br>1 1<br>1 5<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>4<br></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом примере зонд может выбрать один из шести маршрутов: </p><ol> <li> <img class="tex-formula" src="tasks_files/17e355eba0c4f50011e2aaf46c8139ab9941d4d7.png" style="max-width: 100.0%;max-height: 100.0%;" align="middle">, после прохождения клетки <span class="tex-span">(2, 3)</span> заряд становится равным <span class="tex-span">6</span>. </li><li> <img class="tex-formula" src="tasks_files/4bb68cf5065033188acc3290cb1eab530a2de8b1.png" style="max-width: 100.0%;max-height: 100.0%;" align="middle">, после прохождения клетки <span class="tex-span">(2, 3)</span> заряд становится равным <span class="tex-span">6</span>. </li><li> <img class="tex-formula" src="tasks_files/75ae5f2937f1a5f2eb2fd66bd877de0125bb66d6.png" style="max-width: 100.0%;max-height: 100.0%;" align="middle">, заряд батареи остаётся равным <span class="tex-span">11</span>. </li><li> <img class="tex-formula" src="tasks_files/4fcbb6fb3b7630f3e0de94cb9343188e3a5b3f3b.png" style="max-width: 100.0%;max-height: 100.0%;" align="middle">, после прохождения клеток <span class="tex-span">(2, 1)</span> и <span class="tex-span">(2, 3)</span> заряд становится равным сначала <span class="tex-span">6</span>, а затем <span class="tex-span">3</span>. </li><li> <img class="tex-formula" src="tasks_files/2aa4fab52ed138f54cd2241c31b9817e9ed621e2.png" style="max-width: 100.0%;max-height: 100.0%;" align="middle">, после прохождения клетки <span class="tex-span">(2, 1)</span> заряд становится равным <span class="tex-span">6</span>. </li><li> <img class="tex-formula" src="tasks_files/6c827d2d90c5a43350c1176d6ec3fab211ea5a61.png" style="max-width: 100.0%;max-height: 100.0%;" align="middle">, после прохождения клетки <span class="tex-span">(2, 1)</span> заряд становится равным <span class="tex-span">6</span>. </li></ol><p>Математическое ожидание заряда батареи в конце пути в данном случае считается по формуле: <img class="tex-formula" src="tasks_files/d0038e5df4118f19113ac2c11b37a59d638b8d25.png" style="max-width: 100.0%;max-height: 100.0%;" align="middle">.</p><p>Таким образом, <span class="tex-span"><i>P</i> = 19</span>, а <span class="tex-span"><i>Q</i> = 3</span>.</p><p><span class="tex-span">3<sup class="upper-index"> - 1</sup></span> по модулю <span class="tex-span">10<sup class="upper-index">9</sup> + 7</span> равно <span class="tex-span">333333336</span>.</p><p><span class="tex-span">19·333333336 = 333333342&nbsp;(<i>mod</i>&nbsp;10<sup class="upper-index">9</sup> + 7)</span></p></div></div><p>  </p></div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");



    });
</script>
        </div>
        <div style="margin-bottom: 2em;">

<div class="problemindexholder" problemindex="F">
<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">F. Циклический шифр</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Вам задан набор из <span class="tex-span"><i>n</i></span> последовательностей. Каждая из последовательностей состоит из целых положительных чисел, не превосходящих <span class="tex-span"><i>m</i></span>. Все числа внутри одной последовательности различны, но одно и то же число может встречаться в разных последовательностях. Длина <span class="tex-span"><i>i</i></span>-й последовательности равна <span class="tex-span"><i>k</i><sub class="lower-index"><i>i</i></sub></span>.</p><p>Раз в секунду числа в каждой последовательности циклически сдвигаются на одну позицию влево, то есть числа на позициях <span class="tex-span"><i>i</i> &gt; 1</span> переходят на позиции <span class="tex-span"><i>i</i> - 1</span>, а первое число становится последним.</p><p>Каждую секунду будем выписывать первое число каждой последовательности в новый массив. Для всех чисел <span class="tex-span">1</span> до <span class="tex-span"><i>m</i></span> найдем самый длинный <span class="tex-font-style-bf">подотрезок</span> этого массива, все элементы которого равны этому числу.</p><p>Будем проделывать эту операцию на протяжении <span class="tex-span">10<sup class="upper-index">100</sup></span> секунд. Для каждого числа от <span class="tex-span">1</span> до <span class="tex-span"><i>m</i></span> определите самый длинный из подотрезков, найденных за это время.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке входных данных записаны два числа <span class="tex-span"><i>n</i></span> и&nbsp;<span class="tex-span"><i>m</i></span> (<span class="tex-span">1 ≤ <i>n</i>, <i>m</i> ≤ 100 000</span>)&nbsp;— количество последовательностей и максимальное число, которое может встретиться в последовательностях.</p><p>В следующих <span class="tex-span"><i>n</i></span> строках даны сами последовательности. В каждой строке сначала записано число <span class="tex-span"><i>k</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">1 ≤ <i>k</i><sub class="lower-index"><i>i</i></sub> ≤ 40</span>)&nbsp;— количество чисел в последовательности, а затем ещё <span class="tex-span"><i>k</i><sub class="lower-index"><i>i</i></sub></span> целых положительных чисел&nbsp;— сама последовательность. Гарантируется, что числа в каждой последовательности попарно различны и не превосходят <span class="tex-span"><i>m</i></span>.</p><p><span class="tex-font-style-bf">Суммарная длина</span> всех последовательностей не превосходит <span class="tex-span">200 000</span>.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите <span class="tex-span"><i>m</i></span> чисел, <span class="tex-span"><i>i</i></span>-е из которых равняется длине самого большого подотрезка, все числа в котором равны <span class="tex-span"><i>i</i></span> и который встретился в выписываемом массиве за первые <span class="tex-span">10<sup class="upper-index">100</sup></span> секунд.</p></div><div class="sample-tests"><div class="section-title">Примеры</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>3 4<br>3 3 4 1<br>4 1 3 4 2<br>3 3 1 4<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2<br>1<br>3<br>2<br></pre></div><div class="input"><div class="title">Входные данные</div><pre>5 5<br>2 3 1<br>4 5 1 3 2<br>4 2 1 3 5<br>1 3<br>2 5 3<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>3<br>1<br>4<br>0<br>1<br></pre></div><div class="input"><div class="title">Входные данные</div><pre>4 6<br>3 4 5 3<br>2 6 3<br>2 3 6<br>3 3 6 5<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>0<br>0<br>2<br>1<br>1<br>2<br></pre></div></div></div></div><p>  </p></div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");



    });
</script>
        </div>

    <br style="clear: both;">

    <div id="footer">
        <div><a href="http://codeforces.com/">Codeforces</a> (c) Copyright 2010-2016 Михаил Мирзаянов</div>
        <div>Соревнования по программированию 2.0</div>

    </div>
</div>


</div><div id="datepick-div" style="display: none;"></div><div id="cboxOverlay" style="display: none;"></div><div id="colorbox" class="" style="display: none; padding-bottom: 42px; padding-right: 42px;"><div id="cboxWrapper"><div><div id="cboxTopLeft" style="float: left;"></div><div id="cboxTopCenter" style="float: left;"></div><div id="cboxTopRight" style="float: left;"></div></div><div style="clear: left;"><div id="cboxMiddleLeft" style="float: left;"></div><div id="cboxContent" style="float: left;"><div id="cboxLoadedContent" style="width: 0px; height: 0px; overflow: hidden; float: left;"></div><div id="cboxLoadingOverlay" style="float: left;"></div><div id="cboxLoadingGraphic" style="float: left;"></div><div id="cboxTitle" style="float: left;"></div><div id="cboxCurrent" style="float: left;"></div><div id="cboxNext" style="float: left;"></div><div id="cboxPrevious" style="float: left;"></div><div id="cboxSlideshow" style="float: left;"></div><div id="cboxClose" style="float: left;"></div></div><div id="cboxMiddleRight" style="float: left;"></div></div><div style="clear: left;"><div id="cboxBottomLeft" style="float: left;"></div><div id="cboxBottomCenter" style="float: left;"></div><div id="cboxBottomRight" style="float: left;"></div></div></div><div style="position: absolute; width: 9999px; visibility: hidden; display: none;"></div></div></body></html>
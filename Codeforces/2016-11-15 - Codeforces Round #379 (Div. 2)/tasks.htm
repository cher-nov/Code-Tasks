<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN">
<html><head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta name="X-Csrf-Token" content="ec338c82b2ad1718ac79a604e0e79f52">
    <meta id="viewport" name="viewport" content="width=device-width, initial-scale=0.01">
    <script type="text/javascript" async="" src="tasks_files/ga.js"></script><script type="text/javascript" src="tasks_files/jquery-1.js"></script>
    <script type="application/javascript">
        function adjustViewport() {
            var screenWidthPx = Math.min($(window).width(), window.screen.width);
            var siteWidthPx = 1100; // min width of site
            var ratio = Math.min(screenWidthPx / siteWidthPx, 1.0);
            var viewport = "width=device-width, initial-scale=" + ratio;
            $('#viewport').attr('content', viewport);
            var style = $('<style>html * { max-height: 1000000px; }</style>');
            $('html > head').append(style);
        }

        if ( /Android|webOS|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent) ) {
            adjustViewport();
        }
    </script>
    <meta http-equiv="pragma" content="no-cache">
    <meta http-equiv="expires" content="-1">
    <meta http-equiv="profileName" content="c2">
    <meta name="google-site-verification" content="OTd2dN5x4nS4OPknPI9JFg36fKxjqY0i1PSfFPv_J90">
    <meta property="fb:admins" content="100001352546622">
    <meta property="og:image" content="http://st.codeforces.com/s/45272/images/codeforces-telegram-square.png">
    <link rel="image_src" href="http://st.codeforces.com/s/45272/images/codeforces-telegram-square.png">
    <meta property="og:title" content="Задачи - Codeforces">
    <meta property="og:description" content="">
    
    <meta property="og:site_name" content="Codeforces">
    
    
    
    
    
    <meta name="utc_offset" content="+03:00">
    <meta name="verify-reformal" content="f56f99fd7e087fb6ccb48ef2">
    <title>Задачи - Codeforces</title>
        <meta name="description" content="Codeforces. Соревнования и олимпиады по информатике и программированию, сообщество программистов">
        <meta name="keywords" content="программирование информатика контест олимпиада алгоритмы c++ java графы vkcup">
    <meta name="robots" content="index, follow">

    <link rel="stylesheet" href="tasks_files/font-awesome.css" type="text/css" charset="utf-8">

        <link href="tasks_files/css.css" rel="stylesheet" type="text/css">
        <link href="tasks_files/css_002.css" rel="stylesheet" type="text/css">


    <link rel="shortcut icon" type="image/png" href="http://st.codeforces.com/s/45272/favicon.png">

    <!--CombineResourcesFilter-->
    <link rel="stylesheet" href="tasks_files/prettify.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/clear.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/style.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/ttypography.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/problem-statement.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/second-level-menu.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/roundbox.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/datatable.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/table-form.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/topic.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/jquery.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/facebox.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/jquery_004.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/jquery_002.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/codeforces.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/colorbox.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/jquery_003.css" type="text/css" charset="utf-8">
        <link rel="stylesheet" href="tasks_files/community.css" type="text/css" charset="utf-8">
        <link rel="stylesheet" href="tasks_files/sidebar-menu.css" type="text/css" charset="utf-8">

    <script type="text/javascript" src="tasks_files/prettify.js"></script>
    <script type="text/javascript" src="tasks_files/moment.js"></script>
    <script type="text/javascript" src="tasks_files/pushstream.js"></script>
    <script type="text/javascript" src="tasks_files/jquery_002.js"></script>
    <script type="text/javascript" src="tasks_files/jquery_012.js"></script>
    <script type="text/javascript" src="tasks_files/jquery_006.js"></script>
    <script type="text/javascript" src="tasks_files/jquery.js"></script>
    <script type="text/javascript" src="tasks_files/facebox.js"></script>
    <script type="text/javascript" src="tasks_files/jquery_005.js"></script>
    <script type="text/javascript" src="tasks_files/wysiwyg.js"></script>
    <script type="text/javascript" src="tasks_files/wysiwyg_002.js"></script>
    <script type="text/javascript" src="tasks_files/wysiwyg_003.js"></script>
    <script type="text/javascript" src="tasks_files/wysiwyg_004.js"></script>
    <script type="text/javascript" src="tasks_files/jquery_011.js"></script>
    <script type="text/javascript" src="tasks_files/jquery_008.js"></script>
    <script type="text/javascript" src="tasks_files/jquery_003.js"></script>
    <script type="text/javascript" src="tasks_files/jquery_009.js"></script>
    <script type="text/javascript" src="tasks_files/jquery_007.js"></script>
    <script type="text/javascript" src="tasks_files/jquery_013.js"></script>
    <script type="text/javascript" src="tasks_files/sjcl.js"></script>
    <script type="text/javascript" src="tasks_files/codeforces-options.js"></script>
    <script type="text/javascript" src="tasks_files/codeforces.js"></script>
    <!--/CombineResourcesFilter-->

    <link rel="stylesheet" href="tasks_files/style_003.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="tasks_files/style_002.css" type="text/css" charset="utf-8">

    <script type="text/javascript" src="tasks_files/share.js" charset="utf-8"></script>

    <script type="text/javascript" src="tasks_files/jquery_004.js"></script>
    <script type="text/javascript" src="tasks_files/set.js"></script>

    <!--[if IE]>
    <style>
        #sidebar {
            padding-left: 1em;
            margin: 1em 1em 1em 0;
        }
    </style>
    <![endif]-->

        <script type="text/javascript" src="tasks_files/jquery_010.js"></script>
        <script src="tasks_files/openapi.js" type="text/javascript"></script>

</head>
<body><span style="display:none;" class="csrf-token" data-csrf="ec338c82b2ad1718ac79a604e0e79f52">&nbsp;</span>
<div class="button-up" style="display: none; opacity: 0.7; width: 50px; height:100%; position: fixed; left: 0; top: 0; cursor: pointer; text-align: center; line-height: 35px; color: #d3dbe4; font-weight: bold; font-size: 3.0rem;"><i class="icon-circle-arrow-up"></i></div>

<!-- Codeforces JavaScripts. -->
<script type="text/javascript">
    var queryMobile = Codeforces.queryString.mobile;
    if (queryMobile === "true" || queryMobile === "false") {
        Codeforces.putToStorage("useMobile", queryMobile == "true");
    } else {
        var useMobile = Codeforces.getFromStorage("useMobile");
        if (useMobile === true || useMobile === false) {
            if (useMobile != false) {
                Codeforces.redirect(Codeforces.updateUrlParameter(document.location.href, "mobile", useMobile));
            }
        }
    }
</script>
<script type="text/javascript">
    VK.init({apiId: 1961905});
</script>
<script type="text/javascript">
    if (window.parent.frames.length > 0) {
        window.stop();
    }
</script>

    <script type="text/javascript">
        $(document).ready(function () {
    (function () {
        jQuery.expr[':'].containsCI = function(elem, index, match) {
            return !match || !match.length || match.length < 4 || !match[3] || (
                    elem.textContent || elem.innerText || jQuery(elem).text() || ''
            ).toLowerCase().indexOf(match[3].toLowerCase()) >= 0;
        }
    }(jQuery));

    $.ajaxPrefilter(function(options, originalOptions, xhr) {
        var csrf = Codeforces.getCsrfToken();

        if (csrf) {
            var data = originalOptions.data;
            if (originalOptions.data !== undefined) {
                if (Object.prototype.toString.call(originalOptions.data) === '[object String]') {
                    data = $.deparam(originalOptions.data);
                }
            } else {
                data = {};
            }
            options.data = $.param($.extend(data, { csrf_token: csrf }));
        }
    });

    window.getCodeforcesServerTime = function(callback) {
        $.post("/data/time", {}, callback, "json");
    }

    window.updateTypography = function () {
        $("div.ttypography code").addClass("tt");
        $("div.ttypography pre>code").addClass("prettyprint").removeClass("tt");
        $("div.ttypography table").addClass("bordertable");
        prettyPrint();
    }

    $.ajaxSetup({ scriptCharset: "utf-8" ,contentType: "application/x-www-form-urlencoded; charset=UTF-8", headers: {
        'X-Csrf-Token': Codeforces.getCsrfToken()
    }});

    window.updateTypography();

    Codeforces.signForms();

    setTimeout(function() {
        $(".second-level-menu-list").lavaLamp({
            fx: "backout",
            speed: 1000
        });
    }, 0);


    Codeforces.countdown();
    $("a[rel='photobox']").colorbox();

        var count = 0;

        function getDelay() {
            var delay = 0;
            var last = Codeforces.getFromStorage("LastOnlineTimeUpdaterMillis", 0);
            if (last && last != null) {
                var period = count < 20 ? 180 * 1000 : 360 * 1000;
                delay = period - (new Date().getTime() - last);
                if (delay < 0)
                    delay = 0;
            }
            return delay;
        }

        window.setInterval(function () {
            if (getDelay() <= 0 && count < 120) {
                ++count;
                Codeforces.ping("/data/update-online");
            }
        }, 5000);

        var handle = "cher-nov";
        $("a.rated-user:contains(" + handle + "), span.participant:contains(" + handle + ")").each(function () {
            if ($(this).text() == handle) {
                var td = $(this).parent();
                var tr = $(this).parent().parent();
                if (td.is("td") && tr.is("tr")) {
                    tr.addClass("highlighted-row");
                }
            }
        });

    function showAnnouncements(json) {
        info("j=" + JSON.stringify(json));

        if (json.t != "a") {
            return;
        }
        console.log("Got announcement from channel");
        setTimeout(function() {
            Codeforces.showAnnouncements(json.d, "ru");
        }, Math.random() * 500);
    }
    if (Codeforces.getParticipantChannel()) {
        Codeforces.subscribe(Codeforces.getParticipantChannel(), function(json) {
            showAnnouncements(json);
        });
    }

    if (Codeforces.getContestChannel()) {
        Codeforces.subscribe(Codeforces.getContestChannel(), function(json) {
            showAnnouncements(json);
        });
    }

    if (Codeforces.getGlobalChannel()) {
        Codeforces.subscribe(Codeforces.getGlobalChannel(), function(json) {
            showAnnouncements(json);
        });
    }

    if (Codeforces.getUserChannel()) {
        Codeforces.subscribe(Codeforces.getUserChannel(), function(json) {
            showAnnouncements(json);
        });
    }

    $(".clickable-title").click(function() {
        Codeforces.alert($(this).attr("title"));
    }).css("position", "relative").css("bottom", "3px");


    Codeforces.reformatTimes();
    Codeforces.initializePubSub();

    Codeforces.setupSpoilers();
    Codeforces.setupTutorials("/data/problemTutorial");
        });
    </script>

<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-743380-5']);
  _gaq.push(['_trackPageview']);

  (function () {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = (document.location.protocol == 'https:' ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>


<div id="body">
<div style="width: 950px; margin: 0 auto;">
    <div id="header" style="position: relative;">
        <div style="float:left;">
                 <a href="http://codeforces.com/"><img src="tasks_files/codeforces-logo-with-telegram.png"></a>
        </div>
        <div class="lang">
            <div style="text-align: right;">
                <a href="http://codeforces.com/contest/734/problems?locale=en"><img src="tasks_files/gb.png" title="In English" alt="In English"></a>
                <a href="http://codeforces.com/contest/734/problems?locale=ru"><img src="tasks_files/ru.png" title="По-русски" alt="По-русски"></a>
            </div>
        </div>
        <br style="clear: both;">
    </div>

    <div style="text-align: center; font-size: 1.8rem; margin-bottom: 0.5em;" class="caption">Codeforces Round #379 (Div. 2)</div>
    <div style="border-top: 1px solid #ccc; height: 1em;"></div>

        <div style="margin-bottom: 4em;page-break-after: always;">

<div class="problemindexholder" problemindex="A">
<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">A. Антон и Даник</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>1 секунда</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Антону нравится играть в шахматы. Поэтому он часто играет в эту увлекательную игру со своим другом Даником. </p><p>Однажды, Антон с Даником сыграли <span class="tex-span"><i>n</i></span>
 партий подряд. Для каждой партии друзьям известно, кто в ней 
победил&nbsp;— Антон или Даник. При этом ни одна из партий не окончилась
 вничью.</p><p>Антону стало интересно, кто же выиграл больше раз&nbsp;— он или Даник? Помогите Антону и определите это.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке входных данных находится единственное число <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 100 000</span>)&nbsp;— количество партий, которое сыграли Антон с Даником.</p><p>Во второй строке входных данных находится строка <span class="tex-span"><i>s</i></span>, состоящая ровно из <span class="tex-span"><i>n</i></span> заглавных латинских букв «<span class="tex-font-style-tt">A</span>» или «<span class="tex-font-style-tt">D</span>»&nbsp;— исходы шахматных партий. При этом <span class="tex-span"><i>i</i></span>-й символ строки <span class="tex-span"><i>s</i></span> равен «<span class="tex-font-style-tt">A</span>», если в <span class="tex-span"><i>i</i></span>-й партии победил Антон, или «<span class="tex-font-style-tt">D</span>», если в <span class="tex-span"><i>i</i></span>-й партии победил Даник.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Если Антон выиграл большее количество партий, чем Даник, выведите «<span class="tex-font-style-tt">Anton</span>» (без кавычек).</p><p>Если Даник выиграл большее количество партий, чем Антон, выведите «<span class="tex-font-style-tt">Danik</span>» (без кавычек).</p><p>Если Антон и Даник выиграли поровну партий, выведите «<span class="tex-font-style-tt">Friendship</span>» (без кавычек).</p></div><div class="sample-tests"><div class="section-title">Примеры</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>6<br>ADAAAA<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>Anton<br></pre></div><div class="input"><div class="title">Входные данные</div><pre>7<br>DDDAADA<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>Danik<br></pre></div><div class="input"><div class="title">Входные данные</div><pre>6<br>DADADA<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>Friendship<br></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом примере Антон выиграл <span class="tex-span">6</span> партий, а Даник&nbsp;— всего одну. Следовательно, ответ&nbsp;— «<span class="tex-font-style-tt">Anton</span>».</p><p>Во втором примере Антон выиграл <span class="tex-span">3</span> партии, а Даник&nbsp;— <span class="tex-span">4</span>. Значит, ответ&nbsp;— «<span class="tex-font-style-tt">Danik</span>».</p><p>В третьем Антон и Даник выиграли по <span class="tex-span">3</span> партии. Поэтому ответ&nbsp;— «<span class="tex-font-style-tt">Friendship</span>».</p></div></div><p>  </p></div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");



    });
</script>
        </div>
        <div style="margin-bottom: 4em;page-break-after: always;">

<div class="problemindexholder" problemindex="B">
<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">B. Антон и цифры</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>1 секунда</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Недавно Антон нашёл у себя дома коробку с цифрами. В коробке было <span class="tex-span"><i>k</i><sub class="lower-index">2</sub></span> цифр <span class="tex-span">2</span>, <span class="tex-span"><i>k</i><sub class="lower-index">3</sub></span> цифр <span class="tex-span">3</span>, <span class="tex-span"><i>k</i><sub class="lower-index">5</sub></span> цифр <span class="tex-span">5</span> и <span class="tex-span"><i>k</i><sub class="lower-index">6</sub></span> цифр <span class="tex-span">6</span>.</p><p>Любимые числа Антона&nbsp;— <span class="tex-span">32</span> и <span class="tex-span">256</span>. Поэтому он, конечно же, решил составить из цифр, находившихся в коробке, свои любимые числа. При этом он хочет, чтобы сумма составленных чисел была как можно больше. Помогите Антону найти эту сумму!</p><p>Каждую цифру можно использовать не более одного раза, то есть в составленных Анотоном числах должно быть не больше <span class="tex-span"><i>k</i><sub class="lower-index">2</sub></span> цифр <span class="tex-span">2</span>, <span class="tex-span"><i>k</i><sub class="lower-index">3</sub></span> цифр <span class="tex-span">3</span> и так далее. Неиспользованные цифры в сумме не учитываются.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В единственной строке входных данных находятся четыре целых числа <span class="tex-span"><i>k</i><sub class="lower-index">2</sub></span>, <span class="tex-span"><i>k</i><sub class="lower-index">3</sub></span>, <span class="tex-span"><i>k</i><sub class="lower-index">5</sub></span>, <span class="tex-span"><i>k</i><sub class="lower-index">6</sub></span>&nbsp;— количество цифр <span class="tex-span">2</span>, <span class="tex-span">3</span>, <span class="tex-span">5</span> и <span class="tex-span">6</span> соответственно (<span class="tex-span">0 ≤ <i>k</i><sub class="lower-index">2</sub>, <i>k</i><sub class="lower-index">3</sub>, <i>k</i><sub class="lower-index">5</sub>, <i>k</i><sub class="lower-index">6</sub> ≤ 5·10<sup class="upper-index">6</sup></span>).</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>В единственной строке выходных данных выведите единственное число&nbsp;— максимальную сумму любимых чисел Антона, которые можно составить с помощью цифр из коробки.</p></div><div class="sample-tests"><div class="section-title">Примеры</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>5 1 3 4<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>800<br></pre></div><div class="input"><div class="title">Входные данные</div><pre>1 1 1 1<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>256<br></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом примере есть пять цифр <span class="tex-span">2</span>, одна цифра <span class="tex-span">3</span>, три цифры <span class="tex-span">5</span> и четыре цифры <span class="tex-span">6</span>. Антон может из этих цифр составить три числа <span class="tex-span">256</span> и одно число <span class="tex-span">32</span>. Тогда ответ будет равен <span class="tex-span">256 + 256 + 256 + 32 = 800</span>. Заметьте, что после составления чисел осталась одна цифра <span class="tex-span">2</span> и одна цифра <span class="tex-span">6</span>. В ответе они никак не учитываются.</p><p>Во втором примере выгоднее всего составить одно число <span class="tex-span">256</span>. Поэтому ответ равен <span class="tex-span">256</span>.</p></div></div><p>  </p></div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");



    });
</script>
        </div>
        <div style="margin-bottom: 4em;page-break-after: always;">

<div class="problemindexholder" problemindex="C">
<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">C. Антон и зельеварение</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>4 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Антон играет в одну очень интересную компьютерную игру, и сейчас он застрял на одном из уровней. Чтобы пройти на следующий уровень, Антону надо приготовить <span class="tex-span"><i>n</i></span> зелий.</p><p>У Антона в распоряжении есть котёл, который может сварить одно зелье за <span class="tex-span"><i>х</i></span> секунд. Дополнительно, имеются заклинания двух типов, которые помогают ускорить процесс приготовления зелий: </p><ol> <li> Заклинания этого типа ускоряют приготовление в котле одного зелья. Всего существует <span class="tex-span"><i>m</i></span> таких заклинаний, <span class="tex-span"><i>i</i></span>-е из них стоит <span class="tex-span"><i>b</i><sub class="lower-index"><i>i</i></sub></span> единиц маны и делает так, чтобы каждое зелье варилось <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> секунд вместо <span class="tex-span"><i>x</i></span>. </li><li> Заклинания этого типа варят несколько зелий мгновенно. Всего существует <span class="tex-span"><i>k</i></span> таких заклинаний, <span class="tex-span"><i>i</i></span>-е из которых стоит <span class="tex-span"><i>d</i><sub class="lower-index"><i>i</i></sub></span> единиц маны и мгновенно варит <span class="tex-span"><i>c</i><sub class="lower-index"><i>i</i></sub></span> зелий. </li></ol><p>Антон может использовать <span class="tex-font-style-bf">не более одного</span> заклинания первого вида и <span class="tex-font-style-bf">не более одного</span> заклинания второго вида, при этом суммарная стоимость заклинаний не должна превышать <span class="tex-span"><i>s</i></span> единиц маны. Считается, что заклинания используются мгновенно и непосредственно перед началом варки зелий.</p><p>Антон хочет как можно быстрее перейти на следующий уровень, поэтому ему интересно, за какое минимальное время можно сварить не менее <span class="tex-span"><i>n</i></span> зелий.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке входных данных находятся три целых числа <span class="tex-span"><i>n</i></span>, <span class="tex-span"><i>m</i></span>, <span class="tex-span"><i>k</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 2·10<sup class="upper-index">9</sup>, 1 ≤ <i>m</i>, <i>k</i> ≤ 2·10<sup class="upper-index">5</sup></span>)&nbsp;— количество зелий, которые надо сварить, количество заклинаний первого и количество заклинаний второго типа соответственно.</p><p>Во второй строке входных данных находятся два целых числа <span class="tex-span"><i>x</i></span> и <span class="tex-span"><i>s</i></span> (<span class="tex-span">2 ≤ <i>x</i> ≤ 2·10<sup class="upper-index">9</sup>, 1 ≤ <i>s</i> ≤ 2·10<sup class="upper-index">9</sup></span>)&nbsp;— время варки одного зелья и количество единиц маны соответственно.</p><p>В третьей строке даны <span class="tex-span"><i>m</i></span> целых чисел <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">1 ≤ <i>a</i><sub class="lower-index"><i>i</i></sub> &lt; <i>x</i></span>)&nbsp;— время, за которое будет вариться одно зелье, если использовать <span class="tex-span"><i>i</i></span>-е заклинание первого вида.</p><p>В четвертой строке записаны <span class="tex-span"><i>m</i></span> целых чисел <span class="tex-span"><i>b</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">1 ≤ <i>b</i><sub class="lower-index"><i>i</i></sub> ≤ 2·10<sup class="upper-index">9</sup></span>)&nbsp;— стоимость <span class="tex-span"><i>i</i></span>-го заклинания первого вида в единицах маны.</p><p>В пятой строке находятся <span class="tex-span"><i>k</i></span> целых чисел <span class="tex-span"><i>c</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">1 ≤ <i>c</i><sub class="lower-index"><i>i</i></sub> ≤ <i>n</i></span>)&nbsp;— количество зелий, которое будет сварено мгновенно при использовании <span class="tex-span"><i>i</i></span>-го заклинания второго типа. Гарантируется, что <span class="tex-span"><i>c</i><sub class="lower-index"><i>i</i></sub></span> <span class="tex-font-style-bf">упорядочены по неубыванию</span>, то есть <span class="tex-span"><i>c</i><sub class="lower-index"><i>i</i></sub> ≤ <i>c</i><sub class="lower-index"><i>j</i></sub></span>, если <span class="tex-span"><i>i</i> &lt; <i>j</i></span>.</p><p>В шестой строке входных данных находятся <span class="tex-span"><i>k</i></span> целых чисел <span class="tex-span"><i>d</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">1 ≤ <i>d</i><sub class="lower-index"><i>i</i></sub> ≤ 2·10<sup class="upper-index">9</sup></span>)&nbsp;— стоимость <span class="tex-span"><i>i</i></span>-го заклинания второго типа в единицах маны. Гарантируется, что <span class="tex-span"><i>d</i><sub class="lower-index"><i>i</i></sub></span> <span class="tex-font-style-bf">упорядочены по неубыванию</span>, то есть <span class="tex-span"><i>d</i><sub class="lower-index"><i>i</i></sub> ≤ <i>d</i><sub class="lower-index"><i>j</i></sub></span>, если <span class="tex-span"><i>i</i> &lt; <i>j</i></span>.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>В единственной строке выходных данных выведите одно число&nbsp;— минимальное время, которое нужно потратить, чтобы сварить <span class="tex-span"><i>n</i></span> зелий.</p></div><div class="sample-tests"><div class="section-title">Примеры</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>20 3 2<br>10 99<br>2 4 3<br>20 10 40<br>4 15<br>10 80<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>20<br></pre></div><div class="input"><div class="title">Входные данные</div><pre>20 3 2<br>10 99<br>2 4 3<br>200 100 400<br>4 15<br>100 800<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>200<br></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом примере выгоднее всего будет применить второе заклинание первого типа, которое стоит <span class="tex-span">10</span> единиц маны. В таком случае каждое зелье будет вариться <span class="tex-span">4</span> секунды. Также мы используем второе заклинание второго типа, чтобы мгновенно сварить <span class="tex-span">15</span> зелий за <span class="tex-span">80</span> единиц маны. Итого мы потратим <span class="tex-span">10 + 80 = 90</span> единиц маны, а все зелья сварятся за <span class="tex-span">4·5 = 20</span> секунд (так как <span class="tex-span">15</span> зелий мы сварили мгновенно, а оставшиеся <span class="tex-span">5</span> будут вариться по <span class="tex-span">4</span> секунды). </p><p>Во втором примере все заклинания стоят больше единиц маны, чем у нас есть, поэтому мы не можем использовать ни одно из заклинаний. Мы просто варим <span class="tex-span">20</span> зелий по <span class="tex-span">10</span> секунд каждое, и ответ равен <span class="tex-span">20·10 = 200</span> секунд.</p></div></div><p>  </p></div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");



    });
</script>
        </div>
        <div style="margin-bottom: 4em;page-break-after: always;">

<div class="problemindexholder" problemindex="D">
<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">D. Антон и шахматы</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>4 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Антону нравится играть в шахматы. А еще ему нравится программирование. Именно поэтому Антон решил написать шахматную программу. Однако, шахматы на обычной доске <span class="tex-span">8</span> на <span class="tex-span">8</span> кажутся ему слишком простыми, поэтому он решил использовать бесконечную шахматную доску.</p><p>Первая проблема, с которой столкнулся Антон&nbsp;— проверка на шах королю. Антон не знает, как её реализовать и обратился к вам за помощью.</p><p>Предположим, на бесконечной шахматной доске находится один белый король и несколько чёрных фигур. Из чёрных фигур есть только ладьи, слоны и ферзи, поскольку другие шахматные фигуры Антон ещё не реализовал в своей программе. Считается, что белый король находится под шахом, если какая-либо чёрная фигура может попасть на клетку с белым королём за один ход.</p><p>Помогите Антону и напишите программу, которая для каждой заданной позиции определяет, находится ли белый король под шахом.</p><p>Напоминаем, как ходят шахматные фигуры: </p><ul> <li> Слон ходит на любое количество клеток по любой диагонали. Он не может «перепрыгивать» через фигуры, то есть на клетках, через которые он проходит, не может стоять никакая другая чёрная фигура. </li><li> Ладья ходит на любое количество клеток по вертикали или горизотали. Она также не может «перепрыгивать» через фигуры. </li><li> Ферзь ходит на любое количество клеток как по горизонали и вертикали, так и по диагонали. Он тоже не может «перепрыгивать» через фигуры. </li></ul></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке входных данных находится одно целое цисло <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 500 000</span>)&nbsp;— количество чёрных фигур.</p><p>Во второй строке входных данных находятся два целых числа <span class="tex-span"><i>x</i><sub class="lower-index">0</sub></span> и <span class="tex-span"><i>y</i><sub class="lower-index">0</sub></span> (<span class="tex-span"> - 10<sup class="upper-index">9</sup> ≤ <i>x</i><sub class="lower-index">0</sub>, <i>y</i><sub class="lower-index">0</sub> ≤ 10<sup class="upper-index">9</sup></span>)&nbsp;— координаты белого короля.</p><p>В следующих <span class="tex-span"><i>n</i></span> строках находится символ, обозначающий тип фигуры, а также два целых числа <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub></span> и <span class="tex-span"><i>y</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span"> - 10<sup class="upper-index">9</sup> ≤ <i>x</i><sub class="lower-index"><i>i</i></sub>, <i>y</i><sub class="lower-index"><i>i</i></sub> ≤ 10<sup class="upper-index">9</sup></span>)&nbsp;— описание <span class="tex-span"><i>i</i></span>-й чёрной фигуры. Символ «<span class="tex-font-style-tt">B</span>» означает слона, «<span class="tex-font-style-tt">R</span>»&nbsp;— ладью, «<span class="tex-font-style-tt">Q</span>»&nbsp;— ферзя. Гарантируется, что никакие две фигуры не находятся в одной клетке.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>В единственной строке выходных данных выведите «<span class="tex-font-style-tt">YES</span>» (без кавычек), если белый король находится под шахом, и «<span class="tex-font-style-tt">NO</span>» (без кавычек) в противном случае.</p></div><div class="sample-tests"><div class="section-title">Примеры</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>2<br>4 2<br>R 1 1<br>B 1 5<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>YES<br></pre></div><div class="input"><div class="title">Входные данные</div><pre>2<br>4 2<br>R 3 3<br>B 1 5<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>NO<br></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>Иллюстрация к первому примеру: </p><center> <img class="tex-graphics" src="tasks_files/9408be50f47e693db5ec6e7290235a3bc878e147.png" style="max-width: 100.0%;max-height: 100.0%;"> </center> Здесь видно, что король находится под шахом, так как черный слон может за один ход попасть на клетку с белым королем. Поэтому ответ&nbsp;— «<span class="tex-font-style-tt">YES</span>».<p>Иллюстрация ко второму примеру: </p><center> <img class="tex-graphics" src="tasks_files/2b625b4a73e1b0f091760b1a5d2c6e549be6a8d7.png" style="max-width: 100.0%;max-height: 100.0%;"> </center> Здесь слон не может за один ход попасть на клетку с белым королем, так как ему «мешает» черная ладья, а слон не умеет «перепрыгивать» через фигуры. Ладья также не может сделать этого, так как она не умеет ходить по диагонали. Следовательно, король не находится под шахом и ответ&nbsp;— «<span class="tex-font-style-tt">NO</span>».</div></div><p>  </p></div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");



    });
</script>
        </div>
        <div style="margin-bottom: 4em;page-break-after: always;">

<div class="problemindexholder" problemindex="E">
<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">E. Антон и дерево</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>3 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Антон посадил в своём саду дерево. Напоминаем, что дерево&nbsp;— это связный неориентированный граф, не содержащий циклов.</p><p>Вскоре дерево выросло. Каждая из его <span class="tex-span"><i>n</i></span> вершин оказалась покрашена либо в чёрный, либо в белый цвет. Однако, Антону не нравятся разноцветные деревья, и поэтому он решил покрасить дерево так, чтобы оно было либо полностью белым, либо полностью чёрным.</p><p>Для изменения цвета вершин дерева Антону доступна только одна операция, обозначим её как <span class="tex-span"><i>paint</i>(<i>v</i>)</span>, где <span class="tex-span"><i>v</i></span>&nbsp;— некоторая вершина дерева. Эта операция перекрашивает в противоположный цвет все такие вершины <span class="tex-span"><i>u</i></span>, что на кратчайшем пути от <span class="tex-span"><i>u</i></span> до <span class="tex-span"><i>v</i></span> все вершины покрашены в один цвет (при этом сами вершины <span class="tex-span"><i>u</i></span> и <span class="tex-span"><i>v</i></span> также учитываются). Например, дерево</p><center> <img class="tex-graphics" src="tasks_files/4318cb13b9cf89a859131b68d7062dcb9ceff5c3.png" style="max-width: 100.0%;max-height: 100.0%;"> </center><p>после применения операции <span class="tex-span"><i>paint</i>(3)</span> станет следующим:</p><center> <img class="tex-graphics" src="tasks_files/f60196e83165422461470af23be0d1060fadd1f8.png" style="max-width: 100.0%;max-height: 100.0%;"> </center><p>Антону стало интересно, за какое минимальное количество операций покраски ему удастся сделать так, чтобы дерево стало покрашено в один цвет. Помогите ему найти это число!</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке входных данных находится одно целое число <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 200 000</span>)&nbsp;— количество вершин в дереве.</p><p>Во второй строке входных данных находятся <span class="tex-span"><i>n</i></span> целых чисел <span class="tex-span"><i>color</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">0 ≤ <i>color</i><sub class="lower-index"><i>i</i></sub> ≤ 1</span>)&nbsp;— цвета вершин. Если <span class="tex-span"><i>color</i><sub class="lower-index"><i>i</i></sub> = 0</span>, это значит, что <span class="tex-span"><i>i</i></span>-я вершина покрашена в белый цвет, если <span class="tex-span"><i>color</i><sub class="lower-index"><i>i</i></sub> = 1</span>, это значит, что <span class="tex-span"><i>i</i></span>-я вершина покрашена в чёрный цвет.</p><p>В каждой из следующих <span class="tex-span"><i>n</i> - 1</span> строк входных данных находится пара целых чисел <span class="tex-span"><i>u</i><sub class="lower-index"><i>i</i></sub></span> и <span class="tex-span"><i>v</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">1 ≤ <i>u</i><sub class="lower-index"><i>i</i></sub>, <i>v</i><sub class="lower-index"><i>i</i></sub> ≤ <i>n</i>, <i>u</i><sub class="lower-index"><i>i</i></sub> ≠ <i>v</i><sub class="lower-index"><i>i</i></sub></span>)&nbsp;— рёбра дерева. Гарантируется, что все пары <span class="tex-span">(<i>u</i><sub class="lower-index"><i>i</i></sub>, <i>v</i><sub class="lower-index"><i>i</i></sub>)</span> различны, то есть граф не содержит кратных рёбер.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>В единственной строке выходных данных выведите единственное число&nbsp;— минимальное количество операций покраски, которое необходимо Антону, чтобы дерево стало либо полностью белым, либо полностью черным.</p></div><div class="sample-tests"><div class="section-title">Примеры</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>11<br>0 0 0 1 1 0 1 0 0 1 1<br>1 2<br>1 3<br>2 4<br>2 5<br>5 6<br>5 7<br>3 8<br>3 9<br>3 10<br>9 11<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2<br></pre></div><div class="input"><div class="title">Входные данные</div><pre>4<br>0 0 0 0<br>1 2<br>2 3<br>3 4<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>0<br></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом примере дерево такое же, как и на рисунке в условии. Если применить к нему сначала операцию <span class="tex-span"><i>paint</i>(3)</span>, потом операцию <span class="tex-span"><i>paint</i>(6)</span>, то оно будет полностью покрашено в черный цвет, поэтому ответ&nbsp;— <span class="tex-span">2</span>.</p><p>Во втором примере дерево уже и так полностью покрашено в белый цвет, и к нему не придется применять ни одной операции покраски, поэтому ответ&nbsp;— <span class="tex-span">0</span>. </p></div></div><p>  </p></div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");



    });
</script>
        </div>
        <div style="margin-bottom: 2em;">

<div class="problemindexholder" problemindex="F">
<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">F. Антон и школа</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Антон учится в школе. Его любимый предмет&nbsp;— массивоведение. Этот предмет ему легко даётся, он обычно решает задачи по массивоведению очень быстро.</p><p>Однажды, когда Антон в очередной раз справился со всеми задачами по массивоведению за десять минут, учительница дала ему задачу посложнее: даны два массива <span class="tex-span"><i>b</i></span> и <span class="tex-span"><i>c</i></span> длины <span class="tex-span"><i>n</i></span>, и надо найти массив <span class="tex-span"><i>a</i></span> такой, что</p><p><img class="tex-formula" src="tasks_files/ee37ea7305b400fe60af2d182922dd0d6c38794e.png" style="max-width: 100.0%;max-height: 100.0%;" align="middle"></p><p>где <span class="tex-span"><i>a</i>&nbsp;<i>and</i>&nbsp;<i>b</i></span> обозначает операцию побитового И, а <span class="tex-span"><i>a</i>&nbsp;<i>or</i>&nbsp;<i>b</i></span> обозначает операцию побитового ИЛИ.</p><p>Хотя Антон обычно решает задачи по массивоведению очень быстро, эта задача оказалась ему не по зубам. Поэтому он решил обратиться к Вам за помощью. Помогите Антону решить эту задачу!</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке входных данных находится одно целое число <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 200 000</span>)&nbsp;— размер массивов <span class="tex-span"><i>b</i></span> и <span class="tex-span"><i>c</i></span>.</p><p>Во второй строке входных данных находится <span class="tex-span"><i>n</i></span> целых чисел <span class="tex-span"><i>b</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">0 ≤ <i>b</i><sub class="lower-index"><i>i</i></sub> ≤ 10<sup class="upper-index">9</sup></span>)&nbsp;— элементы массива <span class="tex-span"><i>b</i></span>.</p><p>В третьей строке входных данных находится <span class="tex-span"><i>n</i></span> целых чисел <span class="tex-span"><i>c</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">0 ≤ <i>c</i><sub class="lower-index"><i>i</i></sub> ≤ 10<sup class="upper-index">9</sup></span>)&nbsp;— элементы массива <span class="tex-span"><i>c</i></span>.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Если решения не существует, выведите одно число <span class="tex-span"> - 1</span>.</p><p>Иначе в единственной строке выходных данных выведите через пробел <span class="tex-span"><i>n</i></span> целых неотрицательных чисел <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span>&nbsp;— элементы массива <span class="tex-span"><i>a</i></span>. Если решений несколько, разрешается вывести любое из них.</p></div><div class="sample-tests"><div class="section-title">Примеры</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>4<br>6 8 4 4<br>16 22 10 10<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>3 5 1 1 <br></pre></div><div class="input"><div class="title">Входные данные</div><pre>5<br>8 25 14 7 16<br>19 6 9 4 25<br></pre></div><div class="output"><div class="title">Выходные данные</div><pre>-1<br></pre></div></div></div></div><p>  </p></div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");



    });
</script>
        </div>

    <br style="clear: both;">

    <div id="footer">
        <div><a href="http://codeforces.com/">Codeforces</a> (c) Copyright 2010-2016 Михаил Мирзаянов</div>
        <div>Соревнования по программированию 2.0</div>

    </div>
</div>


</div><div id="datepick-div" style="display: none;"></div><div id="cboxOverlay" style="display: none;"></div><div id="colorbox" class="" style="display: none; padding-bottom: 42px; padding-right: 42px;"><div id="cboxWrapper"><div><div id="cboxTopLeft" style="float: left;"></div><div id="cboxTopCenter" style="float: left;"></div><div id="cboxTopRight" style="float: left;"></div></div><div style="clear: left;"><div id="cboxMiddleLeft" style="float: left;"></div><div id="cboxContent" style="float: left;"><div id="cboxLoadedContent" style="width: 0px; height: 0px; overflow: hidden; float: left;"></div><div id="cboxLoadingOverlay" style="float: left;"></div><div id="cboxLoadingGraphic" style="float: left;"></div><div id="cboxTitle" style="float: left;"></div><div id="cboxCurrent" style="float: left;"></div><div id="cboxNext" style="float: left;"></div><div id="cboxPrevious" style="float: left;"></div><div id="cboxSlideshow" style="float: left;"></div><div id="cboxClose" style="float: left;"></div></div><div id="cboxMiddleRight" style="float: left;"></div></div><div style="clear: left;"><div id="cboxBottomLeft" style="float: left;"></div><div id="cboxBottomCenter" style="float: left;"></div><div id="cboxBottomRight" style="float: left;"></div></div></div><div style="position: absolute; width: 9999px; visibility: hidden; display: none;"></div></div></body></html>